local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local UStaffAptitude = JRequire "Dev.Staff.UStaffAptitude"
local UStaffSkill = JRequire "Dev.Staff.UStaffSkill"
local UStaffHalo = JRequire "Dev.Staff.UStaffHalo"
local UStaffTalent = JRequire "Dev.Staff.UStaffTalent"
local UStaffEquip = JRequire "Dev.Staff.UStaffEquip"
local MStaff = JRequire "Dev.Staff.MStaff"
local CStaff = JRequire "Dev.Staff.CStaff"
local MMain = JRequire "Dev.Main.MMain"
local MBag = JRequire "Dev.Bag.MBag"
local TabGroup = JRequire "Dev.Common.TabGroup"
local CCommon = JRequire "Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local JTweenerManager = CS.JTween.JTweenerManager

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local HEIGHT = 25
local WIDTH = 570
local levelUpAttrActorId = 10001
local bobyUpActorId = 10113
local PromoteItemId = 22
local PromoteUseType = 6

local STAFFMAXCOLOR = Csv.Const(Define.Const.StaffMax)[4]
local EFFECT_ID = 18
local LVLUP_ONEKEY = 10 -- 一键升多少级
local MAX_TAG = 6		--标签数量最大值

function _M:BeforeDestroy()
	if self.ChooseMoudle ~= nil then
		self.ChooseMoudle:delete()
		self.ChooseMoudle = nil
	end
	if self.tabHandle ~= nil then
		self.tabHandle:delete()
		self.tabHandle = nil
	end
end 

function _P.OnChoose(self, funcId)
	if self.ChooseMoudle ~= nil then
		self.ChooseMoudle:Destroy()
		self.ChooseMoudle:delete()
		self.ChooseMoudle = nil
	end

	if funcId == Define.SysId.Staff_Book then
		self.ChooseMoudle = UStaffAptitude.new(self.PageNode,self.mID, function(...)
			self:RegistRedpoint(...)
		end)
	elseif funcId == Define.SysId.Staff_Skill then
		self.ChooseMoudle = UStaffSkill.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Aureole then
		self.ChooseMoudle = UStaffHalo.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Talent then
		self.ChooseMoudle = UStaffTalent.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Equip then
		self.ChooseMoudle = UStaffEquip.new(self.PageNode,self.mID)
	end

	MStaff.LastChoose = funcId
end

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(id,chooseFuncId)
	local moudle = self:CreateMoudle(self._RootNode, "M_Staff_UDetails")
	self.mMoudle = moudle
	local data = MStaff.GetStaffDataByID(id)
	local person = Csv.Personnel[id]
	self.mID = id
	self.Lvl10 = false

	for i = 1,person.star do
		moudle:Get("Star"..i).Activity = true
	end

	--在新手引导情况下会导致声音冲突，冲突处理
	if MMain.curGuidID ~= 1005 then
		SoundMgr.PlaySystem(person.sound)
	end

	local TextTitle = moudle:Get("C_Text")
	TextTitle.Text = Csv.Text("staff_details")
	local TextCost = moudle:Get("CostText")
	TextCost.Text = LuaUtil.NumberFormat(MBag.GetItemNum(Define.AssetsType.Coin))
	self.mCoin = MBag.GetItemNum(Define.AssetsType.Coin)
	local TextName = moudle:Get("StaffName")
	self.mTextName = TextName
	TextName.Text = MStaff.GetStaffName(id)--person.name

	local TextDetail = moudle:Get("textDetail")
	TextDetail.Text = Csv.Text("staff_detail")

	local TextLevel = moudle:Get("Level")
	TextLevel.Text = Csv.Text("staff_level")
	local TextSpeciality = moudle:Get("Speciality")
	TextSpeciality.Text = Csv.Text("staff_speciality")
	local TextProperty = moudle:Get("Property")
	TextProperty.Text = Csv.Text("staff_property")
	local TextAttri1 = moudle:Get("Attri1")
	TextAttri1.Text = Csv.Text("staff_attri1")
	local TextAttri2 = moudle:Get("Attri2")
	TextAttri2.Text = Csv.Text("staff_attri2")
	local TextAttri3 = moudle:Get("Attri3")
	TextAttri3.Text = Csv.Text("staff_attri3")
	local TextAttri4 = moudle:Get("Attri4")
	TextAttri4.Text = Csv.Text("staff_attri4")

	self.GGZLtext = moudle:Get("GGZLtext")
	local dataStaff = MStaff.StaffTable[id]
	if dataStaff then
		self.mPower = dataStaff.power
		self.GGZLtext.Text = dataStaff.power
		self.GGZLtext:AddContentSizeFitter():SetLayoutHorizontal()
	end

	self.TextMax = moudle:Get("MaxText")
	self.TextMax.Text = Csv.Text("staff_lvmax")

	local ImgIcon = moudle:Get("StaffIcon")
	ImgIcon.SpriteName = person.asset
	local TextSpecialityData = moudle:Get("SpecialityData")
	TextSpecialityData.Text = person.specialty

	local BtnClose = moudle:Get("C_Back_Btn")
	BtnClose:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		-- SoundMgr.DestroySystem()
		self:Destroy()
		end, nil, 1.2)

	local BtnRule = moudle:Get("BtnRule")
	BtnRule:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("URuleTips",Define.SysId.Staff)
		end, nil, 1.2)

	if data ~= nil then
		local BtnDetails = moudle:Get("BtnDetails")
		BtnDetails:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			WindowMgr.Create("UStaffAttributePop",id)
			end, nil, 0.9)

		local addButton = moudle:Get("Add_Btn")
		addButton:AddOnButton(function ( ... )
			SoundMgr.Play(10001)

			local listData = MBag.GetBagItemsByUseType(PromoteUseType, true)
			if listData == nil or next(listData) == nil then
				WindowMgr.Create("UItemTrack", PromoteItemId, 1)
			else
				WindowMgr.Create("UStaffQuickPromotion", id)
			end
		end, nil, 1.2)

		moudle:Get("SSJ").Text = Csv.Text("staff_lvlup_10", {num = LVLUP_ONEKEY})
		local GOU = moudle:Get("GOU")
		GOU.Activity = self.Lvl10
		local XZ = moudle:Get("XZ")
		XZ:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			if GOU.Activity == true then
				GOU.Activity = false
				self.Lvl10 = false
			else
				GOU.Activity = true
				self.Lvl10 = true
				CCommon.ShowError(Csv.Text("staff_lvlup_10_tips", {num = LVLUP_ONEKEY}))
			end
			local staffData = MStaff.GetStaffDataByID(id)
			_P.SetLvlUpInfo(self, staffData)
			_P.SetExpSlider(self,id,staffData.levelexp,staffData.level,false,false,false)
			end, nil, 0.9)
		
		local BtnUp = moudle:Get("BtnUp")
		BtnUp:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			local Data = MStaff.GetStaffDataByID(id)
			if Data.level >= Csv.ColorUp[Data.color].lvMax and Data.color < STAFFMAXCOLOR then
				WindowMgr.Create("UStaffPromotePop",id)
			else
				local production = MBag.GetItemNum(Define.AssetsType.Coin)
				if production > 0 then
					local lvlupCount = self.Lvl10 == false and 1 or LVLUP_ONEKEY
					CStaff.StaffLevelUp(id, lvlupCount)
					BtnUp.RaycastTarget = false
					XZ.RaycastTarget = false
				else
					if not MBag.CheckItemEnough(Define.AssetsType.Coin, 1) then
						return
					end
				end
			end
			end, nil, 0.9)
	else
		moudle:Get("Add1").Activity = false
		moudle:Get("XZ").Activity = false
		local BtnUp = moudle:Get("BtnUp")
		BtnUp:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			WindowMgr.Create("UStaffTrack", id)
			end, nil, 0.9)
	end

	_P.OnCreateData(self,id)
	if data ~= nil then
		if data.level >= Csv.ColorUp[STAFFMAXCOLOR].lvMax then
			self.mLastVal = 1
		else
			local num,val = math.modf(data.levelexp/Csv.LevelUp[data.level].cost)
			self.mLastVal = val
		end
		_P.SetExpSlider(self,id,data.levelexp,data.level,false,false,false)
	end

	local node = moudle:Get("PageNode")
	self.PageNode = node
	local funcs = _P.GetDetailFuncs(self,MMain.GetOpenedFuncs(Define.SysId.Staff_List, true))
	local count = #funcs
	if count > 0 then
		--Table标签控制
		local colorLight = Color(255/255,225/255,75/255,1)
		local colorDefault = Color(0/255,195/255,255/255,1)
		local tabHandle = TabGroup.new(function (funcId)
			_P.OnChoose(self, funcId)
		end, "yth_023", "yth_023",nil,nil,nil,nil,nil,nil,colorDefault,colorLight)
	
		local index = 0
		for k,v in pairs(funcs) do
			index = index + 1
			tabHandle:Add(v.id, moudle:Get("Toggle"..index), moudle:Get("C_text_"..index), v.name)
			if data ~= nil then
				self:RegistRedpoint(moudle:Get("redPoint_" .. index), 
						Define.SysId.Staff, 
						Define.SysId.Staff_List,
						id, 
						Define.SysId.Staff_Staff,
						v.id)
			else
				moudle:Get("redPoint_" .. index).Activity = false
			end
		end
		tabHandle:Choose(funcs[1].id)
		self.tabHandle = tabHandle
	end
	if count < 5 then
		for i=count + 1,5 do
			moudle:Get("Toggle"..i).Activity = false
		end
	end
	if data ~= nil then
		self:RegistRedpoint(moudle:Get("redPoint_colorup"), 
				Define.SysId.Staff,
				Define.SysId.Staff_List, 
				id, 
				Define.SysId.Staff_Staff,
				1)
	else
		moudle:Get("redPoint_colorup").Activity = false
	end

	self:RegistCallEvent(Define.EventListenId.ItemUpdateEvent, function (handle , itemid, itemcount, isAdd )
		if itemid == Define.AssetsType.Coin then
			TextCost:DOKill()
			local lastNum = self.mCoin
			local nowNum = MBag.GetItemNum(itemid)
			self.mCoin = nowNum
			if lastNum ~= nowNum then
				local dura
				local dec = math.abs(nowNum - lastNum)
				if dec >= 10000 then
					dura = 2
				else
					dura = math.max(0.2, dec / 10000 * 2)
				end
				local t = JTweenerManager.IntTween(lastNum,nowNum, dura, function(value)
					if TextCost ~= nil then TextCost.Text = LuaUtil.NumberFormat(value) end
				end, function()
					if TextCost ~= nil then TextCost.Text = LuaUtil.NumberFormat(MBag.GetItemNum(itemid)) end
				end)
				t:SetTarget(TextCost.CachedTran)
			end
		end
	end)

	--改名
	local changeNameBtn = moudle:Get("ModifyIcon")
	changeNameBtn:AddOnButton(function()
		WindowMgr.Create("UStaffChaneName",id)
	end)
	if MMain.FuncIsOpen(Define.SysId.Staff_ChangeName) then
		changeNameBtn.Activity = true
	else
		changeNameBtn.Activity = false
	end

	for i = 1,MAX_TAG do
		moudle:Get("Tab"..i).Activity = false
	end
	if person.labelImg ~= nil then
		for k,v in ipairs(person.labelImg) do
			local img = moudle:Get("Tab"..k)
			if img ~= nil then
				img.Activity = true
				img.SpriteName = v
			end
		end
	end
end

function _P.OnCreateData(self,id)
	local data = MStaff.GetStaffDataByID(id)
	local moudle = self.mMoudle
	if data ~= nil then
		local csvColorUp = Csv.ColorUp[data.color]
		local TextLevelData = moudle:Get("LevelData")
		TextLevelData.Text = Csv.Text("company_exp",{num = data.level,max = csvColorUp.lvMax})
		local TextPropertyData = moudle:Get("PropertyData")
		TextPropertyData.Text = data.allAttr.Wuli + data.allAttr.Zhili + data.allAttr.Zhengzhi + data.allAttr.Meili
		local TextAttri1Data = moudle:Get("Attri1Data")
		TextAttri1Data.Text = data.allAttr.Wuli
		local TextAttri2Data = moudle:Get("Attri2Data")
		TextAttri2Data.Text = data.allAttr.Zhili
		local TextAttri3Data = moudle:Get("Attri3Data")
		TextAttri3Data.Text = data.allAttr.Zhengzhi
		local TextAttri4Data = moudle:Get("Attri4Data")
		TextAttri4Data.Text = data.allAttr.Meili

		_P.SetLvlUpInfo(self, data)

		local imgPos = moudle:Get("PositionIcon")
		if csvColorUp ~= nil and csvColorUp.posIcon ~= nil then
			imgPos.Activity = true
			imgPos.SpriteName = csvColorUp.posIcon
		else
			imgPos.Activity = false
		end
	else
		local def = Csv.Personnel[id]
		local csvColorUp = Csv.ColorUp[def.color]
		moudle:Get("LevelData").Text = Csv.Text("company_exp",{num = def.level,max = csvColorUp.lvMax})
		local attr1, attr2, attr3, attr4 = MStaff.GetStaffAttrLvlOne(id)
		moudle:Get("PropertyData").Text = math.ceil(attr1 + attr2 + attr3 + attr4)
		moudle:Get("Attri1Data").Text = math.ceil(attr1)
		moudle:Get("Attri2Data").Text = math.ceil(attr2)
		moudle:Get("Attri3Data").Text = math.ceil(attr3)
		moudle:Get("Attri4Data").Text = math.ceil(attr4)
		_P.SetLvlUpInfo(self, def)
		self.mMoudle:Get("C_text").Text = Csv.Text("staff_get")

		local imgPos = moudle:Get("PositionIcon")
		if csvColorUp ~= nil and csvColorUp.posIcon ~= nil then
			imgPos.Activity = true
			imgPos.SpriteName = csvColorUp.posIcon
		else
			imgPos.Activity = false
		end
	end
end

function _P.SetLvlUpInfo(self, data)
	local BtnUp = self.mMoudle:Get("BtnUp")
	local TextBtnUp = self.mMoudle:Get("C_text")
	TextBtnUp.Text = ((self.Lvl10 == false and Csv.Text("staff_up")) or Csv.Text("staff_lvlup_10", {num = LVLUP_ONEKEY}))
	if data.level >= Csv.ColorUp[data.color].lvMax and data.color >= STAFFMAXCOLOR then
		self.TextMax.Activity = true
		BtnUp.Activity = false
		self.mMoudle:Get("XZ").Activity = false
		self.Lvl10 = false
		self.mMoudle:Get("GOU").Activity = self.Lvl10
	else
		if data.level >= Csv.ColorUp[data.color].lvMax then
			TextBtnUp.Text = Csv.Text("staff_max_up")
		end
	end
end

function _P.SetExpSlider(self,id,exp,level,isAnimate,isUp,isGod)
	local moudle = self.mMoudle
	local slider = moudle:Get("Fill")
	local textSlider = moudle:Get("SliderText")
	local tenBtn = moudle:Get("XZ")
	if level >= Csv.ColorUp[STAFFMAXCOLOR].lvMax then
		if isAnimate then
			SoundMgr.PlayNonStopUI(10010)
			local tween = slider:DOFillAmount(1,0.3)
			tween:OnComplete(function(...)
				_P.OnCreateData(self,id)
				textSlider.Text = Csv.Text("staff_max")
				_P.OnPlayLevelUpAnim(self)
			end)
		else
			slider.FillAmount = 1
			textSlider.Text = Csv.Text("staff_max")
		end
		self.mLastVal = 1
		tenBtn.RaycastTarget = true
		return
	end

	local lvlupCount = ((self.Lvl10 == false and 1) or LVLUP_ONEKEY)
	local maxExp = _P.GetLvlUpExpNeed(id, level, lvlupCount) --Csv.LevelUp[level].cost
	local num,val = math.modf(exp/maxExp)
	if slider ~= nil then
		slider:DOKill()
		slider.FillAmount = 0
	end
	moudle.SelfRect:DOKill()
	if isGod then
		local tween
		SoundMgr.PlayNonStopUI(10010)
		tween = slider:DOFillAmount(1,(1 - self.mLastVal)*0.3)
		tween:OnComplete(function(...)
			slider.FillAmount = 0
			moudle:Get("BtnUp").RaycastTarget = true
			tenBtn.RaycastTarget = true
			_P.OnCreateData(self,id)
			_P.OnPlayLevelUpAnim(self)
		end)
		self.mTween = tween
		SoundMgr.Play(10004)
		local nodeTrans = moudle:Get("EffectNodeGod")
		CCommon.PlayEffectGod(nodeTrans,Define.SysId.Staff)
	else
		if isAnimate then
			local tween
			if isUp then
				SoundMgr.PlayNonStopUI(10010)
				tween = slider:DOFillAmount(1,(1 - self.mLastVal)*0.3)
				tween:OnComplete(function(...)
					slider.FillAmount = 0
					moudle:Get("BtnUp").RaycastTarget = true
					tenBtn.RaycastTarget = true
					_P.OnCreateData(self,id)
					_P.OnPlayLevelUpAnim(self)
				end)
			else
				tween = slider:DOFillAmount(val,(val - self.mLastVal)*0.3)
				tween:OnComplete(function(...)
					moudle:Get("BtnUp").RaycastTarget = true
					tenBtn.RaycastTarget = true
					_P.OnCreateData(self,id)
				end)
			end
			self.mTween = tween
		else
			slider.FillAmount = val
			tenBtn.RaycastTarget = true
		end
	end
	local upNeeded = maxExp - exp
	local have = MBag.GetItemNum(Define.AssetsType.Coin)
	if have >= upNeeded then
		textSlider.Text = Csv.Text("staff_needG",{num = upNeeded})
	else
		textSlider.Text = Csv.Text("staff_needR",{num = upNeeded})
	end
	self.mLastVal = val
end

function _P.GetLvlUpExpNeed(id, lvl, lvlupCount)
	local expNeed = Csv.LevelUp[lvl].cost
	if lvlupCount > 1 then
		local maxLvl = lvl + lvlupCount-1
		local data = MStaff.GetStaffDataByID(id)
		local csvColorUp = Csv.ColorUp[data.color]
		if lvl == csvColorUp.lvMax then
			maxLvl = lvl + lvlupCount - 1
		elseif maxLvl > csvColorUp.lvMax then
			maxLvl = csvColorUp.lvMax - 1
		end

		expNeed = 0
		for index = lvl, maxLvl do
			if Csv.LevelUp[index] ~= nil and Csv.LevelUp[index].cost ~= nil then
				expNeed = expNeed + Csv.LevelUp[index].cost
			end
		end
	end

	return expNeed
end


-- 播放升级特效
function _P.OnPlayLevelUpAnim(self)
	CCommon.CreateEffect(self.mMoudle:Get("AttiActorPanel"), levelUpAttrActorId)
	CCommon.CreateEffect(self.mMoudle:Get("BobyActorPanel"), bobyUpActorId)
end


function _P.GetDetailFuncs(self,funcs)
	local tableFuncs = {}
	-- local data = MStaff.GetStaffDataByID(self.mID)
	if funcs ~= nil then
		for k,v in pairs(funcs) do
			if v.id ~= Define.SysId.Staff_Staff then
				if v.id ~= Define.SysId.Staff_Aureole or Csv.Personnel[self.mID].aureole ~= nil then
					table.insert(tableFuncs,v)
				end
			end
		end
	end
	return tableFuncs
end

function _R.StaffLvUp(self,data)
	_P.SetExpSlider(self,data.staffid,data.levelexp,data.level,true,data.success,data.isgod)

	if data.isgod ~= nil then
		if data.isgod == true then
			SoundMgr.PlaySystem(10003)
		end
	end

	if MStaff.LastChoose == Define.SysId.Staff_Talent and self.ChooseMoudle ~= nil then
		self.ChooseMoudle:StaffLevelUp(data.staffid)
	end
end

function _R.StaffColorUp(self,data)
	WindowMgr.Create("UStaffPromoteSucPop",data.staffid)
	_P.OnCreateData(self,data.staffid)
	if MStaff.LastChoose == Define.SysId.Staff_Skill then
		self.ChooseMoudle:ResetAllSkill(data.staffid)
	end
end

function _R.StaffBookUp(self,data)
	if data.success then
		_P.OnCreateData(self,data.staffid)
		if MStaff.LastChoose == Define.SysId.Staff_Book then
			self.ChooseMoudle:ChangeBookLv(data.staffid,data.bookid,data.booklv)
		end
	end
end

function _R.StaffSkillUp(self,data)
	if MStaff.LastChoose == Define.SysId.Staff_Skill then
		self.ChooseMoudle:ChangeSkillLv(data.staffid,data.skillid,data.skilllv, true)
		SoundMgr.PlayNonStopUI(10019)
		CCommon.CreateEffect(self.mMoudle:Get("UpActorPanel"), bobyUpActorId)
	end
end

function _R.StaffAureoleUp(self,data)
	_P.OnCreateData(self,data.staffid)
	if MStaff.LastChoose == Define.SysId.Staff_Aureole then
		self.ChooseMoudle:ChangeAureoleLv(data.staffid,data.aureoleid,data.aureolelv,true)
		SoundMgr.PlayNonStopUI(10019)
		CCommon.CreateEffect(self.mMoudle:Get("UpActorPanel"), bobyUpActorId)
	end
end

function _R.ResetView(self)
	self.mMoudle:Get("BtnUp").RaycastTarget = true
	self.mMoudle:Get("XZ").RaycastTarget = true
end


function _R.UpdateStaffAttr(self)
	_P.OnCreateData(self, self.mID)
end

function _R.RefreshName(self)
	self.mTextName.Text = MStaff.GetStaffName(self.mID)--person.name
end

---装备
function _R.RefreshEquip(self)
	if MStaff.LastChoose == Define.SysId.Staff_Equip then
		self.ChooseMoudle:GetEquipData()
	end
end

function _R.StaffChange(self)
	if self.mID ~= nil then
		local dataStaff = MStaff.StaffTable[self.mID]
		if dataStaff then
			local prePower = self.mPower or 0
			self.mPower = dataStaff.power
			self.GGZLtext:DOKill()

			if prePower ~= self.mPower then
				local dura
				local dec = math.abs(self.mPower - prePower)
				if dec >= 10000 then
					dura = 2
				else
					dura = math.max(0.2, dec / 10000 * 2)
				end
				local t = JTweenerManager.IntTween(prePower, self.mPower, dura, function(value)
					if self.GGZLtext ~= nil then self.GGZLtext.Text = value end
				end, function()
					if self.GGZLtext ~= nil then self.GGZLtext.Text = self.mPower end
				end)
				t:SetTarget(self.GGZLtext.CachedTran)
			end
		end
	end
end

return _M