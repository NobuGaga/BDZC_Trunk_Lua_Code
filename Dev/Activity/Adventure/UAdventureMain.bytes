-- 奇遇主界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire "Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local MBag = JRequire "Dev.Bag.MBag"
local MPlayer = JRequire "Dev.Player.MPlayer"
local MCommerce = JRequire "Dev.Commerce.MCommerce"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local MAX_EVENT = Csv.Const(20101)[2] --最大事件上限数量
local MAX_COUNT = Csv.Const(20101)[3] --解决事件次数上限
local MAX_LUCKY = Csv.Const(20101)[8] --幸运值最大值
local QIYUCOIN = 34102				 --奇遇币ID
local QUALITY1 = Color(47/255,32/255,231/255,1)
local QUALITY2 = Color(228/255,7/255,231/255,1)
local QUALITY3 = Color(236/255,111/255,14/255,1)
local QUALITY4 = Color(240/255,0/255,0/255,1)

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--红点刷新
function _R.UpdataRed(self)
	self.mModule:Get("rankRedpoint").Activity = MActivity.AdventureRankRed
	self.mModule:Get("eventRedpoint").Activity = MActivity.AdventureShopRed
end

function _P.SetView(self)
	_P.SetListData(self)
	_P.SetOwnData(self)
end

--设置下方个人数据
function _P.SetOwnData(self)
	self.slider.FillAmount = self.mData.hotval / MAX_LUCKY
	local vip = MPlayer.GetVip()
	local extraTime = Csv.Vip[vip].adventureMainCount
	self.leftTimes.Text = Csv.Text("adventure_left_times",{num = self.mData.personalEventTimes,all = MAX_COUNT + extraTime})--VIP
end

--刷新中间事件格子
function _P.SetListData(self)
	local contentTransform = self.mModule:Get("Content")
	contentTransform:DestroyChildren()

	self.eventTableDatas = self.mData.personalEventlist
	for k,v in pairs(self.eventTableDatas) do
		self.mRawTableItems[v.eventsIndex] = _P.OnCreateItem(self, v, contentTransform)
	end
end

function _P.RefreshTime(self)
	local time = self.time - HeartBeat.ServSecond() 
	local isFinish = time <= 0
	if isFinish then
		self.timeText.Text = CS.Utility.Utils.FormatSeconds(0, Csv.Text("xinguan_rank_countdown"))
	else
		self.timeText.Text = CS.Utility.Utils.FormatSeconds(time, Csv.Text("xinguan_rank_countdown"))
	end
	return isFinish
end

--移除1个事件
function _P.RemoveEvent(self,eventsIndex)
	--还要通知M
	self.mData.personalEventlist[eventsIndex] = nil
	_P.SetListData(self)
end

--更新事件
function _R.UpdateEvent(self,data)
	self.mData = MActivity.GetFromId(self.ActId)
	_P.SetListData(self)
end

--更新个人事件数据
function _R.UpdateOwnData(self)
	self.mData = MActivity.GetFromId(self.ActId)
	_P.SetListData(self)
	_P.SetOwnData(self)
end

--红点
function _R.UpdateRed(self)
	self.redpoint1.Activity = MActivity.AdventureRankRed
	self.redpoint2.Activity = MActivity.AdventureShopRed
end

--创建格子
function _P.OnCreateItem(self,data,contentTransform)
	local event = {}
	local itemMoudle = JGuiManager.GetMoudle(contentTransform, "M_Adventure_MainItem", WindowType.UI, 0)
	--Todo:显示是否即将刷新
	itemMoudle:Get("Tips").Text = Csv.Text("adventure_time_tips")

	if _P.IsNeedUpdate(self,data.eventsIndex) then
		self.timeText = itemMoudle:Get("Time")
		self.time = self.mData.nextUpdateTime
		self.timeText.Text = CS.Utility.Utils.FormatSeconds(self.time - HeartBeat.ServSecond(), Csv.Text("xinguan_rank_countdown"))
		itemMoudle:Get("TimeBg").Activity = true
		self.countTime = self.timeText:AddOnUpdate(function() 
			if _P.RefreshTime(self) then
				if self.countTime then
					--时间到了移除事件
					self.countTime:Destroy()
					self.countTime = nil
					_P.RemoveEvent(self,data.eventsIndex)
				end
			end
		end, nil, 1)
	else
		itemMoudle:Get("TimeBg").Activity = false
	end

	itemMoudle:Get("OutBox"):AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		_P.OnClickItem(data,self.mData)
		end, nil, 1)

	local csvEvent = Csv.AdventureMainEvent[data.eventId]
	
	local eventName = csvEvent.title
	local star = csvEvent.star
	for i=1,star do
		itemMoudle:Get("Star"..i).Activity = true
	end
	local quality = csvEvent.quality
	itemMoudle:Get("OutBox").Color = _P.GetOutColor(self, quality)
	local ImgIcon = itemMoudle:Get("iCON")
	ImgIcon.SpriteName = csvEvent.icon
	itemMoudle:Get("Name").Text = eventName

	event.module = itemMoudle
	return event
end

function _P.GetOutColor(self, type)
	local switch = {
		[1] = function()
			return QUALITY1
		end,
		[2] = function()
			return QUALITY2
		end,
		[3] = function()
			return QUALITY3
		end,
		[4] = function()
			return QUALITY4
		end,
	}

	local func = switch[type]
	if func ~= nil then
		return func()
	end
end

function _P.IsNeedUpdate(self,eventsIndex)
	local minIndex = -1
	local count = 0
	for k,v in pairs(self.mData.personalEventlist) do
		if minIndex == -1 then
			minIndex = v.eventsIndex
		end
		if minIndex > v.eventsIndex then
			minIndex = v.eventsIndex
		end
		count = count + 1
	end
	return minIndex == eventsIndex and count == MAX_EVENT
end

function _P.OnClickItem(data,activityData)
	if data ~= nil then
		WindowMgr.Create("UAdventureStaff", data,activityData)
	end
end

--隔天刷新次数
function _P.OnDayout(self)

end

--界面构造
function _M:OnCreate(...)
	local module = self:CreateMoudle(self._RootNode, "M_Adventure_Main")
	self.mModule = module

	local closeBtn = self.mModule:Get("C_Back_Btn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)
	local BtnRule = module:Get("C_Full_Help_Btn")
	BtnRule:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("URuleTips",Define.SysId.Adventure)
		end, nil, 1.2)
	self.ActId = 40000
	local data = MActivity.GetListFromType(Define.ActivityType.Adventure)
	if data ~= nil then
		for k,v in pairs(data) do
			self.ActId = k
			break
		end
	else
		error("Advanture info is nil")
		return
	end
	self.mData = data[self.ActId]
	local state = self.mData.state
	
	local adventureConf = Csv.Adventure[self.ActId]
	if not adventureConf then 
		error("adventure config is nil")
		return 
	end
	self.adventureConf = adventureConf

	self.mRawTableItems = {}
	module:Get("C_Text_0").Text = adventureConf.title
	module:Get("UpVip").Text = Csv.Text("adventure_vip_tips")
	module:Get("C_text").Text = Csv.Text("adventure_rank")
	module:Get("C_text_0").Text = Csv.Text("adventure_score_shop")
	module:Get("C_text_1").Text = Csv.Text("adventure_shop_event")
	module:Get("Tips").Text = Csv.Text("adventure_exchange_score",{num = MBag.GetItemNum(QIYUCOIN)})
	self.timeText = module:Get("TimeText")
	self.hotText = module:Get("IconName")
	self.hotText.Text = Csv.Text("adventure_hot")
	self.slider = module:Get("Fill")
	self.rankBtn = module:Get("C_Btn_a")
	self.shopEventBtn = module:Get("C_Btn_b")
	self.exchangeBtn = module:Get("C_Btn_a_0")
	self.vipBtn = module:Get("Vip")
	self.leftTimes = module:Get("cishu")
	self.TipsBox = module:Get("TipsBox")
	self.scoreText = module:Get("TipsTezt")
	self.LkBtn = module:Get("LuckIcon")
	self.TipsBox.Activity = false
	self.scoreText.Text = adventureConf.popDesc
	self.redpoint1 = module:Get("redpoint1_0")
	self.redpoint2 = module:Get("redpoint2_0")
	self.timeText.Text = Csv.Text("charitable_main_data")..Csv.Text("charitable_main_dateInfo", 
	{startTime = LuaUtil.TransToYMD(state.startTime),endTime = LuaUtil.TransToYMD(state.startTime + adventureConf.settleTime)})
	-- hotOb = module:Get("HotObj")

	self.rankBtn:AddOnButton(function(...)
		SoundMgr.Play(10002)
		--打开排行榜界面
		if HeartBeat.ServSecond() >= self.mData.state.endTime then
			CCommon.ShowError(Csv.Text("timelimit_close"))
		else
			WindowMgr.Create("UAdventureRank", self.mData)
		end
	end, nil, 1.2)

	self.vipBtn:AddOnButton(function(...)
		SoundMgr.Play(10002)
		--打开充值界面
			WindowMgr.Create("URecharge")
		-- end
	end, nil, 1.2)

	self.exchangeBtn:AddOnButton(function(...)
		SoundMgr.Play(10002)
		--打开兑换界面
			WindowMgr.Create("UAdventureExchangePanel",self.mData)
		-- end
	end, nil, 1.2)

	--注册12点重置监听
	self:RegistCallEvent(Define.EventListenId.DailyReset,function( ... )
		_P.OnDayout(self)
	end)

	self:RegistCallEvent(Define.EventListenId.ItemUpdateEvent, function (handle , itemid, itemcount, isAdd )
		if itemid == QIYUCOIN then
			module:Get("Tips").Text = Csv.Text("adventure_exchange_score",{num = MBag.GetItemNum(QIYUCOIN)})
		end
	end)
	
	self.shopEventBtn:AddOnButton(function(...)
		SoundMgr.Play(10002)
		--打开后续界面(判断是否又加入商会)
		if HeartBeat.ServSecond() >= self.mData.state.endTime then
			CCommon.ShowError(Csv.Text("timelimit_close"))
		else
			if MCommerce.IsJoinCommerce() then
				WindowMgr.Create("UAdventureFollow", self.mData)
			else
				CCommon.ShowError(Csv.Text("adventure_gang_tips"))
			end
		end
	end,nil,1.2)
	
	self.LkBtn:AddOnPress(function(obj, arg, data)
		self.TipsBox.Activity = data.isPress
	end)
	_P.SetView(self)
	--红点初始化
	_R.UpdateRed(self)
end

return _M