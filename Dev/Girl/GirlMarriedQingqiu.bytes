local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire"Dev.Common.CCommon"
local luaUtil = JRequire"Libs.LuaUtil"
local MGirl = JRequire"Dev.Girl.MGirl"
local CGirl = JRequire"Dev.Girl.CGirl"
local MBag = JRequire "Dev.Bag.MBag"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local JTweenerManager = CS.JTween.JTweenerManager

local _M = Class(WindowBase)
local _P = {}
local _R = {}

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _R.CloseWin(self)
	self:Destroy()
end

function _R.RefreshQingqiu(self)
	_P.ShowZhaoqinItems(self)
end

function _R.RefreshJujue(self,data)
	if data.success == true then
		MGirl.RefuseQingqiu(data.babyid)
		_P.RefusedItem(self,data.babyid)
	end
end

function _R.RefreshJujueAll(self,data)
	if data.success == true then
		MGirl.RefuseAllQingqiu()
		_P.RefusedAll(self)
	end
end

function _M:OnCreate()
	self._EventNode:AddOnClick(function ()
		SoundMgr.Play(10001)
		self:Destroy()
	end)
	
	local moudle = self:CreateMoudle(self._RootNode,"M_Girl_Tab4_Married_Qingqiu")
	local backBtn = moudle:Get("backBtn")
	backBtn:AddOnButton(function(...)
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)

	self.mContent = moudle:Get("content")
	self.mNoneText = moudle:Get("Nonetext")
	local title = moudle:Get("title")
	title.Text = Csv.Text("Girl_married_qingqiu")--"提亲请求"

	_P.ShowZhaoqinItems(self)

	local TextDiamond = moudle:Get("quantity")
	TextDiamond.Text = MBag.GetItemNum(Define.AssetsType.Gold)

	local oneKeyText = moudle:Get("C_text")
	oneKeyText.Text = Csv.Text("Girl_married_onekeyRefuse")--"一建拒绝"

	local oneKeyRefused = moudle:Get("C_Btn_b")
	oneKeyRefused:AddOnButton(function(...)
		SoundMgr.Play(10001)
		if #MGirl.MarriedQingqiu > 0 then
			CGirl.ReqRefuseTiQin(0)--一键拒绝
		else
			CCommon.ShowError(Csv.Text("Girl_married_noQingqiu"))--"暂无提亲请求"
		end
	end)

	self:RegistCallEvent(Define.EventListenId.ItemUpdateEvent, function (handle , itemid, itemcount, isAdd )
		if itemid == Define.AssetsType.Gold then
			TextDiamond:DOKill()
			local lastNum = tonumber(TextDiamond.Text)
			local nowNum = MBag.GetItemNum(itemid)
			if lastNum ~= nowNum then
				local dura
				local dec = math.abs(nowNum - lastNum)
				if dec >= 10000 then
					dura = 2
				else
					dura = math.max(0.2, dec / 10000 * 2)
				end
				local t = JTweenerManager.IntTween(lastNum,nowNum, dura, function(value)
					if TextDiamond ~= nil then TextDiamond.Text = tostring(value) end
				end, function()
					if TextDiamond ~= nil then TextDiamond.Text = tostring(MBag.GetItemNum(itemid)) end
				end)
				t:SetTarget(TextDiamond.CachedTran)
			end
		end
	end)
end

function _P.ShowZhaoqinItems(self)

	local content = self.mContent
	content:DestroyChildren()
	self.mNoneText.Text = ""

	local itemsTab = {}
	local datas = MGirl.MarriedQingqiu
	for k,v in pairs(datas) do
		local item =  _P.CreatQingqiuItem(self,content,v)
		itemsTab[v.babyid] = item
	end

	if #datas <= 0 then
		self.mNoneText.Text = Csv.Text("Girl_married_noQingqiu")--"暂无提亲请求"
	end

	self.mItemTab = itemsTab
end

function _P.CreatQingqiuItem(self,parent,data)
	local moudle = JGuiManager.GetMoudle(parent, "M_Girl_Married_QinqiuItem", WindowType.UI, 10)
	
	local name = moudle:Get("name")
	local parentText = moudle:Get("parent")
	local parentValue = moudle:Get("parentName")
	local levelValue = moudle:Get("EducationText")
	local attri = moudle:Get("attri")
	local attriValue = moudle:Get("attriNum")
	local costText = moudle:Get("cost")
	local costNum = moudle:Get("costNum")
	local headIcon = moudle:Get("head")
	--local sceneBg = moudle:Get("scene")
	

	if data.ownerGender == 1 then
		parentText.Text = Csv.Text("Girl_married_mother")--"母亲："
	else
		parentText.Text = Csv.Text("Girl_married_father")--"父亲："
	end
	attri.Text = Csv.Text("Girl_married_attribute")--"属性："
	costText.Text = Csv.Text("Girl_married_cost")--"费用："

	local costGold = MGirl.GetMarriedGoldCost(data.degree)
	local marriedCostItem = Csv.BabyDegree[data.degree].marriageItemCost --结婚道具
	local itemData = Csv.Item[marriedCostItem[1]]
	costNum.Text = Csv.Text("Girl_married_costGoldAndItem",{gold = costGold,item = itemData.name})--"80钻石/连理枝"
	--sceneBg.SpriteName = "bg_004"
	
	name.Text = data.name
	parentValue.Text = data.ownerName
	levelValue.Text = MGirl.GetEducationName(data.degree)
	attriValue.Text = data.sumAttr
	headIcon.SpriteName = MGirl.GetBabyIcon(data.gender,data.degree)
	headIcon:SetNativeSize()

	
	local refuseText = moudle:Get("C_text")
	local selectText = moudle:Get("C_text_0")
	refuseText.Text = Csv.Text("Girl_married_refuse")--"拒绝"
	selectText.Text = Csv.Text("Girl_married_selectBaby")--"选择孩子"

	local refuseBtn = moudle:Get("RefusedBtn")
	refuseBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		--请求拒绝
		CGirl.ReqRefuseTiQin(data.babyid)
	end)

	local selectBtn = moudle:Get("selectBtn")
	selectBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		MGirl.SelectQingqiuID = data.babyid
		--UMarriedSelectBaby
		WindowMgr.Create("UMarriedSelectBaby",data)
	end)

	return moudle
end

function _P.RefusedItem(self,id)
	local itemsTab = self.mItemTab
	if itemsTab[id] ~= nil then
		itemsTab[id].SelfRect:Destroy()
		itemsTab[id] = nil
		--table.remove(itemsTab,id)
	end
	self.mItemTab = itemsTab
end

function _P.RefusedAll(self)
	self.mItemTab = {}
	local content = self.mContent
	content:DestroyChildren()
end

return _M