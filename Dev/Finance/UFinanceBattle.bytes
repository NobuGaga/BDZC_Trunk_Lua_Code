----------------------文件引用--------------------------
--@RefType [Libs.WindowMgr.WindowBase.bytes#_M]
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
--@RefType [Libs.WindowMgr.WindowOpen.bytes#_M]
local WindowOpen = JRequire "Libs.WindowMgr.WindowOpen"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
--@RefType [Dev.Finance.CFinance.bytes#_M]
local CFinance = JRequire "Dev.Finance.CFinance"
--@RefType [Dev.Finance.MFinance.bytes#_M]
local MFinance = JRequire "Dev.Finance.MFinance"
--@RefType [Dev.Common.CCommon.bytes#_M]
local CCommon = JRequire "Dev.Common.CCommon"
--@RefType [Dev.Staff.MStaff.bytes#_M]
local MStaff = JRequire "Dev.Staff.MStaff"
local MPlayer = JRequire "Dev.Player.MPlayer"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local HeartBeat = JRequire "Dev.Player.HeartBeat"

local Linear = CS.DG.Tweening.Ease.Linear
local JTweenerManager = CS.JTween.JTweenerManager
local UnityTime = CS.UnityEngine.Time

local attackActorId = 10038
local FIGHT_ROUND = Csv.Const(15005)
--------------------------
local DEFAULT_BODY_NAME = "staff_choose"

local T_FB_Staff_AttackGo = "T_FB_Staff_AttackGo"
local T_FB_Staff_AttackBack = "T_FB_Staff_AttackBack"
local T_FB_Boss_Dark = "T_FB_Boss_Dark"
local T_FB_Boss_blood = "T_FB_Boss_blood"
local T_FB_Boss_Hurt = "T_FB_Boss_Hurt"
local T_FB_Boss_HurtBack = "T_FB_Boss_HurtBack"

local BG = "FbBoosBg"
local TAB = "FbBoosBg_2"

-----------------------------

local _M = Class(WindowBase)
local _P = {}
local _R = {}

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

------------
--退出战役
------------
function _R.CloseBattle(self)
	MFinance.isBattle = false
	self:Destroy()
end


------------
--战斗结算后返回更新
------------
function _R.RefreshFight(self)
	local fightData = self.mFightData
	if fightData ~= nil then
		_P.ReadyFight(self,fightData.data,fightData.type)
	end
end

-------------------------------------------------
----获取更新副本信息
--------------
function _R.RefreshInvade(self,_data)
	local _type = MFinance.FinaceType.FinaceRank_1

	local fightData = self.mFightData
	if fightData == nil then
		fightData = {}
	end

	fightData = {data = _data,type = _type}
	self.mFightData = fightData
end

function _R.RefreshResist(self,_data)
	local _type = MFinance.FinaceType.FinaceRank_2
	local fightData = self.mFightData
	if fightData == nil then
		fightData = {}
	end

	fightData = {data = _data,type = _type}
	self.mFightData = fightData
end

---------------------------------
--初始化抵御列表
function _R.InitInvadeList(self,data)
	MFinance.InvadeListData = data
	local refreshCD = UnityTime.time - self.mRefreshTime
	if refreshCD < 1 then
		self.mAllContent:AddOnTime(function()
			self.mRefreshTime = UnityTime.time

			local type = MFinance.FinaceType.FinaceRank_1
			_P.ShowRankView(self,MFinance.InvadeListData.list,type)--等待返回调用
		end,nil,refreshCD)
	else
		self.mRefreshTime = UnityTime.time

		local type = MFinance.FinaceType.FinaceRank_1
		_P.ShowRankView(self,MFinance.InvadeListData.list,type)--等待返回调用
	end
end

function _R.RefreshInvadeList(self,data)
	MFinance.InvadeUpdateData = data
	local refreshCD = UnityTime.time - self.mRefreshTime
	if refreshCD < 1 then
		self.mAllContent:AddOnTime(function()
			self.mRefreshTime = UnityTime.time

			local type = MFinance.FinaceType.FinaceRank_1
			_P.AddRandItem(self,MFinance.InvadeUpdateData,type)
		end,nil,refreshCD)
	else
		self.mRefreshTime = UnityTime.time
		
		local type = MFinance.FinaceType.FinaceRank_1
		_P.AddRandItem(self,MFinance.InvadeUpdateData,type)
	end
end

function _R.ShowResistRankList(self,data)
	MFinance.ResistRankData = data
	MFinance.ResistRankList = data.rankList
	local refreshCD = UnityTime.time - self.mRefreshTime
	if refreshCD < 1 then
		self.mAllContent:AddOnTime(function()
			self.mRefreshTime = UnityTime.time

			local type = MFinance.FinaceType.FinaceRank_2
			_P.ShowResiseRank(self,MFinance.ResistRankData.rankList,type)--等待返回调用
		end,nil,refreshCD)
	else
		self.mRefreshTime = UnityTime.time
		
		local type = MFinance.FinaceType.FinaceRank_2
		_P.ShowResiseRank(self,MFinance.ResistRankData.rankList,type)--等待返回调用
	end
end

-----------
--战斗
------
function _R.GetInvaderFight(self,data)
	--_P.InvaderFighting(self,data)
	_P.IsFighting(self)

	self:Lock()
	_P.ShowFightInvader(self, data, function()
		if self.mMoudle ~= nil then
			self:Unlock()

			if data.isWin then
				WindowMgr.Create("UFinanceWin",data)
			else
				WindowMgr.Create("UFinanceFail",data)
			end
		end
	end)	
end

function _R.GetResistFight(self,data)
	--_P.ResistFight(self,data)
	_P.IsFighting(self)

	self:Lock()
	_P.ShowFightResist(self, data, function()
		if self.mMoudle ~= nil then
			self:Unlock()
			WindowMgr.Create("UFinanceResult",data)
		end
	end)	
end
-------------------------------------
-------------------------------------
--非法机构奖励
function _R.ShowResistReward(self,data)
	if MFinance.isFighting == false then
		WindowMgr.Create("UFinanceReward",data)
	end
end
------------------------

function _M:OnCreate(data,type)
	local moudle = self:CreateMoudle(self._RootNode, "M_FB_PK")
	self.mMoudle = moudle
	moudle:Get("BG").SpriteName = BG
	moudle:Get("tab").SpriteName = TAB
	self.mFightData = {}

	MFinance.isBattle = true
	--moudle:Get("Title").Text=Csv.Text("finance_title")

	local closeBtn = moudle:Get("BackBtn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		MFinance.isBattle = false
		self:Destroy()
	end, nil, 1.2)
		
	self.mBossIcon = moudle:Get("BossBSX")
	self.mHeroIcon = moudle:Get("StaffBSX")
	self.mHeroPowerBox = moudle:Get("valueText")
	self.mHeroPower = moudle:Get("valueNum")
	self.mBossTalkBox = moudle:Get("DHBox2")
	self.mBossTalkValue = moudle:Get("text1")
	self.mHeroTalkBox = moudle:Get("DHBox1")
	self.mHeroTalkValue = moudle:Get("text1_0")

	self.mBloodBar = moudle:Get("Bar")
	self.mBloodValue = moudle:Get("Percentage")
	self.mBloodBg = moudle:Get("blood")
	self.mRankView = moudle:Get("rank")
	self.mAllContent = moudle:Get("content")
	self.mOwnInfo = moudle:Get("OwnInfo")

	----------------------------
	self.BOSS = {
		Root = moudle:Get("Boss"),
		Bar = moudle:Get("Bar"),
		BloodText = moudle:Get("Percentage"),
		TalkBG = moudle:Get("DHBox2"),
		TalkText = moudle:Get("text1"),
		Actor = moudle:Get("BossBSX"),
		HurtFly = moudle:Get("HurtFly")
	}
	self.STAFF = {
		Root = moudle:Get('STAFF'),
		Actor = moudle:Get("StaffBSX"),
		Power = moudle:Get("valueNum"),
		TalkBG = moudle:Get("DHBox1"),
		TalkText = moudle:Get("text1_0")
	}
-------------------

	local diyuText = moudle:Get("diyupanghang")
	local leftTitle1 = moudle:Get("leftTitle1")
	local rightTitle1 = moudle:Get("rightTitle1")
	local smallTitle2 = moudle:Get("smallTitle2")
	local smallTitleBg1 = moudle:Get("smallTitle1")
	local smallTitleBg2 = moudle:Get("smallTitleBg")
	local heroPowerText = moudle:Get("valueText")
	self.mSmallTitle1 = smallTitleBg1
	self.mSmallTitle2 = smallTitleBg2

	heroPowerText.Text = Csv.Text("finance_heroPowerName")
	diyuText.Text = Csv.Text("finance_diyuRank")
	leftTitle1.Text = Csv.Text("finance_di")
	rightTitle1.Text = Csv.Text("finance_bo")
	smallTitle2.Text = Csv.Text("finance_smallTitle2")
	smallTitleBg1.Activity = false
	smallTitleBg2.Activity = false

	self.mDiyuText = diyuText

	MFinance.fightType = type
	if type == MFinance.FinaceType.FinaceRank_1 then
		smallTitleBg1.Activity = true
	elseif type == MFinance.FinaceType.FinaceRank_2 then
		smallTitleBg2.Activity = true
	end

	local changeBtn = moudle:Get("Btn_b")
	local startBtn = moudle:Get("PKstarBtn")
	local startText = moudle:Get("new_text")
	startText.Text = Csv.Text("finance_startFight")--"开始谈判"
	self.mChangeBtn = changeBtn
	self.mStartBtn = startBtn

	moudle:Get("C_text").Text=Csv.Text("finance_change")
	changeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("UFinanceSelectStaff", function (staffId)
			if self.mMoudle ~= nil then
				_P.OnChooseStaff(self, staffId,moudle)
			end
		end)
	end, nil, 0.9)
	
	------
	
	_P.ReadyFight(self,data,type)--等待返回调用

	--开始战斗
	startBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		--开始战斗
		MFinance.isFighting = true
		if MFinance.SelectHero ~= nil then
			if type == MFinance.FinaceType.FinaceRank_1 then
				CFinance.ReqInvadeFight(MFinance.SelectHero.id)
			elseif type == MFinance.FinaceType.FinaceRank_2 then
				CFinance.ReqResistFight(MFinance.SelectHero.id)
			end
		else
			CCommon.ShowError(Csv.Text("finance_unselectStaff"))--"请选择一个员工出战！"
		end
	end, nil, 0.9)

	--已结束
	if type == MFinance.FinaceType.FinaceRank_2 then
		if data.isEnd then
			WindowMgr.Create("UFinanceResistEnd",data)
		end
	end

	---------------------
	self.mRefreshTime = 0
end

function _P.OnChooseStaff(self, staffId,moudle)
	self.ChoosedStaffId = staffId

	if self.selfSpine ~= nil then
		self.selfSpine:Destroy()
		self.selfSpine = nil
	end
	if staffId > 0 then
		local info = MStaff.GetStaffDataByID(staffId)
		local staffCsv = Csv.Personnel[staffId]
		if staffCsv ~= nil and staffCsv.prefab ~= nil and staffCsv.prefab > 0 then
			self.selfSpine = CCommon.CreateActor(moudle:Get("StaffBSX"), staffCsv.prefab, CCommon.ActorFieldMap.fb_self)
			moudle:Get("StaffBSX").SpriteName = ""
		else
			moudle:Get("StaffBSX").SpriteName = staffCsv.asset
		end
		moudle:Get("valueNum").Text = tostring(info.power)

		MFinance.SelectHero = info
	else
		moudle:Get("StaffBSX").SpriteName = DEFAULT_BODY_NAME
		moudle:Get("valueNum").Text= ""
	end	
end

function _P.ReadyFight(self,data,type)
	self.mBossTalkBox.Activity = false
	self.mHeroTalkBox.Activity = false
	self.mBloodBg.Activity = true
	self.FullBlood = data.bossBlood.nmax

	local ownInfo = self.mOwnInfo
	local diyuText = self.mDiyuText
	local bloodBar = self.mBloodBar
	local bloodValue = self.mBloodValue
	local bossIcon = self.mBossIcon
	
	---------
	if self.bossSpine ~= nil then
		self.bossSpine:Destroy()
		self.bossSpine = nil
	end
	local smallTitle1 = self.mSmallTitle1
	local smallTitle2 = self.mSmallTitle2
	if type == MFinance.FinaceType.FinaceRank_1 then
		smallTitle1.Activity = true
		smallTitle1.Text = data.waves
		MFinance.Waves = data.waves
		smallTitle2.Activity = false
		ownInfo.Activity = false
		diyuText.Activity = false

		local csvWaveBoss = Csv.WaveBoss[data.waves]
		if csvWaveBoss.prefab and csvWaveBoss.prefab ~= 0 then
			self.bossSpine = CCommon.CreateActor(bossIcon, csvWaveBoss.prefab, CCommon.ActorFieldMap.fb_boss)
			bossIcon.SpriteName = ""
		else
			bossIcon.SpriteName = csvWaveBoss.icon--
		end
		bloodValue.Text = Csv.Text("finance_bossBlood",{cur =data.bossBlood.ncur,max = data.bossBlood.nmax })--data.bossBlood.ncur.."/"..data.bossBlood.nmax
	elseif type == MFinance.FinaceType.FinaceRank_2 then
		smallTitle1.Activity = false
		smallTitle2.Activity = true
		ownInfo.Activity = true
		diyuText.Activity = true
		
		local spineIDOrAsset = Csv.Const(15006)
		local csvEffect = Csv.Effect[spineIDOrAsset]
		if csvEffect and csvEffect.prefab then
			self.bossSpine = CCommon.CreateActor(bossIcon, spineIDOrAsset, CCommon.ActorFieldMap.fb_boss)
			bossIcon.SpriteName = ""
		else
			bossIcon.SpriteName = spineIDOrAsset
		end
		bloodValue.Text = math.floor((data.bossBlood.ncur / data.bossBlood.nmax) * 100+ 0.5) .. "%"--data.bossBlood.ncur.."/"..data.bossBlood.nmax
		_P.CreateOwnRank(self,data.own)
	end

	MFinance.BossPower = data.bossBlood --记录到M
	bloodBar.FillAmount = data.bossBlood.ncur/data.bossBlood.nmax
	
	local heroData = MFinance.SelectStaff()
	if self.selfSpine ~= nil then
		self.selfSpine:Destroy()
		self.selfSpine = nil
	end
	if heroData ~= nil then
		local PersonnelData = Csv.Personnel[heroData.id]
		if PersonnelData ~= nil and PersonnelData.prefab ~= nil and PersonnelData.prefab > 0 then
			self.selfSpine = CCommon.CreateActor(self.mHeroIcon, PersonnelData.prefab, CCommon.ActorFieldMap.fb_self)
			self.mHeroIcon.SpriteName = ""
		else
			self.mHeroIcon.SpriteName = PersonnelData.asset
		end
		self.mHeroPower.Text = heroData.power
		MFinance.SelectHero = heroData
	else
		self.mHeroIcon.SpriteName = DEFAULT_BODY_NAME
		self.mHeroPower.Text = ""
		MFinance.SelectHero = nil
	end
	-----------------

	MFinance.isFighting = false
	_P.IsFighting(self,data)

	if type == MFinance.FinaceType.FinaceRank_2 then
		if data.isEnd then
			WindowMgr.Create("UFinanceResistEnd",data)
		end
	end
end

-----------------------------------------------------------------
function _P.IsFighting(self)
	local changeBtn = self.mChangeBtn 
	local startBtn =  self.mStartBtn 
	local heroPowerBox = self.mHeroPowerBox

	if MFinance.isFighting then
		--changeBtn.Activity = false
		startBtn.Activity = false
		--heroPowerBox.Activity = false
	else
		--changeBtn.Activity = true
		startBtn.Activity = true
		--heroPowerBox.Activity = true
	end
end

function _P.GetBossTalk()
	if MFinance.fightType == MFinance.FinaceType.FinaceRank_1 then
		return LuaUtil.Shuffle(Csv.WaveBoss[MFinance.Waves].talk)
	elseif MFinance.fightType == MFinance.FinaceType.FinaceRank_2 then
		return LuaUtil.Shuffle(Csv.Const(15002))
	end
end

function _P.ShowFightInvader(self,data,callBack)
	local fightCount = 1
	local hurt = data.hurt
	local oneHurt = math.ceil(hurt / fightCount)

	local startBlood = MFinance.BossPower.ncur

	self.BossTalkList =  _P.GetBossTalk()
	local staffCsv = Csv.Personnel[MFinance.SelectHero.id]
	if staffCsv ~= nil then
		self.StaffTalkList = LuaUtil.Shuffle(staffCsv.FinanceTalk)
	else
		self.StaffTalkList = {}
	end	

	local t = self.mMoudle.SelfRect.CachedTran:GetJTweener("T_Finance_Battle")--动画

	local doHurt = function(isFire)
		local info = self.BOSS
		local lastBlood = startBlood
		startBlood = math.max(0,startBlood - oneHurt)
		local fill = startBlood / self.FullBlood

		info.Bar:DOKill()
		info.BloodText:DOKill()
		local ft = info.Bar:DOFillAmount(fill, 0.2)
		if isFire then
			ft:SetDelay(0.26)
		end

		local t = JTweenerManager.IntTween(lastBlood, startBlood, 0.2, function(value)
			if info.BloodText ~= nil then info.BloodText.Text = Csv.Text("finance_bossBlood",{cur = value,max = MFinance.BossPower.nmax }) end
		end, function()
			CCommon.ShowFlyText(info.HurtFly, "-" .. oneHurt)
		end)
		t:SetTarget(info.BloodText.CachedTran)
	end

	local ownFire = function ()
		if t ~= nil then
			t:Restore()

			--self.mMoudle.SelfRect:AddOnTime(function(...)
				callBack()
			--end,nil,0.5)
		end
	end

---------------员工 --> boss----------------------------------
	local ownTalk = function()
		if t ~= nil then
			_P.OwnTalk(self,function()
				t:Play(T_FB_Boss_blood)
				t:Play(T_FB_Boss_Hurt)

				SoundMgr.Play(10021)
				local actorPanel = self.mMoudle:Get("ActorLightPanel")
				CCommon.CreateEffect(actorPanel, attackActorId)
			end)
		end
	end

	local enemyHurtBack = function()
		if t ~= nil then
			t:Play(T_FB_Boss_HurtBack)
		end
	end

	local StaffAttackEnd = function()
		doHurt()
		t:Play(T_FB_Staff_AttackBack)
	end

	local staffRound = function()
		if t ~= nil then
			self.mMoudle.SelfRect:AddOnTime(function()
				ownFire()	
			end,nil,0.5)	
		end
	end

	t:SetWaitEventOnComplete(T_FB_Staff_AttackGo, ownTalk)
	t:SetWaitEventOnComplete(T_FB_Boss_Hurt, enemyHurtBack)
	t:SetWaitEventOnComplete(T_FB_Boss_HurtBack, StaffAttackEnd)
	t:SetWaitEventOnComplete(T_FB_Staff_AttackBack, staffRound)

	SoundMgr.Play(10020)
	t:Play(T_FB_Staff_AttackGo)
	t:Play(T_FB_Boss_Dark)
end

function _P.ShowFightResist(self,data,callBack)
	local fightCount = 1
	local hurt = data.hurt
	local oneHurt = math.floor(hurt / fightCount)
	local startBlood = MFinance.BossPower.ncur

	self.BossTalkList =  _P.GetBossTalk()
	local staffCsv = Csv.Personnel[MFinance.SelectHero.id]
	if staffCsv ~= nil then
		self.StaffTalkList = LuaUtil.Shuffle(staffCsv.FinanceTalk)
	else
		self.StaffTalkList = {}
	end	

	local t = self.mMoudle.SelfRect.CachedTran:GetJTweener("T_Finance_Battle")

	local doHurt = function(isFire)
		local info = self.BOSS
		local lastBlood = startBlood
		startBlood = math.max(0,startBlood - oneHurt)
		local fill = startBlood / self.FullBlood

		info.Bar:DOKill()
		info.BloodText:DOKill()
		local ft = info.Bar:DOFillAmount(fill, 0.2)
		if isFire then
			ft:SetDelay(0.26)
		end
		
		local t = JTweenerManager.IntTween(lastBlood, startBlood, 0.2, function(value)
			if info.BloodText ~= nil then info.BloodText.Text = math.floor((value / self.FullBlood) * 100 + 0.5).."%" end
		end, function()
			if info.BloodText ~= nil then info.BloodText.Text = math.floor(fill * 100 + 0.5).."%" end

			CCommon.ShowFlyText(info.HurtFly, "-" .. oneHurt)
		end)

		t:SetTarget(info.BloodText.CachedTran)
	end


	local ownFire = function ()
		if t ~= nil then
			t:Restore()

			--self.mMoudle.SelfRect:AddOnTime(function(...)
				callBack()
			--end,nil,0.5)
		end
	end

---------------员工 --> boss----------------------------------
	local ownTalk = function()
		if t ~= nil then
			_P.OwnTalk(self,function()
				t:Play(T_FB_Boss_blood)
				t:Play(T_FB_Boss_Hurt)

				SoundMgr.Play(10021)
				local actorPanel = self.mMoudle:Get("ActorLightPanel")
				CCommon.CreateEffect(actorPanel, attackActorId)
			end)
		end
	end

	local enemyHurtBack = function()
		if t ~= nil then
			t:Play(T_FB_Boss_HurtBack)
		end
	end

	local StaffAttackEnd = function()
		doHurt()
		t:Play(T_FB_Staff_AttackBack)
	end

	local staffRound = function()
		if t ~= nil then
			self.mMoudle.SelfRect:AddOnTime(function()
				ownFire()	
			end,nil,0.5)	
		end
	end

	t:SetWaitEventOnComplete(T_FB_Staff_AttackGo, ownTalk)
	t:SetWaitEventOnComplete(T_FB_Boss_Hurt, enemyHurtBack)
	t:SetWaitEventOnComplete(T_FB_Boss_HurtBack, StaffAttackEnd)
	t:SetWaitEventOnComplete(T_FB_Staff_AttackBack, staffRound)

	SoundMgr.Play(10020)
	t:Play(T_FB_Staff_AttackGo)
	t:Play(T_FB_Boss_Dark)
end

----------------
function _P.OwnTalk(self, callBack)
	--播放特效
	if self.LastOwnTalkTween ~= nil then
		self.LastOwnTalkTween:Restore()
	end
	local text = Csv.Talk[self.StaffTalkList[1]].str
	table.remove(self.StaffTalkList, 1)
	self.STAFF.TalkBG.Activity = true
	self.STAFF.TalkText.Text = text--""
	local t = self.STAFF.TalkBG.CachedTran:GetJTweener("T_Finance_BattleTalk")
	self.LastOwnTalkTween = t
	t:SetOnComplete(function()
		if self.mMoudle ~= nil then
			self.STAFF.TalkBG.Activity = false
		end		
	end)
	t:Play()

	self.mMoudle:Get("StaffBSX"):AddOnTime(function()
		callBack()
	end,nil,0.3)
end

--function _P.ThatTalk(self, callBack)
--	--播放特效
--	if self.LastBossTalkTween ~= nil then
--		self.LastBossTalkTween:Restore()
--	end
--	local text = Csv.Talk[self.BossTalkList[1]].str
--[[	table.remove(self.BossTalkList, 1)
	self.BOSS.TalkBG.Activity = true
	self.BOSS.TalkText.Text = ""
	local t = self.BOSS.TalkBG.CachedTran:GetJTweener("T_CommerceBattle_BossTalk")
	self.LastBossTalkTween = t
	local tween = t:GetTweenForType(42)
	if tween ~= nil then
		tween.ToText = text
		tween.ScrambleChars = text
	end
	t:SetOnComplete(function()
		if self.mMoudle ~= nil then
			self.BOSS.TalkBG.Activity = false
			callBack()
		end		
	end)
	t:Play()
end
--]]
---------------------------------------------------------------------

function _P.ShowRankView(self,listData,type)
	local rankView = self.mRankView
	local content = self.mAllContent
	rankView.Activity = true
	content:DestroyChildren()

	local rankData = listData
	
	if rankData ~= nil then
		for k,v in pairs(rankData) do
			local itemMoudle =  _P.CreatRankItem(type,content,v)
			itemMoudle.SelfRect.CachedTran:SetSiblingIndex(-1)
		end
	end
end

function _P.ShowResiseRank(self,listData,type)
	local rankView = self.mRankView
	local content = self.mAllContent
	rankView.Activity = true

	content:DestroyChildren()
	
	if listData ~= nil then
		table.sort(listData, function (a, b)
			return a.index > b.index
		end)
	end
	
	local rankData = listData
	
	local itemTable = {}
	if rankData ~= nil then
		for k,v in pairs(rankData) do
			_P.CreatRankItem(type,content,v)
		end
	end
end

function _P.AddRandItem(self,data,type)
	local content = self.mAllContent

	local rankData = data.list
	if rankData ~= nil then
		for k,v in pairs(rankData) do
			_P.CreatRankItem(type,content,v)
		end
	end
	
end

function _P.CreateOwnRank(self,data)
	local ownInfo = self.mOwnInfo
	ownInfo.Activity = true
	ownInfo:DestroyChildren()
	
	if data ~= nil then
		_P.CreatRankItem(MFinance.FinaceType.FinaceRank_2,ownInfo,data)
	end
end

function _P.CreatRankItem(type,content,data)
	local itemMoudle = JGuiManager.GetMoudle(content,"M_FB_PKRankItem", WindowType.UI, 10)
	
	local name = itemMoudle:Get("nameText")
	local infoText = itemMoudle:Get("InfoText")

	if type == MFinance.FinaceType.FinaceRank_1 then
		local itemData
		if data.items ~= nil then
			itemData = Csv.Item[data.items[1].id]
		end
		name.Text = data.name
		if itemData ~= nil then
			infoText.Text = Csv.Text("finance_battleget_fb1",{num = data.waves,name = itemData.name})--"抵御了第"..data.waves.."波股市做空获得了"..itemData.name
		end
	elseif type == MFinance.FinaceType.FinaceRank_2 then
		infoText.Text = Csv.Text("finance_battleget_fb2",{num = data.hurt})---"对非法机构抵御了"..data.hurt
		name.Text = data.index.."."..data.name
	end
	itemMoudle.SelfRect.CachedTran:SetSiblingIndex(0)
	return itemMoudle
end

return _M