local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire"Dev.Common.CCommon"
local MMain = JRequire "Dev.Main.MMain"
local TabGroup = JRequire "Dev.Common.TabGroup"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MPlayer = JRequire "Dev.Player.MPlayer"
local MVipWelfare = JRequire"Dev.VIPWelfare.MVipWelfare"
local VipReward = JRequire"Dev.VIPWelfare.VipReward"
local VipDayWelfare = JRequire"Dev.VIPWelfare.VipDayWelfare"
local CTrigger = JRequire "Dev.Main.CTrigger"
--@RefType [Dev.Main.UStoryMoudle.bytes#_M]
local UStoryMoudle = JRequire "Dev.Main.UStoryMoudle"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local SCROLL_WIDTH = 720
local VIP_MAX = 18
local ITEM_WIDTH = 129

--界面删除前回收
function _M:BeforeDestroy( ... )
	if self.StoryMoudle ~= nil then
		self.StoryMoudle:Destroy()
		self.StoryMoudle:delete()
		self.StoryMoudle = nil
	end
	if self.mTabHandle ~= nil then
		self.mTabHandle:delete()
		self.mTabHandle = nil
	end
	if self.mDayWelfareMoudle ~= nil then
		self.mDayWelfareMoudle:delete()
		self.mDayWelfareMoudle = nil
	end
	if self.mRewardMoudle ~= nil then
		self.mRewardMoudle:delete()
		self.mRewardMoudle = nil
	end
end

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _R.ShowFirstReward(self,viplv)
	--首次奖励领取
	--剧情展示
end

function _R.ShowDayReward(self,viplv)
	--每日奖励
	_P.OnChoose(self, MVipWelfare.selectToggle)

	if self.mDayWelfareMoudle ~= nil then
		self.mDayWelfareMoudle:ShowDailyReward()
	end
end

function _R.RefreshDiscont(self)
	--折扣礼包
	_P.OnChoose(self, MVipWelfare.selectToggle)
end

function _R.ShowBuyDiscont(self,viplv)
	--折扣礼包
	_P.OnChoose(self, MVipWelfare.selectToggle)

	if self.mDayWelfareMoudle ~= nil then
		self.mDayWelfareMoudle:ShowDiscountGift()
	end
end

function _R.RefreshView(self)
	_P.OnChoose(self, MVipWelfare.selectToggle)
end


function _M:OnCreate(chooseFuncId)
	local moudle = self:CreateMoudle(self._RootNode,"M_Welfare_Vip")
	self.Moudle = moudle

	local closeBtn = moudle:Get("closeBtn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)

	local vipTitle = moudle:Get("TitleText")
	vipTitle.Text = Csv.Text("vip_title")
	self.mMainTitle = vipTitle

	self.mRewardRect = moudle:Get("rewardRect")
	self.mDayWelfare = moudle:Get("welfareRect")

	local currentVip = MPlayer.GetVip()

	-----原来是进来去到未领取的页签------------
	-----策划需求进来直接去到当前vip等级的下一级页签
	local nextVip = currentVip +1 
	if nextVip >= VIP_MAX then
		nextVip = VIP_MAX
	end
	chooseFuncId = MVipWelfare.GetVipSysID(nextVip)

	----------页签--------------
	local scrollView = moudle:Get("downScroll")
	local content = moudle:Get("downContent")
	local nextBtn = moudle:Get("NextBtn")
	local beforeBtn = moudle:Get("BeforeBtn")

	nextBtn:AddOnButton(function()
		_P.OnClickNext(self,1)
	end,nil,1)

	beforeBtn:AddOnButton(function()
		_P.OnClickNext(self,-1)
	end,nil,1)

	local openFunc = MMain.GetOpenedFuncs(self._SysId, true)
	local _funcs = {}
	for k,v in pairs(openFunc)do
		table.insert(_funcs,{id = v.id,icon = v.icon,sort = v.sort,name = v.name})
	end
	
	table.sort(_funcs,function(a,b)
		return a.sort < b.sort
	end)

	
	local count = #_funcs
	local vipTable = {}
	if count > 0 then
		lastChoose = chooseFuncId
		local isHave = false
		local defaultColor = Color(247/255, 211/255, 169/255, 1)
		local tabHandle = TabGroup.new(function (funcId)
			_P.OnChoose(self, funcId)
		end, "fl_007_1", "fl_008_1",nil,defaultColor,nil,nil,scrollView,content)
	
		for k,v in pairs(_funcs) do
			local sheetMoudle = JGuiManager.GetMoudle(content,"M_Welfare_Item2", WindowType.UI, 10)
			local sheetRect = sheetMoudle.SelfRect
			sheetRect.Activity = true

			local sheetNameText =  sheetMoudle:Get("nameText_1")
			sheetNameText.Activity = true

			tabHandle:Add(v.id, sheetRect, sheetNameText, v.name)
		
			if lastChoose == v.id then
				isHave = true
			end

			--注册小红点
			self:RegistRedpoint(sheetMoudle:Get("redPoint_1"), v.id)

			vipTable[v.id] = sheetMoudle
		end
		self.VipTable = vipTable

		if not isHave then
			lastChoose = _funcs[1].id
		end
		tabHandle:Choose(lastChoose)
		self.mTabHandle = tabHandle
	end	

end


function _P.OnChoose(self, funcId)
	self.LastChooseFuncId = funcId
	local canRewardVip = _P.GetViplevelBySysID(funcId) -- MVipWelfare.GetCanRewardVip()
	
	local vipState = MVipWelfare.GetVipState(canRewardVip)

	if vipState == MVipWelfare.VIPREWARD_STATE.got then
		self.mRewardRect.Activity = false
		self.mDayWelfare.Activity = true

		if self.mDayWelfareMoudle == nil then
			self.mDayWelfareMoudle = VipDayWelfare.new(self.mDayWelfare)
		end
		self.mDayWelfareMoudle:RefreshView(canRewardVip)
	else
		self.mRewardRect.Activity = true
		self.mDayWelfare.Activity = false

		if self.mRewardMoudle == nil then
			self.mRewardMoudle = VipReward.new(self.mRewardRect)
		end
		self.mRewardMoudle:RefreshView(canRewardVip)
	end

	MVipWelfare.selectToggle = funcId

	_P.ScrollListByFuncId(self,funcId)
end

function _P.ScrollListByFuncId(self,funcId)
	local extra = Define.SysId.Welfare_Vip1 - 1
	local index = funcId - extra
	local posX = SCROLL_WIDTH/2 - ITEM_WIDTH/2 - (index - 1) * ITEM_WIDTH
	if posX > 0 then
		posX = 0
	end
	local maxRightPosX = - (VIP_MAX * ITEM_WIDTH - SCROLL_WIDTH)
	if posX < maxRightPosX then
		posX = maxRightPosX
	end

	local content = self.Moudle:Get("downContent")
	--content.LocalPosition = Vector2(posX,0)
	content:DOAnchorPosX(posX,0.2)
end

function _P.OnClickNext(self,num)
	if self.LastChooseFuncId ~= nil then
		local funcId = self.LastChooseFuncId + num
		if funcId >= Define.SysId.Welfare_Vip1 and funcId <= Define.SysId.Welfare_Vip18 then
			self.mTabHandle:JustChoose(funcId)
		end
	end
end

function _R.ShowMoudle(self)
	if self.Moudle == nil then
		return
	end
	if self.StoryMoudle ~= nil and self.StoryMoudle._Root ~= nil then
		return
	end
	
	local info = MVipWelfare.DequeueWaitShow()
	if info ~= nil then
		if info.storyType == 7 then
			self.StoryMoudle = UStoryMoudle.new(self.Moudle:Get("StoryShowRoot"), info.storyId, function ()
				_R.ShowMoudle(self)
			end, info,info.data)
		else
			self.StoryMoudle = UStoryMoudle.new(self.Moudle:Get("StoryShowRoot"), info.storyId, function ()
				_R.ShowMoudle(self)
			end, info)
		end		
	end	
end

function _R.GetSortLayer(self, refTab)
	refTab.type = self._Type
	refTab.index = self._CanvasIndex
end

function _R.AddSortLayerCount(self, count)
	self._CanvasIndex = self._CanvasIndex + count + 1
end

function _P.GetViplevelBySysID(funcId)

	if funcId == Define.SysId.Welfare_Vip1 then
		return 1
	elseif funcId == Define.SysId.Welfare_Vip2 then
		return 2
	elseif funcId == Define.SysId.Welfare_Vip3 then
		return 3
	elseif funcId == Define.SysId.Welfare_Vip4 then
		return 4
	elseif funcId == Define.SysId.Welfare_Vip5 then
		return 5
	elseif funcId == Define.SysId.Welfare_Vip6 then
		return 6
	elseif funcId == Define.SysId.Welfare_Vip7 then
		return 7
	elseif funcId == Define.SysId.Welfare_Vip8 then
		return 8
	elseif funcId == Define.SysId.Welfare_Vip9 then
		return 9
	elseif funcId == Define.SysId.Welfare_Vip10 then
		return 10
	elseif funcId == Define.SysId.Welfare_Vip11 then
		return 11
	elseif funcId == Define.SysId.Welfare_Vip12 then
		return 12
	elseif funcId == Define.SysId.Welfare_Vip13 then
		return 13
	elseif funcId == Define.SysId.Welfare_Vip14 then
		return 14
	elseif funcId == Define.SysId.Welfare_Vip15 then
		return 15
	elseif funcId == Define.SysId.Welfare_Vip16 then
		return 16
	elseif funcId == Define.SysId.Welfare_Vip17 then
		return 17
	elseif funcId == Define.SysId.Welfare_Vip18 then
		return 18
	elseif funcId == Define.SysId.Welfare_Vip19 then
		return 19
	elseif funcId == Define.SysId.Welfare_Vip20 then
		return 20
	elseif funcId == Define.SysId.Welfare_Vip21 then
		return 21
	elseif funcId == Define.SysId.Welfare_Vip22 then
		return 22
	elseif funcId == Define.SysId.Welfare_Vip23 then
		return 23
	elseif funcId == Define.SysId.Welfare_Vip24 then
		return 24
	elseif funcId == Define.SysId.Welfare_Vip25 then
		return 25
	elseif funcId == Define.SysId.Welfare_Vip26 then
		return 26
	elseif funcId == Define.SysId.Welfare_Vip27 then
		return 27
	elseif funcId == Define.SysId.Welfare_Vip28 then
		return 28
	elseif funcId == Define.SysId.Welfare_Vip29 then
		return 29
	elseif funcId == Define.SysId.Welfare_Vip30 then
		return 30
	else
		return 1
	end
end


return _M