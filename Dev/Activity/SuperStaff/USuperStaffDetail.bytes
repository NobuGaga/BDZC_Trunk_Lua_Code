local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local CCommon = JRequire "Dev.Common.CCommon"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"
local MStaff = JRequire "Dev.Staff.MStaff"
local MBag = JRequire "Dev.Bag.MBag"
local _M = Class(WindowBase)
local _P = {}
local _R = {}

local Color_Red = Color(255/255,93/255,140/255,1)
local Color_Blue = Color(93/255,153/255,255/255,1)
local GTE_EFFECT_ID = 5

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(actid,data)
	local moudle = self:CreateMoudle(self._RootNode, "M_SuperStaff_Details")
	self.mMoudle = moudle

	moudle:Get("BackBtn"):AddOnButton(function(...)
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)

	local itemConf = Csv.Item[data.cost.id]
	moudle:Get("C_Btn_a"):AddOnButton(function(...)
		SoundMgr.Play(10001)
		local costIconNum = MBag.GetItemNum(itemConf.id)
			CCommon.CheckTips(function(isSure, arg)
				if isSure then
					if not MBag.CheckItemEnough(data.cost.id, data.cost.num) then
						return
					end
					CActivity.GetRewardReq(actid, data.index)
				end
			end, {items = {[itemConf.id] = costIconNum} ,content = Csv.Text("jianchen_recruit_tip", {name = itemConf.name, num = data.cost.num})})
	end, nil, 0.9)

	local csvPerson = Csv.Personnel[data.attrid]
	if csvPerson ~= nil then
		moudle:Get("Name").Text = csvPerson.name
		moudle:Get("ZZtextNum").Text = MStaff.DoGetAllApitudeInit(data.attrid)
		local have = MBag.GetItemNum(data.cost.id)
		local need = data.cost.num
		local textNum = moudle:Get("IconNum")
		if have >= need then
			textNum.Color = Color_Blue
		else
			textNum.Color = Color_Red
		end
		textNum.Text = Csv.Text("company_exp",{num = have,max = need})
		local csvItem = Csv.Item[data.cost.id]
		moudle:Get("Icon").SpriteName = csvItem.icon

		local costNode = moudle:Get("cost")
		local geted = moudle:Get("Geted")
		if MStaff.NoStaff(data.attrid) then
			costNode.Activity = true
			geted.Activity = false
		else
			costNode.Activity = false
			geted.Activity = true
		end

		for i = 1,7 do
			local star = moudle:Get("Star"..i)
			if star ~= nil  then
				if csvPerson.star >= i then
					star.Activity = true
				else
					star.Activity = false
				end
			end
		end

		for i = 1,4 do
			local imgZizhi = moudle:Get("Zizhi"..i)
			if imgZizhi ~= nil then
				imgZizhi.Activity = false
			end
		end
		for k,v in ipairs(csvPerson.specialtyIcon) do
			local imgZizhi = moudle:Get("Zizhi"..k)
			if imgZizhi ~= nil then
				imgZizhi.Activity = true
				imgZizhi.SpriteName = v
			end
		end

		if csvPerson.aureole then
			local itemContent = moudle:Get("content")
			for k,v in pairs(csvPerson.aureole) do
				_P.CreateSkillItem(itemContent, v)
			end
		end

		if csvPerson.prefab ~= nil and csvPerson.prefab > 0 then
			CCommon.CreateActor(moudle:Get("BSX"), csvPerson.prefab, CCommon.ActorFieldMap.super_big)
		else
			moudle:Get("BSX").SpriteName = csvPerson.asset
		end	
		moudle:Get("InfoText").Text = csvPerson.tips
	end

	moudle:Get("ZZtext").Text = Csv.Text("jianchen_1")
	moudle:Get("TimeText").Text = Csv.Text("jianchen_2")
	moudle:Get("TimeNum").Text = Csv.Text("jianchen_3")
	moudle:Get("HaloText").Text = Csv.Text("jianchen_4")
	moudle:Get("C_text").Text = Csv.Text("jianchen_5")
end

-- 光环技能
function _P.CreateSkillItem(itemGrid, autroleId)
	local itemModule = JGuiManager.GetMoudle(itemGrid, "M_Activity_Sdjc_Skill_Item")
	if itemModule == nil or autroleId == nil then return end

	local aureoleConf = Csv.Aureole[autroleId * 1000 + 1]
	if aureoleConf == nil then return end

	itemModule:Get("Icon").SpriteName = aureoleConf.icon
	itemModule.SelfRect.SpriteName = aureoleConf.iconColor

	itemModule.SelfRect:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("UFourTraitorsAureoleSkill", aureoleConf)
	end)
end

function _R.OnRecuitCallBack(self, data)
	local moudle = self.mMoudle
	moudle:Get("cost").Activity = false
	local effect = CCommon.CreateEffect(moudle:Get("effectNode"), GTE_EFFECT_ID, nil, function( ... )
		if effect ~= nil then
			effect:Destroy()
		end
		moudle:Get("Geted").Activity = true
	end, {M_Effect_Get = "fl_030"})
end

return _M