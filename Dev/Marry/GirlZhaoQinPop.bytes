local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire"Dev.Common.CCommon"
local luaUtil = JRequire"Libs.LuaUtil"
local MGirl = JRequire"Dev.Girl.MGirl"
local CGirl = JRequire"Dev.Girl.CGirl"
local MBag = JRequire "Dev.Bag.MBag"
local MPlayer = JRequire "Dev.Player.MPlayer"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MFriend = JRequire "Dev.Friend.MFriend"

local JTweenerManager = CS.JTween.JTweenerManager
local DEGREE_ID = 10204

local _M = Class(WindowBase)
local _P = {}
local _R = {}

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:Destroy()
	local moudle = self.mMoudle
	if moudle ~= nil then
		moudle:Destroy()
	end
end

function _M.RefreshZhaoqin(self)
	_P.ShowZhaoqinItems(self)
end


--function _M:OnCreate()
--	local moudle = self:CreateMoudle(self._RootNode,"M_Girl_Married_Tiqin4")
function _M:ctor(parent)
	self._RootNode = parent
	local moudle = JGuiManager.GetMoudle(self._RootNode, "M_Girl_Married_zhaoqin", WindowType.Tips2, 0)
	self.mMoudle = moudle

	CGirl.ReqZhaoQin(MGirl.MarriedSelectID)

	self.mContent = moudle:Get("content")
	self.mScrollView = moudle:Get("scrollView")
	self.mInfoRect = moudle:Get("InfoBg")
	self.mNoTips = moudle:Get("TextBG")
	
	--moudle:Get("C_Text").Text = Csv.Text("married_main_server")
	moudle:Get("Name").Text = Csv.Text("married_attr_all")
	moudle:Get("TabText1").Text = Csv.Text("married_tiqin_tab1")
	moudle:Get("TabText2").Text = Csv.Text("married_tiqin_tab2")
	moudle:Get("MC").Text = Csv.Text("married_name_title")
	moudle:Get("MQ").Text = Csv.Text("married_parent_title")
	moudle:Get("SL").Text = Csv.Text("married_gongguan")
	moudle:Get("DJ").Text = Csv.Text("married_xingzhen")
	moudle:Get("SH").Text = Csv.Text("married_jisu")
	moudle:Get("YX").Text = Csv.Text("married_yingxiao")
	moudle:Get("XL").Text = Csv.Text("Girl_married_identity")
	--moudle:Get("Tips").Text = Csv.Text("married_zhaoqin_tips")
	moudle:Get("NoneText").Text = Csv.Text("married_zhaoqin_no")	

	--往右
	moudle:Get("JT1"):AddOnButton(function()
		_P.OnClickNext(self,1)
	end,nil,1.2)

	--往左
	moudle:Get("JT2"):AddOnButton(function()
		_P.OnClickNext(self,-1)
	end,nil,1.2)

	--------------------------------------------------------------------------
	local data = MGirl.GetUnMarriedData(MGirl.MarriedSelectID)
	local marriedCostItem = Csv.BabyDegree[data.degree].marriageItemCost --结婚道具

	local goldData = Csv.Item[Define.AssetsType.Gold]
	local goldBox = moudle:Get("goodsBox1")
	local goldIcon = moudle:Get("goods1")
	local goldcostText = moudle:Get("consumeText1")
	local goldhaveText = moudle:Get("HaveText1")
	local selectGoldText = moudle:Get("C_text")
	local useGoldBtn = moudle:Get("Btn_b")

	local costGold = MGirl.GetMarriedGoldCost(data.degree)--GetMarriedGoldCost
	local haveGold = MBag.GetItemNum(Define.AssetsType.Gold)
	local goldItemData = Csv.Item[Define.AssetsType.Gold]

	selectGoldText.Text = Csv.Text("Girl_married_select")--"选择"
	goldBox.SpriteName = goldData.colorIcon
	goldIcon.SpriteName = goldData.icon
	goldcostText.Text = Csv.Text("Girl_married_costGold",{cost = costGold})--"消耗<color=#FF2323>"..costGold.."</color>钻石"
	goldhaveText.Text = Csv.Text("Girl_married_haveGold",{have = haveGold})--"现拥有<color=#FF2323>"..haveGold.."</color>钻石"

	useGoldBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		if self.SelectBabyId == nil or self.SelectBabyId <= 0 then
			CCommon.ShowError(Csv.Text("married_baby_no"))
			return
		end
		if costGold <= haveGold then
			CGirl.ReqMarrySomeone(MGirl.MarriedSelectID,self.SelectBabyId,Define.AssetsType.Gold)
			WindowMgr.Call("UMarriedTips","CloseView")--关闭结婚选项
		else
			CCommon.ShowError(Csv.Text("bag_errNoEnough",{name = goldItemData.name}))
		end
	end)

	local itemData = Csv.Item[marriedCostItem[1]]
	local itemBox = moudle:Get("goodsBox2")
	local itemIcon = moudle:Get("goods2")
	local itemcostText = moudle:Get("consumeText2")
	local itemhaveText = moudle:Get("HaveText2")
	local selectItemText = moudle:Get("C_text_0")
	local useItemBtn = moudle:Get("Btn_d")

	local haveItem = MBag.GetItemNum(marriedCostItem[1])
	
	selectItemText.Text = Csv.Text("Girl_married_select")--"选择"
	itemBox.SpriteName = itemData.colorIcon
	itemIcon.SpriteName = itemData.icon
	itemcostText.Text = Csv.Text("Girl_married_costItem",{name = itemData.name,num = marriedCostItem[2]})--"消耗"..itemData.name.."X"..marriedCostItem[2]
	itemhaveText.Text = Csv.Text("Girl_married_haveItem",{have = haveItem,name = itemData.name})--"现拥有<color=#FF2323>"..haveItem.."</color>"..itemData.name

	useItemBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		if self.SelectBabyId == nil or self.SelectBabyId <= 0 then
			CCommon.ShowError(Csv.Text("married_baby_no"))
			return
		end

		if marriedCostItem[2] <= haveItem then
			CGirl.ReqMarrySomeone(MGirl.MarriedSelectID,self.SelectBabyId,marriedCostItem[1])
			WindowMgr.Call("UMarriedTips","CloseView")--关闭结婚选项
		else
			CCommon.ShowError(Csv.Text("bag_errNoEnough",{name = itemData.name}))
		end
	end)

	local timeValue = moudle:Get("Time_0")
	local timeText = moudle:Get("Time1")
	
	local refreshCDBtn = moudle:Get("C_Btn_a")
	local refreshCD = moudle:Get("C_text_0_0")
	timeText.Text = Csv.Text("Girl_married_refreshTime")
	refreshCD.Text = Csv.Text("Girl_married_refreshTimeFirst")--"立即刷新"
	---------------------------------------------------------------------------------------------
	refreshCDBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		local cost = 100
		local GoldCount = MBag.GetItemNum(Define.AssetsType.Gold)
		CCommon.CheckTips(function(isSure,rg)self:OnClickRefreshCDBtn(isSure, arg)
		end,{items = {[1] = GoldCount},content = Csv.Text("Girl_married_isCostGold")})--"是否花费100钻石立即刷新"
	end, nil, 0.9)

	timeValue.Text =  luaUtil.GetTimeHMS(MGirl.ZhaoqinCD)

	moudle.SelfRect:AddOnUpdate(function()
		timeValue.Text =  luaUtil.GetTimeHMS(MGirl.ZhaoqinCD)
		if MGirl.ZhaoqinCD <= 0 then
			CGirl.ReqZhaoQin(MGirl.MarriedSelectID)
		end
	end,nil,1)
end

function _P.RefreshInfo(self,data)
	--[[
	if self.mSelectItem ~= nil then
		self.mSelectItem:Get("select").Activity = false
	end
	self.mSelectItem = self.mDataItems[data.babyid]
	if self.mSelectItem ~= nil then
		self.mSelectItem:Get("select").Activity = true
	end
	
	--]]
	self.SelectBabyId = data.babyid
	local moudle = self.mMoudle

	local bxsImg = moudle:Get("bxs")
	local tab1 = moudle:Get("Tab1")
	local tab2 = moudle:Get("Tab2")
	local name = moudle:Get("MCNum")
	local parent = moudle:Get("MQNum")
	local parentTitle =  moudle:Get("MQ")
	local gongguan = moudle:Get("SlNum")
	local xingzheng = moudle:Get("DjNum")
	local jisu = moudle:Get("ShNum")
	local yingxiao = moudle:Get("YXjNum")
	local allAttr = moudle:Get("Num")
	local xueli = moudle:Get("XKNum")

	bxsImg.SpriteName = MGirl.GetBabyIcon(data.gender,data.degree)
	--ownIcon:SetNativeSize() 
	--_P.CheckTab(self,data.ownerId)

	if data.ownerGender == 1 then
		parentTitle.Text = Csv.Text("Girl_married_mother")
	else
		parentTitle.Text = Csv.Text("Girl_married_father")
	end

	xueli.Text = Csv.Const(DEGREE_ID)[data.degree]
	name.Text = data.name
	parent.Text = data.ownerName
	gongguan.Text = data.attr.Wuli
	xingzheng.Text = data.attr.Zhili
	jisu.Text = data.attr.Zhengzhi
	yingxiao.Text = data.attr.Meili
	allAttr.Text = data.attr.Wuli + data.attr.Zhili+data.attr.Zhengzhi+data.attr.Meili
end


function _P.ShowZhaoqinItems(self)
	local content = self.mContent
	content:DestroyChildren()

	local dataItems = {}
	local datas = MGirl.ZhaoqinList

	local index = 0
	for k,v in pairs(datas) do
		index = index +1
		local _moudle = _P.CreatItem(self,content,v,index)
		dataItems[index] = {data = v,moudle = _moudle}
	end
	self.mDataItems = dataItems

	if #datas <= 0 then
		self.mInfoRect.Activity = false
		self.mNoTips.Activity = true
		--self.mNoneText.Text = Csv.Text("Girl_married_noZhaoqin")--"暂无招亲对象"
	else
		self.mInfoRect.Activity = true
		self.mNoTips.Activity = false
		_P.ClickBabyItem(self,1)
	end
end

function _P.CreatItem(self,content,data,index)
	local _moudle = JGuiManager.GetMoudle(content, "M_Girl_Married_Tiqin1_Item", WindowType.UI, 10)

	local headIcon = _moudle:Get("Head")
	
	headIcon.SpriteName = MGirl.GetBabyIcon(data.gender,data.degree)
	headIcon:AddOnButton(function(...)
		SoundMgr.Play(10001)
		_P.ClickBabyItem(self,index)
	end)

	return _moudle
end


function _P.OnClickNext(self,num)
	if self.mSelectItemIndex == nil then
		self.mSelectItemIndex = 1
	end
	local index = self.mSelectItemIndex + num
	local dataItems = self.mDataItems
	if dataItems ~= nil then
		if index <= 0 or index > #dataItems then
			return
		end
	else
		return
	end

	_P.ClickBabyItem(self,index)
end

function _P.ClickBabyItem(self,index)
	if self.mSelectItemIndex ~= nil and self.mSelectItemIndex == index then
		return
	end

	self.mSelectItemIndex = index
	local dataItems = self.mDataItems
	
	local itemMoudle = self.mSelectItem
	if itemMoudle ~= nil then
		itemMoudle:Get("select").Activity = false
	end

	local item = dataItems[index]
	
	
	if item ~= nil then
		itemMoudle = item.moudle
		itemMoudle:Get("select").Activity = true
		_P.RefreshInfo(self,item.data)
		_P.MoveContent(self,itemMoudle)

		self.mSelectItem = itemMoudle
	end
end

function _P.MoveContent(self,tarItem)
	local content = self.mContent
	local scroll = self.mScrollView

	local scrollWid = scroll.SizeDelta.x
	local itemPox = tarItem.SelfRect.LocalPosition.x
	local itemWid = tarItem.SelfRect.SizeDelta.x
	local contentPox = content.LocalPosition.x

	local tarPox = (itemPox + itemWid/2) - (scrollWid - contentPox)
	local rightPox = (itemPox - itemWid/2) + contentPox

	if tarPox > 0 then
		content:DOAnchorPosX(-tarPox + contentPox,0.2)
	elseif rightPox < 0 then
		content:DOAnchorPosX(contentPox - rightPox,0.2)
	end
end

function _M:OnClickRefreshCDBtn(isSure, arg)
	if isSure == true then
		local GoldCount = MBag.GetItemNum(Define.AssetsType.Gold)
		local cost = 100
		local itemDate = Csv.Item[Define.AssetsType.Gold]

		if cost > GoldCount then
			CCommon.ShowError(Csv.Text("bag_errNoEnough",{name = itemDate.name}))
		else
			CGirl.ReqZhaoQinRefresh(MGirl.MarriedSelectID)
		end
	end
end

function _P.CheckTab(self,id)
	local isQinjia = MFriend.IsQingjiaById(id)
	local isFriend = MFriend.IsFriendById(id)

	local moudle = self.mMoudle
	local tab1 = moudle:Get("Tab1")
	local tab2 = moudle:Get("Tab2")
	tab1.Activity = false
	tab2.Activity = false

	if isFriend then
		tab1.Activity = true
	end
	if isQinjia then
		tab2.Activity = true
	end
end

return _M