-- 环球旅行界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CActivity = JRequire "Dev.Activity.CActivity"
local MActivity = JRequire "Dev.Activity.MActivity"
local JTweenerManager = CS.JTween.JTweenerManager
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MPlayer = JRequire "Dev.Player.MPlayer"
local CCommon = JRequire "Dev.Common.CCommon"
local luaUtil = JRequire"Libs.LuaUtil"
local MBag = JRequire "Dev.Bag.MBag"
local ColorSpriteNames = {'hq_box_01', 'hq_box_02', 'hq_box_03', 'hq_box_04', 'hq_box_05', 'hq_box_06', 'hq_box_06'}

local _M = Class(WindowBase)
local _P = {}
local _R = {}


local MOUDLE_FADEOUT = "T_MOUDLE_FADEOUT"
local MOUDLE_FADEIN = "T_MOUDLE_FADEIN"
local DoubleActorId = 10163
local DiceEffectID = 10159
local HeadBoxEffectId = 10160
local RewardEffectId = 10161
local OffestX = 48
local OffestY = 42
local QualityScaleNumArr = Csv.Const(20159)
local UnityTime = CS.UnityEngine.Time
local lastTime = 0
local lastTenTime = 0
local TENNUM = 10
local MaxNum = 42


function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end


function _M:OnCreate()
	local module = self:CreateMoudle(self._RootNode, "M_GlobalTravel")
	self.mModule = module

	local actId = MActivity.ActIdForType[Define.ActivityType.GlobalTraval]
	if actId ~= nil then
		self.ActInfo = MActivity.GetFromId(actId)
		self.ActId = actId
	end

	if module == nil or self.ActInfo == nil then
		return
	end

	local vipLv = MPlayer.GetVip()
	self.extraBuyTime = Csv.Vip[vipLv].GlobalTravalCount

	local closeBtn = module:Get("BackBtn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)

	local helpBtn = module:Get("C_Full_Help_Btn")
	if helpBtn ~= nil then
		if Csv.Rule[self._SysId] ~= nil then
			helpBtn:AddOnButton(function ( ... )
				SoundMgr.Play(10001)
				WindowMgr.Create("URuleTips", self._SysId)
			end, nil,  1.2)
		else
			helpBtn.Activity = false
		end
	end

	local exchangeBtn = module:Get("ExchangeBtn")
	exchangeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("UGlobalTravalExchange", self.ActInfo)
	end, nil, 0.9)
	self.ExchangeBtn = exchangeBtn

	CCommon.CreateEffect(module:Get("ExActorPanel"), RewardEffectId)
	_P.UpdateExchangeEffect(self, self.ActInfo.exchangeShop, self.ActInfo.numberCount)

	local enterBtn = module:Get("EnterBtn")
	enterBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)

		if not _P.CheckBtnIsClick(1, 1) then
			return
		end
		_P.OnEnterTraval(self)
	end, nil, 0.9)
	module:Get("EnterText").Text = Csv.Text("global_forward")
	module:Get("Tips_0").Text = Csv.Text("global_show")
	module:Get("AutoText").Text = Csv.Text("global_autoTip")

	local tenEnterBtn = module:Get("EnterBtn2")
	tenEnterBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)

		if not _P.CheckBtnIsClick(2, 1) then
			return
		end
		_P.OnTenEnterTraval(self)
	end, nil, 0.9)
	module:Get("EnterText2").Text = Csv.Text("global_ten_btn")

	local addBtn = module:Get("AddBtn")
	addBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		_P.OnBuyTravalCount(self)
	end, nil, 0.9)
	addBtn.Activity = false

	self.AutoGouImg = module:Get("gou")
	self.AutoGouImg.Activity = MActivity.IsTravalAutoBuy
	local autoAddBtn = module:Get("AutoBtn")
	autoAddBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		MActivity.IsTravalAutoBuy = not MActivity.IsTravalAutoBuy
		self.AutoGouImg.Activity = MActivity.IsTravalAutoBuy
	end, nil, 0.9)

	self.MaxGridNum = #Csv.GlobalTravalItem - 1
	_P.SetGridDetail(self, self.ActInfo.curPosId)

	local diceNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
	module:Get("Title").Text = Csv.Text("global_title")
	self.LeaveText = module:Get("SliderText")
	self.LeaveText.Text = Csv.Text("global_left_times", {num = diceNum})

	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	local state = self.ActInfo.state
	self.DiceNameArrs = travalConf.diceIcon
	module:Get("date").Text = Csv.Text("global_date", {startTime = _P.TransToYMD(state.startTime),
														endTime = _P.TransToYMD(state.endTime)})
	module:Get("time").Text = Csv.Text("gloabl_duan")

	module:Get("Head").SpriteName = MPlayer.GetHeadIcon()
	CCommon.CreateEffect(module:Get("IconActorPanel"), HeadBoxEffectId)
	self.HeadBox = module:Get("IconRect")

	_P.SetMapData(self)
	_P.SetAutoData(self)
end


function _P.TransToYMD(time)
	return os.date("%Y.%m.%d", time)
end


function _P.SetGridDetail(self, curPosId)
	local gridConf = Csv.GlobalTravalItem[curPosId]
	if gridConf then
		local curItemId = 0
		for k,v in pairs(self.ActInfo.posReward) do
			if v.posId == curPosId then
				curItemId = v.itemId
				break
			end
		end

		local itemName = ''
		local tipText = self.mModule:Get("Tips")
		if curItemId ~= 0 then
			local itemConf = Csv.Item[curItemId]
			if itemConf then
				itemName = itemConf.name
				tipText.Text = Csv.Text(gridConf.desc, {name = itemName})
			else
				tipText.Text = Csv.Text("global_tips")
			end
		else
			tipText.Text = Csv.Text("global_tips")
		end
	end
end


function _P.SetMapData(self)
	local cityList = self.ActInfo.posReward
	if cityList == nil then return end

	for k,v in pairs(cityList) do
		_P.SetOneCityData(self, v, self.ActInfo.travalLoopCount, true)
	end
end


function _P.SetOneCityData(self, data, travalLoopCount, isSetHeadPos)
	local module = self.mModule
	if data ~= nil and next(data) ~= nil and data.itemId ~= 0 then
		local iconImg = module:Get("Icon" .. data.posId)
		local qualityImg  = module:Get("BtnBox" .. data.posId)
		local numText = module:Get("Num" .. data.posId)
		numText.Text = 'X' .. data.count
		
		local itemConf = Csv.Item[data.itemId]
		if data.posId == MaxNum then
			qualityImg.SpriteName = 'bide_2'
		else
			qualityImg.SpriteName = ColorSpriteNames[itemConf.color]
		end

		local scaleNum = QualityScaleNumArr[(itemConf.color or 1)]
		iconImg.LocalScale = Vector3(scaleNum, scaleNum, scaleNum)
		iconImg.SpriteName = itemConf.icon
		iconImg:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			_P.OnClickIcon(itemConf.id)
		end, nil, scaleNum)

		local curTruePos = (((not isSetHeadPos) and travalLoopCount and travalLoopCount > 1 and 1) or 0) * self.MaxGridNum + data.posId
		_P.SetItemGray(self, curTruePos <= self.ActInfo.curPosId, data.posId)
	end

	if isSetHeadPos and data.posId ~= nil and data.posId == self.ActInfo.curPosId then
		local qualityImg = module:Get("BtnBox" .. data.posId)
		self.HeadBox.LocalPosition = Vector2(qualityImg.LocalPosition.x + OffestX , qualityImg.LocalPosition.y + OffestY)
		_P.SetMapPosData(self, self.ActInfo.curPosId)
	end
end


-- 打开道具详情界面
function _P.OnClickIcon(id)
	if id ~= nil then
		WindowMgr.Create("UBagDetailPop", id)
	end
end


function _P.SetItemGray(self, isCannotClick, posId)
	local iconImg = self.mModule:Get("Icon" .. posId)
	local qualityImg  = self.mModule:Get("BtnBox" .. posId)
	local numText = self.mModule:Get("Num" .. posId)
	local numStr = numText.Text
	local num = 1
	if numStr ~= nil then
		num = tonumber(string.sub(numStr, 2, string.len(numStr)))
	end

	if isCannotClick then
		local isShow = _P.CheckIsInArr(self.ActInfo.passPosList, posId)
		iconImg.Activity = not isShow
		iconImg.IsGray = not isShow
		iconImg.RaycastTarget = isShow
		numText.Activity = (not isShow) and num > 1
		qualityImg.IsGray = not isShow
		qualityImg.RaycastTarget = isShow
	else
		iconImg.Activity = true
		iconImg.IsGray = false
		iconImg.RaycastTarget = true
		numText.Activity = num > 1
		qualityImg.IsGray = false
		qualityImg.RaycastTarget = true
	end
end


function _P.CheckIsInArr(listData, posId)
	if listData == nil or next(listData) == nil then
		return false
	end

	for k,v in pairs(listData) do
		if v == posId then
			return true
		end
	end

	return false
end


function _P.OnEnterTraval(self)
	local itemNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
	local needCost = _P.GetNeedCostNum(self)
	local hasNum = MBag.GetItemNum(Define.AssetsType.Gold)
	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	if itemNum <= 0 then
		if MActivity.IsTravalAutoBuy == false then
			CCommon.CheckTips(function(isSure,rg)
				if isSure == true then
					_P.OnBuyDiceToUse(self, travalConf, hasNum, needCost, 2, 1, 0)
				end
			end, {content = Csv.Text("global_buyShow", {num = needCost})})
		else
			_P.OnBuyDiceToUse(self, travalConf, hasNum, needCost, 2, 1, 0)
		end
	else
		CActivity.OnEnterTravalReq()
	end
end


-- 十连前进
function _P.OnTenEnterTraval(self)
	local itemNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
	local needCost = _P.EnterTenNeedCostNum(self, itemNum, self.ActInfo.buyCount)
	local hasNum = MBag.GetItemNum(Define.AssetsType.Gold)
	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	local leaveNum = TENNUM - itemNum

	if leaveNum > 0 then
		if MActivity.IsTravalAutoBuy == false or itemNum ~= 0 then
			CCommon.CheckTips(function(isSure,rg)
				if isSure == true then
					_P.OnBuyDiceToUse(self, travalConf, hasNum, needCost, 4, leaveNum, leaveNum)
				end
			end, {content = Csv.Text("global_ten_tips", {hasNum = itemNum, cost = needCost, needNum = leaveNum})})
		else
			_P.OnBuyDiceToUse(self, travalConf, hasNum, needCost, 4, leaveNum, leaveNum)
		end
	else
		CActivity.OnTenEnterTravalReq()
	end
end


function _P.OnBuyDiceToUse(self, travalConf, hasNum, needCost, buyType, buyNum, leaveNum)
	if hasNum < needCost then
		CCommon.ShowError(Csv.Text("err_shop_buytype"))
	else
		if (self.ActInfo.buyCount + leaveNum) >= travalConf.buyLimit + self.extraBuyTime then
			CCommon.ShowError(Csv.Text("err_siege_actime_max"))
		else
			CActivity.OnBuyTravalReq(buyType, buyNum)
		end
	end
end


function _P.OnBuyTravalCount(self)
	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	local needCost = _P.GetNeedCostNum(self)
	local hasBuyCount = travalConf.buyLimit + self.extraBuyTime - self.ActInfo.buyCount
	if hasBuyCount > 0 then
		CCommon.CheckTips(function(isSure,rg)
			if isSure == true then
				local hasNum = MBag.GetItemNum(Define.AssetsType.Gold)
				if hasNum < needCost then
					CCommon.ShowError(Csv.Text("err_shop_buytype"))
				else
					if self.ActInfo.buyCount >= travalConf.buyLimit + self.extraBuyTime then
						CCommon.ShowError(Csv.Text("err_siege_actime_max"))
					else
						CActivity.OnBuyTravalReq(1, 1)
					end
				end
			end
		end, {content = Csv.Text("global_buyShow", {num = needCost})})
	else
		CCommon.ShowError(Csv.Text("err_siege_actime_max"))
	end
end


function _P.OnMoveHead(self, data, callBack)
	local pos = self.HeadMovePos[1].pos
	local curIndex = self.HeadMovePos[1].index
	if pos then
		_P.SetMapSide(self, pos, data.curPosId)

		local headMoveAnim = self.HeadBox:DOAnchorPos(Vector2(pos[1], pos[2]), 0.35)
			headMoveAnim:OnComplete(function ()
				if curIndex == self.MaxGridNum and self.ActInfo.curPosId + data.diceNumber[1] > self.MaxGridNum then
					_P.OnPlayGetAnim(self, {curPosId = MaxNum})

					self.mModule.SelfRect:AddOnTime(function()
						_P.UpdateMapData(self, data.posReward, data.passPosList, data.travalLoopCount, function()
							_P.SetItemGray(self, curIndex ~= self.MaxGridNum, curIndex)

							table.remove(self.HeadMovePos, 1)
							if next(self.HeadMovePos) ~= nil then
								_P.OnMoveHead(self, data, callBack)
							else
								if callBack ~= nil then
									callBack()
								end
							end
						end)
					end, nil, 0.5)
				else
					_P.SetItemGray(self, true, curIndex)

					table.remove(self.HeadMovePos, 1)
					if next(self.HeadMovePos) ~= nil then
						_P.OnMoveHead(self, data, callBack)
					else
						if callBack ~= nil then
							callBack()
						end
					end
				end
			end)
	else
		if callBack ~= nil then
			callBack()
		end
	end
end


-- 界面变暗，刷新整个城市数据
function _P.UpdateMapData(self, cityList, passPosList, travalLoopCount, callBack)
	self:Lock()
	self.ExchangeBtn.RaycastTarget = false

	local cityMap = self.mModule:Get("Map")
	self.ActInfo.posReward = cityList
	self.ActInfo.passPosList = passPosList
	_P.SetCityActive(self, false)

	local fadeOutTween = cityMap.CachedTran:GetJTweener(MOUDLE_FADEOUT)
	fadeOutTween:Play()

	if cityList ~= nil and next(cityList) ~= nil then
		for k,v in pairs(cityList) do
			_P.SetOneCityData(self, v, travalLoopCount, false)
		end
	end

	cityMap:AddOnTime(function()
		local fadeInTween = cityMap.CachedTran:GetJTweener(MOUDLE_FADEIN)
		fadeInTween:Play()

		_P.SetCityActive(self, true)
		if callBack then
			callBack()
			self.ExchangeBtn.RaycastTarget = true
		end
	end, nil, 1)
end


function _P.SetCityActive(self, isShow)
	for i=1,MaxNum do
		local cityNode = self.mModule:Get("BtnBox" .. i)
		cityNode.Activity = isShow
	end
end


-- 飘奖励动画，若摇到6播放2次
function _P.OnPlayGetAnim(self, data)
	local getItemData = nil
	for k,v in pairs(self.ActInfo.posReward) do
		if v.posId == data.curPosId then
			getItemData = v
			break
		end
	end

	local showNum = ((data.diceNumber and data.diceNumber[1] == 6) and 2) or 1
	local animRect = self.mModule:Get("AnimRect")
	local curCityPos = self.mModule:Get("BtnBox" .. data.curPosId).RootCanvasPos
	animRect.LocalPosition = Vector2(curCityPos.x + 21, curCityPos.y + 40)

	for i=1,showNum do
		local flyTime = (i - 1) * 0.5
		if getItemData.itemId > 0 then
			CCommon.ShowFlyItem(animRect, getItemData.itemId, getItemData.count, flyTime)
		end
	end
end


-- 分左右两边，要么显示左边，要么显示右边
function _P.SetMapSide(self, pos, lastIndex)
	local width = CS.JGui.JGuiManager.GuiRoot.Width
	local mapRect = self.mModule:Get("Map")
	local mapPosX = mapRect.LocalPosition.x
	local mapPosY = mapRect.LocalPosition.y
	local moveX = nil

	if lastIndex == 20 or lastIndex == 38 then -- 最后位置定在中间位置，需要特殊处理
		moveX = - width / 2
	else
		if pos[1] >= width and mapPosX >= -width then
			moveX = - width
		elseif pos[1] < width and (mapPosX < -width or mapPosX ~= 0) then
			moveX = 0
		end
	end

	if moveX then
		mapRect:DOAnchorPosX(moveX, 0.5)
	end
end


function _P.SetMapPosData(self, posId)
	local mapRect = self.mModule:Get("Map")
	local cityRect = self.mModule:Get("BtnBox" .. posId)
	local width = CS.JGui.JGuiManager.GuiRoot.Width

	local moveX = width / 2 - cityRect.LocalPosition.x
	if moveX > 0 then
		moveX = 0
	elseif moveX < -width then
		moveX = -width
	end

	mapRect.LocalPosition = Vector2(moveX, mapRect.LocalPosition.y)
end


function _P.GetNeedCostNum(self)
	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	if travalConf == nil then
		return 0
	end

	local nextBuyCount = self.ActInfo.buyCount + 1
	for k,v in pairs(travalConf.buyCost) do
		if nextBuyCount >= v[1] and nextBuyCount <= v[2] then
			return v[3]
		end
	end

	return 0
end


-- 前进10，骰子不足10时，需要消耗x钻石购买
function _P.EnterTenNeedCostNum(self, curHasNum, buyCount)
	local travalConf = Csv.GlobalTraval[self.ActId]
	if travalConf == nil or travalConf.buyCost == nil then
		return 0
	end

	local needBuyCount = TENNUM - curHasNum
	local needNum = 0
	for i=1,needBuyCount do
		local curIndex = i + buyCount
		for k,v in pairs(travalConf.buyCost) do
			if curIndex >= v[1] and curIndex <= v[2] then
				needNum = needNum + v[3]
			end
		end
	end

	return needNum
end


function _R.OnTravalEnterCallBack(self, data, callback)
	local actorPanel = self.mModule:Get("ActorPanel")
	local diceImg = self.mModule:Get("DiceImg")

	if data.passPosList ~= nil and next(data.passPosList) ~= nil then
		self.ActInfo.passPosList = data.passPosList
	end

	self:Lock()
	self.ExchangeBtn.RaycastTarget = false
	diceImg.SpriteName = self.DiceNameArrs[data.diceNumber[1]]

	CCommon.CreateEffect(actorPanel, DiceEffectID, nil, function( ... )
		diceImg.Activity = true

		diceImg:AddOnTime(function()
			diceImg.Activity = false

			local posList = {}
			local maxCount = 0
			if self.ActInfo.curPosId + data.diceNumber[1] > self.MaxGridNum then
				maxCount = ((data.travalLoopCount > 1 and 1) or 0) * self.MaxGridNum + data.curPosId
			else
				maxCount = data.curPosId
			end

			for i = self.ActInfo.curPosId + 1, maxCount do
				local index = ((i % self.MaxGridNum) == 0 and self.MaxGridNum) or (i % self.MaxGridNum)
				local rootPos = self.mModule:Get("BtnBox" .. index).LocalPosition
				if rootPos then
					posList[#posList + 1] = {pos = {[1] = rootPos.x + OffestX, [2] = rootPos.y + OffestY}, index = index}
				end
			end

			if next(posList) ~= nil then
				self.HeadMovePos = posList

				local MoveFunc = function ( ... )
					_P.OnMoveHead(self, data, function()
						if data.diceNumber[1] == 6 then-- 移动完成后
							-- 播放骰子摇到6特效
							CCommon.CreateEffect(actorPanel, DoubleActorId, nil, function( ... ) 
								_P.SetMapUnLock(self, data, callback)
							end)
						else
							_P.SetMapUnLock(self, data, callback)
						end
	
						_P.SetGridDetail(self, data.curPosId)
						_P.UpdateExchangeEffect(self, self.ActInfo.exchangeShop, data.numberCount)
					end)
				end
				
				-- 如果正好在41格，先弹42格奖励奖励，后刷新数据再移动
				if self.ActInfo.curPosId == self.MaxGridNum then
					_P.OnPlayGetAnim(self, {curPosId = MaxNum}) -- 过圈奖励

					local lastBtnBox = self.mModule:Get("BtnBox" .. MaxNum)
					lastBtnBox:AddOnTime(function()
						_P.UpdateMapData(self, data.posReward, data.passPosList, data.travalLoopCount, function()
							MoveFunc()
						end)
					end, nil, 0.5)
				else
					MoveFunc()
				end
			end
		end, nil, 0.5)
	end)

	local diceNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
	self.LeaveText.Text = Csv.Text("global_left_times", {num = diceNum})
end


function _P.SetMapUnLock(self, data, callback)
	_P.OnPlayGetAnim(self, data)
	callback()
	self.ActInfo = MActivity.GetFromId(self.ActId)

	self.ExchangeBtn:AddOnTime(function()
		self:Unlock()
		self.ExchangeBtn.RaycastTarget = true
	end, nil, 0.5)
end


-- 更新特效状态
function _P.UpdateExchangeEffect(self, exchangeShop, numberCount)
	local exchangeActorPanel = self.mModule:Get("ExActorPanel")
	local isShowBtnEffect = MActivity.CheckHasExchange(exchangeShop, numberCount)
	exchangeActorPanel.Activity = isShowBtnEffect
end


-- 设置自动购买信息
function _P.SetAutoData(self)
	local module = self.mModule
	local needCost = _P.GetNeedCostNum(self)
	local travalConf = Csv.GlobalTraval[self.ActInfo.actId]
	local hasBuyCount = travalConf.buyLimit + self.extraBuyTime - self.ActInfo.buyCount
	local costText = module:Get("CostText")
	if hasBuyCount <= 0 then
		costText.Text = Csv.Text("err_traval_buy")
	else
		costText.Text = Csv.Text("global_autoShow", {num = needCost})
	end
end


function _R.OnTravalBuyCallBack(self, data)
	-- 自动购买,成功后直接前进
	if data.type == 2 then
		CActivity.OnEnterTravalReq()
	elseif data.type == 4 then
		CActivity.OnTenEnterTravalReq()
	else -- 手动，暂时没有
		CCommon.ShowError(Csv.Text("global_buySuccess"))
		local diceNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
		self.LeaveText.Text = Csv.Text("global_left_times", {num = diceNum})
		self.ActInfo.buyCount = data.buyCount
	end

	_P.SetAutoData(self)
end


function _R.UpdateExchangeData(self)
	_P.UpdateExchangeEffect(self, self.ActInfo.exchangeShop, self.ActInfo.numberCount)
end


function _R.OnUpdateViewState(self, data)
	if data.state.state == MActivity.ActivityState.Close then
		CCommon.ShowError(Csv.Text("err_newofficer_end"))
		self:Destroy()
	else
		self.ActInfo = MActivity.GetFromId(self.ActId)
	end
end


function _R.OnTenTravalEnterCallBack(self, data, callback)
	local actorPanel = self.mModule:Get("ActorPanel")

	self:Lock()
	self.ExchangeBtn.RaycastTarget = false
	CCommon.CreateEffect(actorPanel, DiceEffectID, nil, function( ... )
		self:Unlock()
		self.ExchangeBtn.RaycastTarget = true

		WindowMgr.Create("UTenTravalResultPanel",data.actId, data.diceNumber, data.DrowReward, function( ... )
			_P.OnPlayTenDiceAnim(self, data, callback)
		end)
	end)

	local diceNum = MBag.GetItemNum(MActivity.TravalDicsItemId)
	self.LeaveText.Text = Csv.Text("global_left_times", {num = diceNum})
end


-- 十连表现
function _P.OnPlayTenDiceAnim(self, data, callback)
	if data.travalLoopCount ~= self.ActInfo.travalLoopCount then -- 跨圈
		-- 头像先移动到41格。然后弹奖励，变暗(刷新界面数据)
		self:Lock()
		local qualityImg = self.mModule:Get("BtnBox" .. self.MaxGridNum)
		self.HeadBox.LocalPosition = Vector2(qualityImg.LocalPosition.x + OffestX , qualityImg.LocalPosition.y + OffestY)
		_P.SetMapPosData(self, self.MaxGridNum)
		_P.OnPlayGetAnim(self, {curPosId = MaxNum}) -- 过圈奖励

		qualityImg:AddOnTime(function()
			_P.UpdateMapData(self, data.posReward, data.passPosList, data.travalLoopCount, function( ... )
				if callback ~= nil then
					callback()
				end
				self.ActInfo = MActivity.GetFromId(self.ActId)

				local lastBox = self.mModule:Get("BtnBox" .. data.curPosId)
				self.HeadBox.LocalPosition = Vector2(lastBox.LocalPosition.x + OffestX , lastBox.LocalPosition.y + OffestY)
				_P.SetMapPosData(self, data.curPosId)

				-- 设置奖励灰亮
				for k,v in pairs(data.posReward) do
					_P.SetItemGray(self, v.posId <= self.ActInfo.curPosId, v.posId)
				end

				self:Unlock()
			end)
		end, nil, 0.5)
	else
		-- 直接刷新数据
		if callback ~= nil then
			callback()
		end
		self.ActInfo = MActivity.GetFromId(self.ActId)
		_P.SetMapData(self)
	end

	_P.SetGridDetail(self, data.curPosId)
	_P.UpdateExchangeEffect(self, self.ActInfo.exchangeShop, data.numberCount)
end


-- 防止多次点击
function _P.CheckBtnIsClick(type, delayTime)
	if type == 1 then
		if (UnityTime.time - lastTime) < delayTime then
			return false
		end

		lastTime = UnityTime.time
	else
		if (UnityTime.time - lastTenTime) < delayTime then
			return false
		end
	
		lastTenTime = UnityTime.time
	end

	return true
end


return _M