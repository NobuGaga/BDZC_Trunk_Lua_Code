local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"

local WindowType = JRequire "Libs.WindowMgr.WindowType"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(id)
	local moudle = self:CreateMoudle(self._RootNode, "M_Gang_Recharge_Record")
	self.mMoudle = moudle

	moudle:Get("C_Text").Text = Csv.Text("com_poptitle")
	moudle:Get("SH").Text = Csv.Text("com_poptitle1")
	moudle:Get("Name").Text = Csv.Text("com_poptitle2")
	moudle:Get("Time").Text = Csv.Text("com_poptitle3")

	local BtnClose = moudle:Get("Btn_Back")
	BtnClose:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
		end, nil, 0.9)
	
	local info
	if MActivity.GetListFromType(Define.ActivityType.Commerce_Recharge) ~= nil then
		local data = MActivity.GetListFromType(Define.ActivityType.Commerce_Recharge)
		local actId = MActivity.ActIdForType[Define.ActivityType.Commerce_Recharge]
		if actId ~= nil then
			info = data[actId]
		end
	end
	if info ~= nil then
		local csvCommerceRecharge = Csv.CommerceRecharge[info.actId]
		if csvCommerceRecharge ~= nil then
			local grade = csvCommerceRecharge.grade[id]
			if info.num >= grade then
				CActivity.GetComRechargeGeted(id)
			else
				moudle:Get("Tips1").Text = Csv.Text("com_poptips2")
			end
		end
	end
end

function _R.RefreshView(self,data)
	local moudle = self.mMoudle
	if data ~= nil then
		local list = data.list
		if list ~= nil and #list > 0 then
			local sortTable = _P.GetSortTable(list)
			local content = moudle:Get("content2")
			content:DestroyChildren()
			for k,v in ipairs(sortTable) do
				local memberMoudle = JGuiManager.GetMoudle(content,"M_Gang_Recharge_Record_Item", WindowType.UI, 0)
				memberMoudle:Get("name").Text = k
				memberMoudle:Get("zhiwei").Text = v.name
				memberMoudle:Get("Num").Text = LuaUtil.TransToYearMonthDay(v.time)
			end
		else
			moudle:Get("Tips1").Text = Csv.Text("com_poptips1")
		end
	else
		moudle:Get("Tips1").Text = Csv.Text("com_poptips1")
	end
end

function _P.GetSortTable(rawTable)
	local sortTable = {}
	for k,v in pairs(rawTable) do
		table.insert(sortTable,v)
	end
	table.sort(sortTable,function(a,b) return a.time < b.time end)
	return sortTable
end

return _M