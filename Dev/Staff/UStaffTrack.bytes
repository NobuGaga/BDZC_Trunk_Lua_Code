----------------------文件引用--------------------------
--@RefType [Libs.WindowMgr.WindowBase.bytes#_M]
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
--@RefType [Dev.Common.CCommon.bytes#_M]
local CCommon = JRequire"Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MMain = JRequire "Dev.Main.MMain"
local WindowOpen = JRequire "Libs.WindowMgr.WindowOpen"
local MBag = JRequire "Dev.Bag.MBag"

----------------------CS类引用--------------------------

----------------------常量定义--------------------------


--外部接口模块 *** 只放置共有接口, 禁止放变量
local _M = Class(WindowBase)
--私有函数模块 *** 只放置私有函数, 禁止放变量
local _P = {}
--外部刷新函数
local _R = {}

--外部调用派发器
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(staffID)
	local staffCsv = Csv.Personnel[staffID]
	local trackCsv = Csv.StaffTrack[staffID]
	assert(staffCsv ~= nil and trackCsv ~= nil, staffID)

	local moudle = self:CreateMoudle(self._RootNode, "M_ItemTrack")
	moudle:Get("C_Back_Btn"):AddOnButton(function()
		self:Destroy()
	end, nil, 1.2)
	moudle:Get("C_Text").Text = Csv.Text("bag_itemTrack1")

	local iconRect = moudle:Get("IconRect")
	local noneRect = moudle:Get("None")
	noneRect.Text = trackCsv.showParam
	if trackCsv and trackCsv.showType and trackCsv.showType == 1 then
		iconRect.Activity = false
		noneRect.Activity = true
	else
		iconRect.Activity = true
		noneRect.Activity = false
		local csvColorUp = Csv.ColorUp[staffCsv.color]
		moudle:Get("ItemColor").SpriteName = "ty_018"
		moudle:Get("ItemName").Text = Csv.Text("common_color",{num = csvColorUp.str,name = staffCsv.name})
		moudle:Get("mask").Activity = true
		moudle:Get("StaffIcon").SpriteName = staffCsv.asset
		moudle:Get("ItemNum").Text = Csv.Text("staff_Track", {num = 0, max = 1})
	end

	local content = moudle:Get("Content")
	local notOpenFuncs = {}
	for index,funcId in pairs(trackCsv.funcId) do
		if MMain.FuncIsOpen(funcId) then
			local oneMoudle = self:CreateMoudle(content, "M_ItemTrackOne")
			local title = trackCsv.title[index]
			oneMoudle:Get("Name").Text = title or ""
			local tips = trackCsv.tips[index]
			oneMoudle:Get("Tips").Text = tips or ""
			oneMoudle:Get("C_text").Text = Csv.Text("bag_itemTrack2")
			
			oneMoudle:Get("C_Btn_a"):AddOnButton(function( ... )
				WindowOpen.Open(funcId)
			end)
		else
			table.insert(notOpenFuncs, {index = index, funcId = funcId})
		end
	end
	if #notOpenFuncs > 0 then
		for _,v in pairs(notOpenFuncs) do
			local oneMoudle = self:CreateMoudle(content, "M_ItemTrackOne")
			local title = trackCsv.title[v.index]
			oneMoudle:Get("Name").Text = title or ""
			local tips = trackCsv.tips[v.index]
			oneMoudle:Get("Tips").Text = tips or ""
			oneMoudle:Get("C_text").Text = Csv.Text("bag_itemTrack2")
			oneMoudle:Get("C_Btn_a").IsGray = true
		end
	end
end

return _M