local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local UStaffAptitude = JRequire "Dev.Staff.UStaffAptitude"
local UStaffSkill = JRequire "Dev.Staff.UStaffSkill"
local UStaffHalo = JRequire "Dev.Staff.UStaffHalo"
local UStaffTalent = JRequire "Dev.Staff.UStaffTalent"
local MStaff = JRequire "Dev.Staff.MStaff"
local CStaff = JRequire "Dev.Staff.CStaff"
local MMain = JRequire "Dev.Main.MMain"
local MBag = JRequire "Dev.Bag.MBag"
local TabGroup = JRequire "Dev.Common.TabGroup"
local CCommon = JRequire "Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local JTweenerManager = CS.JTween.JTweenerManager

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local MAX_TAG = 6		--标签数量最大值

function _M:BeforeDestroy()
	if self.ChooseMoudle ~= nil then
		self.ChooseMoudle:delete()
		self.ChooseMoudle = nil
	end
	if self.tabHandle ~= nil then
		self.tabHandle:delete()
		self.tabHandle = nil
	end
end 

function _P.OnChoose(self, funcId)
	if self.ChooseMoudle ~= nil then
		self.ChooseMoudle:Destroy()
		self.ChooseMoudle:delete()
		self.ChooseMoudle = nil
	end
	if funcId == Define.SysId.Staff_Book then
		self.ChooseMoudle = UStaffAptitude.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Skill then
		self.ChooseMoudle = UStaffSkill.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Aureole then
		self.ChooseMoudle = UStaffHalo.new(self.PageNode,self.mID)
	elseif funcId == Define.SysId.Staff_Talent then
		self.ChooseMoudle = UStaffTalent.new(self.PageNode,self.mID)
	end

	MStaff.LastChoose = funcId
end

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(id,chooseFuncId)
	local moudle = self:CreateMoudle(self._RootNode, "M_Staff_UDetails_NotOtained")
	self.mMoudle = moudle
	local person = Csv.Personnel[id]
	self.mID = id

	for i = 1,person.star do
		moudle:Get("Star"..i).Activity = true
	end

	SoundMgr.PlaySystem(person.sound)

	moudle:Get("C_Text").Text = Csv.Text("staff_details")
	local TextCost = moudle:Get("CostText")
	TextCost.Text = LuaUtil.NumberFormat(MBag.GetItemNum(Define.AssetsType.Coin))
	self.mCoin = MBag.GetItemNum(Define.AssetsType.Coin)
	moudle:Get("StaffName").Text = person.name
	moudle:Get("InfoText").Text = person.tips

	moudle:Get("Level").Text = Csv.Text("staff_level")
	moudle:Get("Speciality").Text = Csv.Text("staff_speciality")
	moudle:Get("Property").Text = Csv.Text("staff_property")
	moudle:Get("Attri1").Text = Csv.Text("staff_attri1")
	moudle:Get("Attri2").Text = Csv.Text("staff_attri2")
	moudle:Get("Attri3").Text = Csv.Text("staff_attri3")
	moudle:Get("Attri4").Text = Csv.Text("staff_attri4")

	self.TextMax = moudle:Get("MaxText")
	self.TextMax.Text = Csv.Text("staff_lvmax")

	moudle:Get("StaffIcon").SpriteName = person.asset
	moudle:Get("SpecialityData").Text = person.specialty

	local BtnClose = moudle:Get("C_Back_Btn")
	BtnClose:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		WindowMgr.Call("UStaff","ResetPoint")
		self:Destroy()
		end, nil, 1.2)

	local BtnRule = moudle:Get("BtnRule")
	BtnRule:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("URuleTips",Define.SysId.Staff)
		end, nil, 1.2)

	local BtnUp = moudle:Get("BtnUp")
	BtnUp:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("UStaffTrack", id)
		end, nil, 0.9)

	_P.OnCreateData(self,id)

	local node = moudle:Get("PageNode")
	self.PageNode = node
	local funcs = _P.GetDetailFuncs(self,MMain.GetOpenedFuncs(Define.SysId.Staff, true))
	local count = #funcs
	if count > 0 then
		--Table标签控制
		local colorLight = Color(255/255,225/255,75/255,1)
		local colorDefault = Color(0/255,195/255,255/255,1)
		local tabHandle = TabGroup.new(function (funcId)
			_P.OnChoose(self, funcId)
		end, "yth_023", "yth_023",nil,nil,nil,nil,nil,nil,colorDefault,colorLight)
	
		local index = 0
		for k,v in pairs(funcs) do
			index = index + 1
			tabHandle:Add(v.id, moudle:Get("Toggle"..index), moudle:Get("C_text_"..index), v.name)
		end
		tabHandle:Choose(funcs[1].id)
		self.tabHandle = tabHandle
	end
	if count < 4 then
		for i=count + 1,4 do
			moudle:Get("Toggle"..i).Activity = false
		end
	end

	self:RegistCallEvent(Define.EventListenId.ItemUpdateEvent, function (handle , itemid, itemcount, isAdd )
		if itemid == Define.AssetsType.Coin then
			TextCost:DOKill()
			local lastNum = self.mCoin
			local nowNum = MBag.GetItemNum(itemid)
			self.mCoin = nowNum
			if lastNum ~= nowNum then
				local dura
				local dec = math.abs(nowNum - lastNum)
				if dec >= 10000 then
					dura = 2
				else
					dura = math.max(0.2, dec / 10000 * 2)
				end
				local t = JTweenerManager.IntTween(lastNum,nowNum, dura, function(value)
					if TextCost ~= nil then TextCost.Text = LuaUtil.NumberFormat(value) end
				end, function()
					if TextCost ~= nil then TextCost.Text = LuaUtil.NumberFormat(MBag.GetItemNum(itemid)) end
				end)
				t:SetTarget(TextCost.CachedTran)
			end
		end
	end)

	for i = 1,MAX_TAG do
		moudle:Get("Tab"..i).Activity = false
	end
	if person.labelImg ~= nil then
		for k,v in ipairs(person.labelImg) do
			local img = moudle:Get("Tab"..k)
			if img ~= nil then
				img.Activity = true
				img.SpriteName = v
			end
		end
	end
end

function _P.OnCreateData(self,id)
	local moudle = self.mMoudle
	local def = Csv.Personnel[id]
	local csvColorUp = Csv.ColorUp[def.color]
	moudle:Get("LevelData").Text = Csv.Text("company_exp",{num = def.level,max = csvColorUp.lvMax})
	local attr1, attr2, attr3, attr4 = MStaff.GetStaffAttrLvlOne(id)
	moudle:Get("PropertyData").Text = math.ceil(attr1 + attr2 + attr3 + attr4)
	moudle:Get("Attri1Data").Text = math.ceil(attr1)
	moudle:Get("Attri2Data").Text = math.ceil(attr2)
	moudle:Get("Attri3Data").Text = math.ceil(attr3)
	moudle:Get("Attri4Data").Text = math.ceil(attr4)
	moudle:Get("redPoint_colorup").Activity = MStaff.GetRedPointColorUp(id)

	self.mMoudle:Get("C_text").Text = Csv.Text("staff_get")

	local imgPos = moudle:Get("PositionIcon")
	if csvColorUp ~= nil and csvColorUp.posIcon ~= nil then
		imgPos.Activity = true
		imgPos.SpriteName = csvColorUp.posIcon
	else
		imgPos.Activity = false
	end
end

function _P.GetDetailFuncs(self,funcs)
	local tableFuncs = {}
	if funcs ~= nil then
		for k,v in pairs(funcs) do
			if v.id ~= Define.SysId.Staff_Staff then
				if v.id ~= Define.SysId.Staff_Aureole or Csv.Personnel[self.mID].aureole ~= nil then
					table.insert(tableFuncs,v)
				end
			end
		end
	end
	return tableFuncs
end

return _M