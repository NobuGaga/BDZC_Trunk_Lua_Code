local JGuiManager = CS.JGui.JGuiManager
local JTweenerManager = CS.JTween.JTweenerManager
local MBag = JRequire "Dev.Bag.MBag"
local CBag = JRequire "Dev.Bag.CBag"
local MCompany = JRequire "Dev.Company.MCompany"
local CCompany = JRequire "Dev.Company.CCompany"
local CCommon = JRequire "Dev.Common.CCommon"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local MPlayer = JRequire "Dev.Player.MPlayer"
local luaUtil = JRequire"Libs.LuaUtil"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local _M = Class(WindowBase)
local _P = {}
local CostItemID = tonumber(Csv.Const(Define.Const.CompanyManageCostID))
local EFFECT_ID = 18
local BtnStr1 = "HX_ty_024_1"
local BtnStr2 = "ty_024"
local GainItemSoundId = {11000, 11000, 11000}

local COLOR_B = Color(93/255,153/255,255/255,1)
local COLOR_R = Color(255/255,93/255,140/255,1)

--美女图片名或者动画ID
local GirlAssetOrSpineID = Csv.Const(20152)

local _R = {}
--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

--界面构建
function _M:OnCreate(...)
	
	self.EffectIndex = {}
	self.EffectTable = {{},{},{}}
	self.EffectState = {false,false,false}
	self.EffectEvent = {}

	self.EffectIndex[Define.AssetsType.Coin] = 9
	self.EffectIndex[Define.AssetsType.Food] = 10
	self.EffectIndex[Define.AssetsType.Soldier] = 11
	local moudle = self:CreateMoudle(self._RootNode, "M_Company_Management")
	self.mMoudle = moudle
	self.mEffectNode = moudle:Get("effectNode")

	local TextProduction = moudle:Get("text3")
	TextProduction.Text = LuaUtil.NumberFormat(MBag.GetItemNum(Define.AssetsType.Coin))

	local TextGoods = moudle:Get("text4")
	TextGoods.Text = LuaUtil.NumberFormat(MBag.GetItemNum(Define.AssetsType.Food))

	local TextMoney = moudle:Get("text5")
	TextMoney.Text = LuaUtil.NumberFormat(MBag.GetItemNum(Define.AssetsType.Soldier))

	moudle:Get("BtnText2").Text = Csv.Text("company_one")

	self.mAssetNum = {}
	self.mAssetNum[Define.AssetsType.Coin] =  MBag.GetItemNum(Define.AssetsType.Coin)
	self.mAssetNum[Define.AssetsType.Food] =  MBag.GetItemNum(Define.AssetsType.Food)
	self.mAssetNum[Define.AssetsType.Soldier] =  MBag.GetItemNum(Define.AssetsType.Soldier)

	self:RegistCallEvent(Define.EventListenId.ItemUpdateEvent, function (handle , itemid, itemcount, isAdd )
		_P.UpdateAsset(self, itemid, itemcount, isAdd)
	end)

	self:RegistCallEvent(Define.EventListenId.SecondUpdate, function ()
		_P.UpdateTime(self)
	end)

	local oneKeyLevel = tonumber(Csv.Const(Define.Const.CompanyManageOneKeyLevel)[1])
	local oneKeyVip = tonumber(Csv.Const(Define.Const.CompanyManageOneKeyLevel)[2])
	local BtnOne = moudle:Get("Btn")
	local TextTips = moudle:Get("TextTips")
	TextTips.Activity = true
	TextTips.Text = Csv.Text("company_PA19")
	if MPlayer.GetLevel() >= oneKeyLevel or MPlayer.GetVip() >= oneKeyVip then
		BtnOne.IsGray = false
	else
		BtnOne.IsGray = true
	end

	BtnOne.Activity = true
	BtnOne:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		if MPlayer.GetLevel() >= oneKeyLevel  or MPlayer.GetVip() >= oneKeyVip then
			_P.OnClickOne()
		else
			CCommon.ShowError(Csv.Text("company_PA20"))
		end
		end, nil, 0.9)

	self.mTableItems = {}
	_P.CreateList(self)

	moudle:Get("C_Back_Btn"):AddOnButton(function()
		self:Destroy()
	end, nil, 1.2)

	moudle:Get("C_Text").Text = Csv.Text("company_jingying")

	_P.UpdateTime(self)

	local helpBtn = moudle:Get("C_Full_Help_Btn")
	if helpBtn ~= nil then
		if self._SysId ~= nil and Csv.Rule[self._SysId] ~= nil then
			helpBtn:AddOnButton(function ( ... )
				SoundMgr.Play(10001)
				WindowMgr.Create("URuleTips", self._SysId)
			end, nil,  1.2)
		else
			helpBtn.Activity = false
		end
	end

	local girlNode = moudle:Get("bigGirlSpine")
	local csvEffect = Csv.Effect[GirlAssetOrSpineID]
	if csvEffect and csvEffect.prefab then
		CCommon.CreateActor(girlNode, GirlAssetOrSpineID, CCommon.ActorFieldMap.company_girl)
		girlNode.SpriteName = ""
	else
		girlNode.SpriteName = GirlAssetOrSpineID
	end
end

function _P.OnClickOne()
	local manageTable = MCompany.ManageTable
	for k,v in pairs(manageTable) do
		if v.times > 0 then
			CCompany.CompanyManage(v.id,true)
		end
	end
end

function _P.CreateList(self)
	local sortManageTable = _P.GetSortTable(MCompany.ManageTable)
	local contentTransform = self.mMoudle:Get("Content")
	for k,v in ipairs(sortManageTable) do
		local manage = {}
		local manageMoudle = JGuiManager.GetMoudle(contentTransform,"M_Company_Management_Item",WindowType.UI, 0)
		_P.SetManageData(self,manageMoudle,v)
		manage.moudle = manageMoudle
		self.mTableItems[v.id] = manage
	end
end

function _P.SetManageData(self,moudle,data)
	local csvManage = Csv.Manage[data.id]
	local maxTimes = Csv.Company[MPlayer.GetLevel()].harvest[data.id]
	moudle:Get("Btn"):AddOnButton(function ( ... )
		SoundMgr.Play(GainItemSoundId[data.id])
		local manage = MCompany.ManageTable[data.id]
		if manage ~= nil then
			local times = manage.times
			if times > 0 then
				if csvManage.costType ~= nil then
					local cost = math.floor(MPlayer.GetAttr(csvManage.dependType)*csvManage.multiple/10000 + 0.5)
					local have = MBag.GetItemNum(csvManage.costType)
					local itemName = Csv.Item[csvManage.costType].name
					if cost > have then
						CCommon.ShowError(Csv.Text("bag_errNoEnough",{name = itemName}))
						return
					end
				end
				CCompany.CompanyManage(data.id)
			else
				local itemNum = MBag.GetItemNum(CostItemID)
				if itemNum <= 0 then
					CCommon.ShowError(Csv.Text("bag_errNoEnough",{name = Csv.Item[CostItemID].name}))
				elseif itemNum == 1 then
					CBag.OnUseItem(CostItemID,1,{data.id})
				else
					local manageMax = Csv.Company[MPlayer.GetLevel()].harvest[data.id] 
					local num = math.min(itemNum,manageMax)
					local itemData = {itemid = CostItemID,itemcount = num}
					WindowMgr.Create("UBagUsePop",itemData,true,data.id)
				end
			end
		end
		end, nil, 0.9)
	moudle:Get("BG_1").SpriteName = csvManage.bgIcon
	moudle:Get("title_text_1").Text = Csv.Text("company_manageT",{name = csvManage.name})
	moudle:Get("knowledge_1").Text = Csv.Text("company_manageDsp",{name = Csv.Text("Girl_skill_type"..csvManage.dependType)})
	moudle:Get("earnings_1").Text = Csv.Text("company_manageYuji")
	local TextCost = moudle:Get("consume")
	if csvManage.costType ~= nil then
		TextCost.gameObject:SetActive(true)
		TextCost.Text = Csv.Text("company_manageCos",{name = Csv.Item[csvManage.costType].name})
		moudle:Get("text_11").Text = math.floor(MPlayer.GetAttr(csvManage.dependType)*csvManage.multiple/10000 + 0.5)
	else
		TextCost.gameObject:SetActive(false)
	end
	moudle:Get("text_9").Text = MPlayer.GetAttr(csvManage.dependType)
	moudle:Get("text_10").Text = math.floor(MPlayer.GetAttr(csvManage.dependType)*csvManage.multiple/10000 + 0.5)
	local manage = MCompany.ManageTable[data.id]
	if manage ~= nil then
		local times = manage.times
		if times > 0 then
			moudle:Get("C_text").Text = Csv.Text("company_get"..data.id)
		else
			moudle:Get("C_text").Text = Csv.Text("company_revert")
		end
	end
	if data.times > 0 then
		moudle:Get("text_8").Text = Csv.Text("company_exp",{num = data.times,max = maxTimes})
		moudle:Get("text_8").Color = COLOR_B
	else
		moudle:Get("text_8").Text = luaUtil.GetTimeHMS(data.time)
		moudle:Get("text_8").Color = COLOR_R
	end
end

function _P.GetSortTable(rawTable)
	local sortTable = {}
	for k,v in pairs(rawTable) do
		table.insert(sortTable,v)
	end
	table.sort(sortTable,function(a,b)return _P.SortByID(a,b)end)
	return sortTable
end

function _P.SortByID(a,b)
	return a.id < b.id
end

function _P.UpdateAsset(self,itemid, itemcount, isAdd)
	local TextUpdate = self.mMoudle:Get("text"..itemid)
	if TextUpdate ~= nil then
		TextUpdate:DOKill()
		local lastNum = self.mAssetNum[itemid]
		local nowNum = MBag.GetItemNum(itemid)
		if not isAdd then
			_P.UpdateText(self,itemid,lastNum,nowNum,TextUpdate,false)
			return
		end
		local moudleid
		for k,v in pairs(Csv.Manage) do
			if v.getType == itemid then
				moudleid = k
			end
		end
		local playTable = self.EffectTable[moudleid]
		if playTable ~= nil then
			local len = #playTable
			local data = {itemid = itemid,itemcount = itemcount,moudleid = moudleid,lastNum = lastNum,nowNum = nowNum}
			table.insert(playTable,data)
			if len <= 0 then
				_P.CheckPlaying(self,data)
				self.mTableItems[moudleid].moudle:Get("BG_1"):AddOnTime(function()
					table.remove(playTable,1)
				end,nil,0.5)
			else
				if not self.EffectState[moudleid] then
					self.EffectState[moudleid] = true
					local updateRect = self.mTableItems[moudleid].moudle.SelfRect
					self.EffectEvent[moudleid] = updateRect:AddOnUpdate(function()
						_P.CheckPlaying(self,playTable[1])
						table.remove(playTable,1)
						if #playTable <= 0 then
							self.EffectEvent[moudleid]:Destroy()
							self.EffectState[moudleid] = false
						end
					end,nil,0.5)
				end
			end
		end
	end
end

function _P.CheckPlaying(self,data)
	if data ~= nil then
		local itemid = data.itemid
		local itemcount = data.itemcount
		local moudleid = data.moudleid
		local TextUpdate = self.mMoudle:Get("text"..itemid)
		local lastNum = data.lastNum
		local nowNum = data.nowNum
		local moudle = self.mTableItems[moudleid].moudle
		if TextUpdate ~= nil then
			_P.PlayEffect(self,itemid,moudleid)
			TextUpdate:AddOnTime(function()
				_P.UpdateText(self,itemid,lastNum,nowNum,TextUpdate,true)
				self.mAssetNum[itemid] = nowNum
			end,nil,0.5)
			local csvItem = Csv.Item[itemid]
			CCommon.ShowFlyTextManage(self._RootNode,itemcount,1,csvItem.miniIcon,Vector2(35,35),TextUpdate.RootCanvasPos)
		end
	end
end

function _P.UpdateText(self,itemid,lastNum,nowNum,TextUpdate,isAdd)
	if lastNum ~= nowNum then
		local dura = 0.4
		local t = JTweenerManager.IntTween(lastNum,nowNum, dura, function(value)
			if TextUpdate ~= nil then TextUpdate.Text = LuaUtil.NumberFormat(value) end
		end, function()
			if TextUpdate ~= nil then 
				-- if isAdd then
				-- 	TextUpdate.Text = LuaUtil.NumberFormat(self.mAssetNum[itemid]) 
				-- else
					TextUpdate.Text = LuaUtil.NumberFormat(MBag.GetItemNum(itemid)) 
				-- end
			end
		end)
		t:SetTarget(TextUpdate.CachedTran)
	end
end

function _P.UpdateTime(self)
	if self.mTableItems ~= nil then
		for k,v in pairs(self.mTableItems) do
			local manageItem = v
			local data = MCompany.ManageTable[k]
			if manageItem ~= nil then
				local moudle = manageItem.moudle
				if data ~= nil then
					local times = data.times
					local maxTimes = Csv.Company[MPlayer.GetLevel()].harvest[k]
					if times <= 0 then
						moudle:Get("text_8").Text = luaUtil.GetTimeHMS(data.time - HeartBeat.ServSecond())
						moudle:Get("text_8").Color = COLOR_R
						moudle:Get("C_text").Text = Csv.Text("company_revert")
						moudle:Get("btn_new").SpriteName = BtnStr1
					else
						moudle:Get("text_8").Text = Csv.Text("company_exp",{num = data.times,max = maxTimes})
						moudle:Get("text_8").Color = COLOR_B
						moudle:Get("C_text").Text = Csv.Text("company_get"..k)
						moudle:Get("btn_new").SpriteName = BtnStr2
					end
				end
			end
		end
	end
end

function _R.ShowGod(self)
	SoundMgr.PlayNonStopUI(10004)
	local nodeTrans = self.mMoudle:Get("GodEffectNode")
	CCommon.PlayEffectGod(nodeTrans,Define.SysId.Manage)
end

function _R.RefreshTimes(self)
	_P.UpdateTime(self)
end

function _P.PlayEffect(self,getid,moudleid)
	SoundMgr.PlayNonStopUI(11000)
	local trans = self.mTableItems[moudleid].moudle.SelfRect.CachedTran
	for k,v in pairs(self.EffectIndex) do
		if k == getid then
			for i=1,30 do
				local x = math.random(-200,200)
				local y = math.random(-65,65)
				local delay = math.random(5,20)/100
				CCommon.CreateEffect(trans, v, Vector2(x,y), nil, nil, nil, nil, delay)
			end
		end
	end
end

return _M