local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local CCommon = JRequire"Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local MWharf = JRequire "Dev.Wharf.MWharf"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local delayTime = 0.1

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:OnCreate()
	local isClose = false
	self._EventNode:AddOnClick(function ()
		if isClose then
			SoundMgr.Play(10001)
			self:Destroy()
		end
	end)

	local moudle = self:CreateMoudle(self._RootNode,"M_Inquiries_Get")

	self.mContent = moudle:Get("content")
	local prestige = moudle:Get("Prestige")
	local tips = moudle:Get("Tips")
	
	self.mPrestigeNum = 0
	local visitDatas =  MWharf.VisitDataList
	--[[
	local delay = 0
	
	for k,v in pairs(visitDatas)do
		print("______",delay)
		moudle.SelfRect:AddOnTime(function()
			_P.ShowPeopleItem(self,v)
		end,delay)
		delay = delay+ 0.2
	end
	--]]
	local showTime = 0
	local key = 1
	moudle.SelfRect:AddOnUpdate(function()
		if key <= #visitDatas then
			_P.ShowPeopleItem(self,visitDatas[key])
			key = key+1
			showTime = showTime + delayTime
		else
			if not isClose and key > #visitDatas then 
				isClose = true
				local prestigeData = Csv.Item[Define.SpecialItem.Meet]
				prestige.Text = prestigeData.name.."+"..self.mPrestigeNum
				tips.Text = Csv.Text("common_hereToclose")
			end
		end
	end,nil,delayTime)
end

function _P.ShowPeopleItem(self,v)
	local content = self.mContent
	local peopleData =  Csv.WharfPeople[v.peopleId]

	local itemMoudle = JGuiManager.GetMoudle(content, "M_Inquiries_Get_Item", WindowType.UI, 10)
	local headIcon = itemMoudle:Get("head")
	local nameText = itemMoudle:Get("nameText")
	local rewards = itemMoudle:Get("InfoText")

	headIcon.SpriteName = peopleData.xieicon
	--headIcon:SetNativeSize()
	--headIcon.LocalPosition = Vector2(peopleData.onekeyPos[1],peopleData.onekeyPos[2])
	nameText.Text = peopleData.name

	local awardStr = ""
	if peopleData.type == 4 then
		awardStr = awardStr.."<color=#ff5d8c>"..Csv.Text("Wharf_nothing").."</color>".."\n\n"
	end
	
	for k2,v2 in pairs(v.itemList)do
		local itemData = Csv.Item[v2.id]
		if itemData ~= nil then
			if v2.count >0 then
				if v2.id == Define.SpecialItem.Intimacy then
					awardStr = awardStr.."<color=#5d99ff>"..peopleData.name.." "..itemData.name.."+"..v2.count.."</color>"
				elseif v2.id == Define.SpecialItem.Meet then	--声望
					self.mPrestigeNum = self.mPrestigeNum + v2.count
				else
					awardStr = awardStr..itemData.name.."+"..v2.count
				end
			else
				awardStr = awardStr.."<color=#ff5d8c>"..itemData.name..v2.count.."</color>"
			end
			awardStr = awardStr.."\n"
		end
	end
	rewards.Text = awardStr
end


return _M