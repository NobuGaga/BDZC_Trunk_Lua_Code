local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local MBag = JRequire "Dev.Bag.MBag"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local CCommon = JRequire "Dev.Common.CCommon"
local MLineUp = JRequire "Dev.LineUp.MLineUp"
local CLineUp = JRequire "Dev.LineUp.CLineUp"
local MStaff = JRequire "Dev.Staff.MStaff"
local MEquipt = JRequire "Dev.Equipt.MEquipt"
local WindowOpen = JRequire "Libs.WindowMgr.WindowOpen"
local WindowType = JRequire "Libs.WindowMgr.WindowType"

local _M = Class()
local _P = {}
local _R = {}

local MAX_TAG = 6
local EQUIP_YIFU = "yifu"
local EQUIP_XIANGZI = "xiagnzi"
local Equip_BG_NO = "ty_018"

local Color_Light = Color(255/255,223/255,96/255,1)
local Color_Gray = Color(140/255,139/255,137/255,1)

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:Destroy()
	local moudle = self.mMoudle
	if moudle ~= nil then
		moudle:Destroy()
	end
end

--界面构建
function _M:ctor(root)
	self._RootNode = root
	MLineUp.IsChange = false
	MLineUp.GetLineAllPower()
	local moudle = JGuiManager.GetMoudle(self._RootNode, "M_NewBossPK_Array", WindowType.UI, 0)
	self.mMoudle = moudle
	self.NowSelectIndex = nil
	self.mIsLineUp = false
	self.ImgSelect = moudle:Get("H")

	moudle:Get("redPoint3").Activity = false
	moudle:Get("StaffLv").Text = Csv.Text("lineup_5")
	moudle:Get("StaffGjl").Text = Csv.Text("lineup_6")
	moudle:Get("C_text").Text = Csv.Text("lineup_12")
	moudle:Get("C_text2").Text = Csv.Text("lineup_35")
	_P.SetList(self)

	moudle:Get("C_Btn_a"):AddOnButton(function()
		_P.OnClickChange(self)
	end)
	local btn2 = moudle:Get("C_Btn_a2")
	btn2:AddOnButton(function()
		CCommon.CheckTips(function(isSure, arg)
			if isSure then
				CLineUp.ClickAutoChange()
				MLineUp.IsChange = true
				btn2.IsGray = true
				btn2.RaycastTarget = false
				btn2:AddOnTime(function (  )
					btn2.IsGray = false
					btn2.RaycastTarget = true
				end, nil, 2)
			end
		end, {content = Csv.Text("lineup_36")})
	end)

	--装备空点击处理
	moudle:Get("IconBox1"):AddOnButton(function()
		_P.OnclickEquip(self,1)
	end)
	moudle:Get("IconBox2"):AddOnButton(function()
		_P.OnclickEquip(self,2)
	end)

	moudle:Get("C_text_c").Text = Csv.Text("lineup_30")
	moudle:Get("C_Btn_c"):AddOnButton(function()
		if MStaff.NoStaff(self.mStaffid) then
			WindowMgr.Create("UStaffDetailsNotObtained", self.mStaffid)
		else
			WindowMgr.Create("UStaffDetails", self.mStaffid)
		end
	end)
end

function _P.OnClickChange(self)
	if self.NowSelectIndex ~= nil then
		WindowMgr.Create("ULineUpSelect",self.NowSelectIndex,MLineUp.LineUpList[self.NowSelectIndex])
	end
end

function _P.SetList(self)
	local moudle = self.mMoudle
	self.ItemList = {}
	local content = moudle:Get("Content")
	self.ImgSelect:SetParent(moudle.SelfRect.CachedTran)
	self.ImgSelect.Activity = false
	content:DestroyChildren()

	--TODO
	WindowMgr.UnRegistChildrenRedpointForPath("UStaff", Define.SysId.Staff, Define.SysId.LineUp)
	
	local seatNum = MLineUp.SeatNum
	local list = MLineUp.LineUpList
	if seatNum ~= nil and list ~= nil then
		for i = 1,MLineUp.SeatNum do
			local itemMoudle = JGuiManager.GetMoudle(content,"M_NewBossPK_Item2")
			local BG1 = itemMoudle:Get("BG1")
			local BG2 = itemMoudle:Get("BG2")
			local BG3 = itemMoudle:Get("BG3")
			if list[i] ~= nil then
				BG1.Activity = true
				BG2.Activity = false
				BG3.Activity = false
				local csvStaff = Csv.Personnel[list[i]]
				local dataStaff = MStaff.StaffTable[list[i]]
				if csvStaff ~= nil then 
					itemMoudle:Get("BSX").SpriteName = csvStaff.asset
				end
				if dataStaff ~= nil then
					BG1.SpriteName = MStaff.Color2Image[dataStaff.color]
				end
			else
				BG1.Activity = false
				BG2.Activity = true
				BG3.Activity = false
			end
			itemMoudle:Get("Click"):AddOnButton(function()
				_P.OnClickSeat(self,i)
			end,nil,1)

			--TODO
			WindowMgr.RegistRedpoint("UStaff", itemMoudle:Get("redPoint"), Define.SysId.Staff, Define.SysId.LineUp, i)

			self.ItemList[i] = itemMoudle
		end

		if self.NowSelectIndex ~= nil then
			_P.RefreshSelect(self,self.NowSelectIndex)
			_P.RefreshBottom(self,list[self.NowSelectIndex])
		else
			for i = 1,MLineUp.SeatNum do
				if list[i] ~= nil then
					self.NowSelectIndex = i
					_P.RefreshSelect(self,i)
					_P.RefreshBottom(self,list[i])
					break
				end
			end
		end

		local maxNum = _P.GetLineUpMaxNum()
		if seatNum < maxNum then
			local lockItemMoudle = JGuiManager.GetMoudle(content,"M_NewBossPK_Item2")
			lockItemMoudle:Get("BG1").Activity = false
			lockItemMoudle:Get("BG2").Activity = false
			lockItemMoudle:Get("BG3").Activity = true
			lockItemMoudle:Get("redPoint").Activity = false
			local csvLineUp = Csv.LineUpGrid[seatNum + 1]
			lockItemMoudle:Get("Click"):AddOnButton(function()
				local itemId = Define.AssetsType.Gold
				local itemCsv = Csv.Item[itemId]
				local haveNum = MBag.GetItemNum(itemId)
				if csvLineUp ~= nil and csvLineUp.cost ~= nil then
					local content = Csv.Text("lineup_1", {name = itemCsv.name,num = csvLineUp.cost})
					if haveNum >= csvLineUp.cost then
						content = Csv.Text("lineup_2", {name = itemCsv.name,num = csvLineUp.cost})
					end
					CCommon.CheckTips(function(isSure)
						if isSure then
							if haveNum >= csvLineUp.cost then
								CLineUp.LineUpOpen()
							else
								CCommon.CheckTips(function(isSure, arg)
									if isSure then
										WindowOpen.Open(Define.SysId.Recharge)
									end
								end, {content = Csv.Text("common_recharge")})
							end
						end
					end,{items = {[itemId] = haveNum}, content = content})
				end
			end,nil,1)
			if csvLineUp ~= nil and (csvLineUp.level ~= nil or csvLineUp.cost ~= nil) then
				if csvLineUp.level ~= nil then
					lockItemMoudle:Get("text").Text = Csv.Text("lineup_3",{num = csvLineUp.level})
				elseif csvLineUp.cost ~= nil then
					lockItemMoudle:Get("text").Text = Csv.Text("lineup_4",{num = csvLineUp.cost})
				end
			else
				lockItemMoudle:Destroy()
			end
		end
	end

	moudle:Get("zhanli").Text = MLineUp.GetLineAllPower()
	if MLineUp.GetLineStaffNum() >= MLineUp.SeatNum then
		moudle:Get("chuzhanyuangong").Text = Csv.Text("lineup_20",{num = MLineUp.GetLineStaffNum(),max = MLineUp.SeatNum})
	else
		moudle:Get("chuzhanyuangong").Text = Csv.Text("lineup_25",{num = MLineUp.GetLineStaffNum(),max = MLineUp.SeatNum})
	end
end

function _P.GetLineUpMaxNum()
	local csvLines = Csv.LineUpGrid
	local num = 0
	if csvLines ~= nil then
		for k,v in pairs(csvLines) do
			if v.level ~= nil or v.cost ~= nil then
				num = num + 1
			end
		end
	end
	return num
end

function _P.OnClickSeat(self,index)
	if index == self.NowSelectIndex then
		return
	end
	local list = MLineUp.LineUpList
	if list ~= nil then
		if list[index] ~= nil then
			_P.RefreshBottom(self,list[index])
			self.NowSelectIndex = index
			_P.RefreshSelect(self,index)
		else
			WindowMgr.Create("ULineUpSelect",index,list[index])
		end
	end
end

function _P.RefreshSelect(self,index)
	local img = self.ImgSelect
	local content = self.mMoudle:Get("Content")
	local itemList = self.ItemList
	if img ~= nil and itemList ~= nil and itemList[index] ~= nil then
		img.Activity = false
		img:SetParent(content.CachedTran)
		img:SetParent(itemList[index].SelfRect.CachedTran)
		img.LocalPosition = Vector2(0,0)
		img.CachedTran:SetSiblingIndex(3)
		img.Activity = true
	end
end

function _P.RefreshBottom(self,staffid)
	local preStaffid = self.mStaffid
	self.mStaffid = staffid
	local moudle = self.mMoudle
	local csvStaff = Csv.Personnel[staffid]
	local dataStaff = MStaff.StaffTable[staffid]
	
	if csvStaff ~= nil and dataStaff ~= nil then
		moudle:Get("Staff").SpriteName = csvStaff.asset
		moudle:Get("StaffName").Text = csvStaff.name
		moudle:Get("LvNum").Text = dataStaff.level
		moudle:Get("GjlNum").Text = dataStaff.power
		moudle:Get("GGZLtext").Text = dataStaff.power
		moudle:Get("GGZLtext"):AddContentSizeFitter():SetLayoutHorizontal()
		self.mPower = dataStaff.power

		for i = 1,7 do
			moudle:Get("Star"..i).Activity = csvStaff.star >= i
		end

		for i = 1,MAX_TAG do
			moudle:Get("Tab"..i).Activity = false
		end

		if csvStaff.labelImg ~= nil then
			for k,v in ipairs(csvStaff.labelImg) do
				moudle:Get("Tab"..k).Activity = true
				moudle:Get("Tab"..k).SpriteName = v
			end
		end

		_P.RefreshEquips(self)

		_P.RefreshTianfu(self,staffid)
	end
end

function _P.RefreshEquips(self)
	local moudle = self.mMoudle
	local staffid = self.mStaffid
	if staffid ~= nil then
		local dataStaff = MStaff.StaffTable[staffid]
		if dataStaff ~= nil then
			local yifuIcon = moudle:Get("Icon1")
			local xiangziIcon = moudle:Get("Icon2")
			local yifuIconBg = moudle:Get("IconBox1")
			local xiangziIconBg = moudle:Get("IconBox2")
			local yifuLv = moudle:Get("icon1Lv")
			local yifuStar = moudle:Get("icon1Star")
			local xiangziLv = moudle:Get("icon2Lv")
			local xiangziStar = moudle:Get("icon2Star")
			local redPoint1 = moudle:Get("redPoint1")
			local redPoint2 = moudle:Get("redPoint2")

			self.StaffInfo = dataStaff
			--装备
			yifuIcon.SpriteName = EQUIP_YIFU
			xiangziIcon.SpriteName = EQUIP_XIANGZI
			yifuIconBg.SpriteName = Equip_BG_NO
			xiangziIconBg.SpriteName = Equip_BG_NO

			yifuLv.Text = ""
			yifuStar.Text = ""
			xiangziLv.Text = ""
			xiangziStar.Text = ""
			
			if dataStaff.equips ~= nil then
				for k,v in pairs(dataStaff.equips) do
					local csvEquip = Csv.Equip[v.equipId]
					local icon = nil
					local iconBg = nil
					if csvEquip.type == 1 then
						icon = yifuIcon
						iconBg = yifuIconBg

						yifuLv.Text = Csv.Text("equip_item_lv",{num = v.level})
						yifuStar.Text = Csv.Text("equip_item_star",{num = v.star})
					elseif csvEquip.type == 2 then
						icon = xiangziIcon
						iconBg = xiangziIconBg

						xiangziLv.Text = Csv.Text("equip_item_lv",{num = v.level})
						xiangziStar.Text = Csv.Text("equip_item_star",{num = v.star})
					end
					
					icon.SpriteName = csvEquip.icon
					iconBg.SpriteName = csvEquip.colorIcon
				end
			end

			--红点
			redPoint1.Activity = false
			redPoint2.Activity = false
			local equipsType1 = MEquipt.GetEquipsByType(1)
			local equipsType2 = MEquipt.GetEquipsByType(2)

			if equipsType1 ~= nil and #equipsType1 > 0 then
				redPoint1.Activity = not MStaff.CheckIsEquip(staffid,1)
			end
			if equipsType2 ~= nil and #equipsType2 > 0 then
				redPoint2.Activity = not MStaff.CheckIsEquip(staffid,2)
			end
		end
	end
end

function _P.RefreshTianfu(self,staffid)
	local moudle = self.mMoudle
	local csvStaff = Csv.Personnel[staffid]
	local dataStaff = MStaff.StaffTable[staffid]
	local content = moudle:Get("content2")
	content:DestroyChildren()
	if csvStaff.buffs ~= nil then
		for k,v in ipairs(csvStaff.buffs) do
			local csvBuff = Csv.Buff[v]
			if csvBuff ~= nil then
				local talentMoudle = JGuiManager.GetMoudle(content,"M_NewBossPK_Array_Item")
				talentMoudle:Get("yuandian").SpriteName = csvBuff.icon
				local textTitle = talentMoudle:Get("text1")
				local textDesc = talentMoudle:Get("text11")
				textTitle.Text = csvBuff.title
				textDesc.Text = csvBuff.desc
				if dataStaff.level >= csvBuff.level then
					textTitle.Color = Color_Light
					textDesc.Color = Color_Light
				else
					textTitle.Color = Color_Gray
					textDesc.Color = Color_Gray
					talentMoudle:Get("JH").Text = Csv.Text("lineup_8",{num = csvBuff.level})
				end
			end
		end
	end

	local linkTable = {}
	local link = _P.GetSortLink(dataStaff.link)
	for k,v in ipairs(link) do
		local csvLink = Csv.Link[v]
		if csvLink ~= nil then
			linkTable[v] = true
			local linkMoudle = JGuiManager.GetMoudle(content,"M_NewBossPK_Array_Item")
			linkMoudle:Get("yuandian").SpriteName = csvLink.icon
			local textTitle = linkMoudle:Get("text1")
			local textDesc = linkMoudle:Get("text11")
			textTitle.Text = csvLink.name
			textDesc.Text = csvLink.tips
			textTitle.Color = Color_Light
			textDesc.Color = Color_Light
		end
	end

	local linkStaff = _P.GetSortLink(csvStaff.link)
	for k,v in ipairs(linkStaff) do
		if not linkTable[v] then
			local csvLink = Csv.Link[v]
			if csvLink ~= nil then
				local linkMoudle = JGuiManager.GetMoudle(content,"M_NewBossPK_Array_Item")
				linkMoudle:Get("yuandian").SpriteName = csvLink.icon
				local textTitle = linkMoudle:Get("text1")
				local textDesc = linkMoudle:Get("text11")
				textTitle.Text = csvLink.name
				textDesc.Text = csvLink.tips
				textTitle.Color = Color_Gray
				textDesc.Color = Color_Gray
				linkMoudle:Get("JH").Text = Csv.Text("lineup_17")
			end
		end
	end
end

function _P.GetSortLink(link)
	if link ~= nil then
		local linkTable = link
		table.sort(linkTable,function(a,b)
			local csvLinkA = Csv.Link[a]
			local csvLinkB = Csv.Link[b]
			if csvLinkA ~= nil and csvLinkB ~= nil then
				return csvLinkA.sort < csvLinkB.sort
			else
				return true
			end
		end)
		return linkTable
	else
		return {}
	end
end

function _P.OnclickEquip(self,type)
	local dataStaff = self.StaffInfo
	local equipInfo = nil
	if dataStaff ~= nil then
		local isEquip = false
		if dataStaff.equips ~= nil then
			for k,v in pairs(dataStaff.equips) do
				local csvEquip = Csv.Equip[v.equipId]
				if csvEquip.type == type then
					isEquip = true
					equipInfo = v
				end
			end
		end

		if isEquip then
			WindowMgr.Create("UEquiptDetail",equipInfo,dataStaff.id)
		else
			WindowMgr.Create("UEquipMain",dataStaff.id,type,1)
		end
	end
end

function _R.SetList(self)
	_P.SetList(self)
	self.mIsLineUp = false
end

function _R.OnLineUpOpen(self)
	_P.SetList(self)
end

function _R.SetNowSelect(self,index)
	self.NowSelectIndex = index
	self.mIsLineUp = true
end

function _R.SetNoSelect(self)
	self.NowSelectIndex = nil
	self.mIsLineUp = true
end

function _R.UpdateEquip(self)
	_P.RefreshEquips(self)
end

function _M:ChangeStaffColor(staffid)
	_P.SetList(self)
	_R.StaffChange(self)
end

function _R.StaffChange(self)
	--self.mPower
	if self.mStaffid ~= nil and not self.mIsLineUp then
		local newPower = MStaff.StaffTable[self.mStaffid].power
		local newlevel = MStaff.StaffTable[self.mStaffid].level
		self.mPower = newPower

		_P.RefreshTianfu(self,self.mStaffid)

		self.mMoudle:Get("LvNum").Text = newlevel
		self.mMoudle:Get("GGZLtext").Text = newPower
		self.mMoudle:Get("GGZLtext"):AddContentSizeFitter():SetLayoutHorizontal()
		self.mMoudle:Get("GjlNum").Text = newPower
		self.mMoudle:Get("zhanli").Text = MLineUp.GetLineAllPower()
	end
end

function _R.JumptoEmptyItem(self)
	local itemMoudle = self.ItemList[1]
	if itemMoudle == nil then
		return
	end
	local seatNum = MLineUp.SeatNum
	local list = MLineUp.LineUpList
	local moveNum = 0
	if seatNum ~= nil and list ~= nil then
		for i = 1,MLineUp.SeatNum do
			if list[i] == nil then
				moveNum = i
				break
			end
		end
	else
		return
	end
	moveNum = moveNum - 1
	if moveNum < 0 then
		moveNum = 0
	end
	local moudle = self.mMoudle
	local scrollViewWidth = moudle:Get("scrollView").SizeDelta.x
	local content = moudle:Get("Content")
	local layout = content:AddHorizontalLayoutGroup()
	local spacing = layout.spacing
	local left = layout.padding.left
	local itemWidth = itemMoudle.SelfRect.SizeDelta.x
	local movePos = (spacing + (itemWidth or 0)) * moveNum + left - (scrollViewWidth - itemWidth)
	content:DOAnchorPosX(-movePos, 0)
end

return _M