local JGuiManager = CS.JGui.JGuiManager
local MFriend = JRequire "Dev.Friend.MFriend"
local CFriend = JRequire "Dev.Friend.CFriend"
local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire"Dev.Common.CCommon"
local TabGroup = JRequire "Dev.Common.TabGroup2"
local luaUtil = JRequire"Libs.LuaUtil"
local MGirl = JRequire "Dev.Girl.MGirl"
local CGirl = JRequire"Dev.Girl.CGirl"
local MBag = JRequire "Dev.Bag.MBag"
local CBag = JRequire "Dev.Bag.CBag"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MPlayer = JRequire "Dev.Player.MPlayer"
local UTiqinFriends = JRequire"Dev.Marry.UTiqinFriends"
local UTiqinServer = JRequire"Dev.Marry.UTiqinServer"
local UTiqinSpecial = JRequire"Dev.Marry.UTiqinSpecial"


local _M = Class(WindowBase)
local _P = {}
local _R = {}

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:OnCreate(chooseFuncId)
	local moudle = self:CreateMoudle(self._RootNode, "M_Girl_Married_Tiqin")
	self.mMoudle = moudle

	moudle:Get("C_Back_Btn"):AddOnButton(function()
		SoundMgr.Play(10002)
		self:Destroy()
	end)

	self.PageNode = moudle:Get("Content")

	moudle:Get("C_Text").Text = Csv.Text("married_tiqin_title")
	moudle:Get("IconText1").Text = Csv.Text("married_tiqin_icon1")
	moudle:Get("IconText2").Text = Csv.Text("married_tiqin_icon2")
	moudle:Get("IconText3").Text = Csv.Text("married_tiqin_icon3")

	--亲友提亲
	moudle:Get("icon1"):AddOnButton(function()
		_P.OnChoose(self, 1)
	end,nil,1.2)

	--指定提亲
	moudle:Get("icon2"):AddOnButton(function()
		_P.OnChoose(self, 2)
	end,nil,1.2)

	--全服提亲
	moudle:Get("icon3"):AddOnButton(function()
		_P.OnChoose(self, 3)
	end,nil,1.2)

	_P.OnChoose(self, 1)
end

function _P.OnChoose(self, index)
	if self.ChooseMoudle ~= nil then
		self.ChooseMoudle:Destroy()
		self.ChooseMoudle:delete()
		self.ChooseMoudle = nil
	end
	
	if index == 1 then
		self.ChooseMoudle = UTiqinFriends.new(self.PageNode)
	elseif index == 2 then
		self.ChooseMoudle = UTiqinSpecial.new(self.PageNode)
	elseif index == 3 then
		self.ChooseMoudle = UTiqinServer.new(self.PageNode)
	end
end

return _M