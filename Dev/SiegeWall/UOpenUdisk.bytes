--@RefType [Libs.WindowMgr.WindowBase.bytes#_M]
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
--@RefType [Libs.WindowMgr.WindowOpen.bytes#_M]
local WindowOpen = JRequire "Libs.WindowMgr.WindowOpen"
--@RefType [Dev.Common.CCommon.bytes#_M]
local CCommon = JRequire "Dev.Common.CCommon"
--@RefType [Dev.Staff.MStaff.bytes#_M]
local MStaff = JRequire "Dev.Staff.MStaff"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MSiege = JRequire"Dev.SiegeWall.MSiege"
local MPlayer = JRequire "Dev.Player.MPlayer"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

function _R.ShowOpenUDisk(self,data)
	
end

function _M:OnCreate(data)

	local moudle = self:CreateMoudle(self._RootNode, "M_Wghej_Upan_JM")
	self.Moudle = moudle

	local uDiskIcon = moudle:Get("UpanIcon")
	local upanName = moudle:Get("UPanText")

	local nums = {}
	for i = 1,4,1 do
		local num = moudle:Get("Num"..i)
		if num ~= nil then
			nums[i] = num
		end
	end

	local udiskData = Csv.SiegeTreasury[data.id]
	uDiskIcon.SpriteName = udiskData.icon
	upanName.Text = udiskData.name

	local rewardItems = {}
	if data.items ~= nil then
		for k,v in pairs(data.items)do
			table.insert(rewardItems,{id = v.id,count = v.count})
		end
	end
	
	local _jifen = 0
	local _score = 0

	if MPlayer.GetId() == data.playerid then
		_jifen = udiskData.openPoint
		if MSiege.Phase == udiskData.stage then
			_score = udiskData.openPoint
		end
	end

	local rewardData = {items = rewardItems,jifen = _jifen,score = _score}

	local index = 1
	local isShowReward = false
	moudle.SelfRect:AddOnUpdate(function()
		if not isShowReward then
			if index <= #nums then
				SoundMgr.Play(10052)
				nums[index].Text = math.random(0,9)..""
				index = index+1
			else
				WindowMgr.Create("UGetItems",rewardData,true)
			end
		end
	end,nil,0.5)
end

return _M