local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local CCommon = JRequire "Dev.Common.CCommon"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local MAX_COUNT = 10

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:OnCreate(msgs)
	local module = self:CreateMoudle(self._RootNode, "M_Luck_Draw_TC")
	module:Get("BackBtn"):AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)
	module:Get("Title").Text = Csv.Text("lottery_10")

	if msgs ~= nil and #msgs > 0 then
		local content = module:Get("content")
		local index = 0
		for i=#msgs,1,-1 do
			index = index + 1
			local msgInfo = msgs[i]
			local itemCsv = Csv.Item[msgInfo.itemId]
			local textWidget = self:CreateMoudle(content, "M_Luck_Draw_TC_Item")
			if msgInfo.itemId == Define.AssetsType.Gold and msgInfo.itemCount ~= nil and msgInfo.itemCount > 0 then
				textWidget.SelfRect.Text = Csv.Text("DLottery_getGold", {name = msgInfo.playerName, item = itemCsv.name, num = msgInfo.itemCount})
			else
				textWidget.SelfRect.Text = Csv.Text("lottery_9", {name = msgInfo.playerName, item = itemCsv.name})
			end

			if index == MAX_COUNT then
				break
			end
		end
	end
end

return _M