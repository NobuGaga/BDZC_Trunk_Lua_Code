local _M = {}
local _CsvMap = {}

_CsvMap.FuncMap = "Func"
function _M.Func(data)
	local tbl = {}
	for id,line in pairs(data) do
		if tbl[line.fid] == nil then
			tbl[line.fid] = {}
		end
		table.insert(tbl[line.fid], line)
	end
	return {"Func",data},{"FuncMap",tbl}
end

_CsvMap.TriggerMap = "Trigger"
function _M.Trigger(data)
	local tbl = {}
	for id,line in pairs(data) do
		if line.listen ~= nil then
			if tbl[line.listen] == nil then
				tbl[line.listen] = {}
			end
			table.insert(tbl[line.listen], line)
		end
	end
	return {"Trigger",data},{"TriggerMap",tbl}
end

--海外版VIP特殊处理
_CsvMap.Vip = "Vip"
function _M.Vip(data)
	if GameSetting.IsTaiWan then
		for id,line in pairs(data) do
			line.upExp = line.upExp_tw
		end
	end
	return {"Vip",data}
end

--海外版单笔充值RechargeSingle特殊处理
_CsvMap.RechargeSingle = "RechargeSingle"
function _M.RechargeSingle(data)
	if GameSetting.IsTaiWan then
		for id, line in pairs(data) do
			line.grade = line.gradetw
		end
	end
	return {"RechargeSingle",data}
end

--海外版累计充值RechargeTotal特殊处理
_CsvMap.RechargeTotal = "RechargeTotal"
function _M.RechargeTotal(data)
	if GameSetting.IsTaiWan then
		for id, line in pairs(data) do
			for k, v in pairs(line.displayNum) do
				line.displayNum[k] = (v or 0) * 10
			end
			for k, v in pairs(line.grade) do 
				line.grade[k] = (v or 0) * 10
			end
		end
	end
	return {"RechargeTotal",data}
end

_CsvMap.RechargeDay = "RechargeDay"
function _M.RechargeDay(data)
	if GameSetting.IsTaiWan then
		for id, line in pairs(data) do
			for k, v in pairs(line.displayNum) do
				line.displayNum[k] = (v or 0) * 10
			end
			for k, v in pairs(line.grade) do 
				line.grade[k] = (v or 0) * 10
			end
		end
	end
	return {"RechargeDay",data}
end

_CsvMap.MainQuestGroup = "MainQuest"
function _M.MainQuest(data)
	local group = {}
	for id, line in pairs(data) do
		local tab = group[line.group]
		if tab == nil then
			tab = {}
			group[line.group] = tab
		end
		tab[id] = line
	end
	return {"MainQuest",data}, {"MainQuestGroup", group}
end

return {CsvMaker = _M, CsvMap = _CsvMap}