local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local CCommon = JRequire "Dev.Common.CCommon"
local MArena = JRequire "Dev.Arena.MArena"
local CArena = JRequire "Dev.Arena.CArena"
local MBag = JRequire "Dev.Bag.MBag"

local _M = Class(WindowBase)
local _P = {}
local _R = {}


--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _R.OnArenaRefreshShop(self, isSelfRefresh)
	if isSelfRefresh then
		CCommon.ShowRight(Csv.Text("club_exchange_refreshSuccess"))
	end

	_P.refreshTime(self)
	_P.refreshItems(self)
end

function _R.OnArenaExchange(self, shopId)
	_P.refreshScore(self)
	_P.refreshTime(self)
	local itemModule = self.ItemList[shopId]
	local num = MArena.ShopList[shopId]
	if num <= 0 then
		_P.setItemGray(self, itemModule)
	elseif num > 1 then
		itemModule:Get("Red").Activity = true
		itemModule:Get("ItemNum").Text = tostring(num)
	else
		itemModule:Get("Red").Activity = false
	end
	local shopCsv = Csv.ArenaShop[shopId]
	CCommon.ShowFlyItem(itemModule:Get("Score"), shopCsv.itemId, shopCsv.itemCount)
end

function _P.pressRefreshBtn(self)
	local curNum, maxNum = MArena.GetShopRefreshCount()
	if curNum >= maxNum then
		CCommon.ShowError(Csv.Text("club_exchange_refreshError"))
	else
		local haveGode = MBag.GetItemNum(Define.AssetsType.Gold)
		local needCost = MArena.GetShopRefreshCost()
		CCommon.CheckTips(
			function(isSure, arg)
				if isSure then
					if needCost > haveGode then
						CCommon.ShowError(Csv.Text("err_club_no_gold"))
					else
						CArena.ReqRefreshShop()
					end	
				end			
			end, 
			{
				items = {[Define.AssetsType.Gold] = haveGode},
				content = Csv.Text("club_exchange_tip",{num = needCost})
			},Define.NoTipsAgainType.ArenaShop
		)		
	end
end

function _P.setItemGray(self, itemModule)
	itemModule:Get("Icon").IsGray = true
	itemModule:Get("IconBox").IsGray = true
	itemModule:Get("Red").Activity = false
	itemModule:Get("Corner").IsGray = true
	local exchangeBtn = itemModule:Get("C_Btn_b")
	exchangeBtn.IsGray = true
	exchangeBtn.RaycastTarget = false
end

function _P.refreshItems(self)
	local moudle = self.mMoudle
	local content = moudle:Get("List")
	content:DestroyChildren()
	self.ItemList = {}
	local shopList = {}
	for shopId,num in pairs(MArena.ShopList) do
		local shopCsv = Csv.ArenaShop[shopId]
		if shopCsv ~= nil then
			table.insert(shopList, shopCsv)
		else
			error("cont find ArenaShop id", shopId)
		end
	end
	table.sort(shopList, function(a, b)
		return a.sort < b.sort
	end)
	for _,shopCsv in pairs(shopList) do
		local itemModule = self:CreateMoudle(content, "M_Club_Exchange_Item")
		self.ItemList[shopCsv.id] = itemModule
		local itemConf = Csv.Item[shopCsv.itemId]
		local strColor = Csv.ItemColor[itemConf.color].str
		itemModule:Get("GoodName").Text = Csv.Text("common_color",{num = strColor, name = itemConf.name})
		itemModule:Get("Icon").SpriteName = itemConf.icon
		local getNumText = itemModule:Get("GetNum")
		getNumText.Text = "x" .. shopCsv.itemCount
		getNumText.Activity = true
		local qualityImg  = itemModule:Get("IconBox")
		qualityImg.SpriteName = itemConf.colorIcon
		qualityImg:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			WindowMgr.Create("UBagDetailPop", shopCsv.itemId)
		end)
		itemModule:Get("Score").Text = shopCsv.cost .. Csv.Text("club_exchange_fenshu")
		itemModule:Get("C_text").Text = Csv.Text("club_exchange_change")
		if shopCsv.discount ~= nil and shopCsv.discount ~= "" then
			itemModule:Get("CornerText").Text = shopCsv.discount
		else
			itemModule:Get("Corner").Activity = false
		end
		local num = MArena.ShopList[shopCsv.id]
		if num <= 0 then
			_P.setItemGray(self, itemModule)
		else
			if num > 1 then
				itemModule:Get("ItemNum").Text = tostring(num)
			else
				itemModule:Get("Red").Activity = false
			end
			itemModule:Get("C_Btn_b"):AddOnButton(function ( ... )
				SoundMgr.Play(10001)
				if MArena.Score < shopCsv.cost then
					CCommon.ShowError(Csv.Text("club_exchange_pointError"))
					return
				end
				CArena.ReqExchange(shopCsv.id)
			end)
		end		
	end
end

function _P.refreshTime(self)
	local time = MArena.GetShopRefreshTime()
	self.TimeText.Text = LuaUtil.GetTimeHMS(time)

	local curNum, maxNum = MArena.GetShopRefreshCount()
	if self.LastShopRefreshNum ~= curNum or self.LastShopRefreshMax ~= maxNum then
		self.LastShopRefreshNum = curNum
		self.LastShopRefreshMax = maxNum
		self.RefTimes.Text = (maxNum - curNum) .. '/' .. maxNum
		self.CostValue.Text = MArena.GetShopRefreshCost()
		if curNum >= maxNum then
			self.RefBtn.IsGray = true
			self.RefBtn.RaycastTarget = false
		else
			self.RefBtn.IsGray = false
			self.RefBtn.RaycastTarget = true
		end
	end
end

function _P.refreshScore(self)
	self.ScoreText.Text = tostring(MArena.Score)
end

--界面构建
function _M:OnCreate(...)
	local moudle = self:CreateMoudle(self._RootNode, "M_Club_Exchange")
	self.mMoudle = moudle
	self.ItemList = {}
	moudle:Get("C_Back_Btn"):AddOnButton(function()
		self:Destroy()
	end,nil,0.9)
	self.CostValue = moudle:Get("costValue")
	self.RefTimes = moudle:Get("CSNum")
	self.TimeText = moudle:Get("CXNum")
	self.ScoreText = moudle:Get("integralNum")
	self.RefBtn = moudle:Get("C_Btn_b_8")
	moudle:Get("C_Text").Text = Csv.Text("Arena_9")
	moudle:Get("integral").Text = Csv.Text("Arena_10")
	moudle:Get("zuanshiSX").Text = Csv.Text("club_exchange_money")
	moudle:Get("timeSX").Text = Csv.Text("club_exchange_auto")
	moudle:Get("C_text_8").Text = Csv.Text("club_exchange_refresh")	
	moudle:Get("costText").Text = Csv.Text("club_shop_cost")
	self.RefBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		_P.pressRefreshBtn(self)
	end)
	moudle.SelfRect:AddOnUpdate(function()
		_P.refreshTime(self)
	end, nil, 1)
	_P.refreshScore(self)
	_P.refreshTime(self)
	_P.refreshItems(self)
end

return _M