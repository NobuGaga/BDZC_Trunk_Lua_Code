----------------------文件引用--------------------------
--@RefType [Libs.WindowMgr.WindowBase.bytes#_M]
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
--@RefType [Libs.Sound.SoundMgr.bytes#_M]
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
--@RefType [Dev.Battle.MBattle.bytes#_M]
local MBattle = JRequire "Dev.Battle.MBattle"

----------------------CS类引用--------------------------

----------------------常量定义--------------------------
local MoudleName = "M_Checkpoint_Organization_Reward"
local textTitle = "textTitle"
local csvTitleText = "battle_frame_reward"
local btnClose = "btnClose"
local ItemName = "M_Checkpoint_Organization_Reward_Item"

--外部接口模块 *** 只放置共有接口, 禁止放变量
local _M = Class(WindowBase)
--私有函数模块 *** 只放置私有函数, 禁止放变量
local _P = {}

--界面构建
function _M:OnCreate()
	_P.InitMoudleTopInfo(self)
	_P.InitRewardList(self)
end

--初始化模块顶部信息
function _P.InitMoudleTopInfo(self)
	self.moudle = self:CreateMoudle(self._RootNode, MoudleName)
	self.moudle:Get(textTitle).Text = Csv.Text(csvTitleText)
	self.moudle:Get(btnClose):AddOnButton(function()
		SoundMgr.Play(10002)
		self:Destroy()
	end)
end

function _P.InitRewardList(self)
	self.content = self.moudle:Get("content")
	self.maxStar = 7
	self.curChapter = math.modf(MBattle.CurId / 100)
	local gotList = {}
	for _, csvData in ipairs(Csv.BattleFrameReward) do
		if self.curChapter <= csvData.maxChapter then
			_P.CreateItem(self, csvData)
		else
			gotList[#gotList + 1] = csvData
		end
	end
	for _, csvData in ipairs(gotList) do
		_P.CreateItem(self, csvData)
	end
end

function _P.CreateItem(self, csvData)
	local chapter = {}
	local num = 0
	for _, area in ipairs(csvData.chapterArea) do
		local startIndex, endIndex = area[1], area[2] or area[1]
		for index = startIndex, endIndex do
			chapter[index] = num
			num = num + 1
		end
	end
	local itemMoudle = JGuiManager.GetMoudle(self.content, ItemName)
	local csvStaff = Csv.Personnel[csvData.staffID]
	itemMoudle:Get("head").SpriteName = csvStaff.asset
	for starIndex = csvStaff.star + 1, self.maxStar do
		itemMoudle:Get("star" .. starIndex).Activity = false
	end
	itemMoudle:Get("textName").Text = csvStaff.name
	itemMoudle:Get("textDesc").Text = csvStaff.tips
	for index, sprite in ipairs(csvStaff.labelImg) do
		itemMoudle:Get("label" .. index).SpriteName = sprite
	end
	local curChapterIndex = chapter[self.curChapter]
	if curChapterIndex then
		itemMoudle:Get("process").FillAmount = curChapterIndex / csvData.count
		itemMoudle:Get("textProcess").Text = Csv.Text("battle_reward_process", {cur = curChapterIndex, max = csvData.count})
	elseif self.curChapter < csvData.maxChapter then
		itemMoudle:Get("processInfo").Activity = false
	else
		itemMoudle:Get("process").FillAmount = 1
		itemMoudle:Get("textProcess").Text = Csv.Text("welfare_vipgot")
	end
	itemMoudle:Get("textGetTips").Text = Csv.Text("battle_reward_get_tips", {text = csvData.text})
end

return _M