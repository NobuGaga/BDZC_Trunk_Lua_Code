----------------------文件引用--------------------------
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowOpen = JRequire "Libs.WindowMgr.WindowOpen"

-- @RefType [Dev.Quest.MQuest.bytes#_M]
local CActivity = JRequire "Dev.Activity.CActivity"
local MActivity = JRequire "Dev.Activity.MActivity"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local CCommon = JRequire "Dev.Common.CCommon"
local luaUtil = JRequire"Libs.LuaUtil"
local MBag = JRequire "Dev.Bag.MBag"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"

local GTE_EFFECT_ID = 5
local COLOR_GREEN = Color(76 / 255, 255 / 255, 89 / 255, 1)
local COLOR_RED = Color(255 / 255, 76 / 255, 76 / 255, 1)
local RecuitVec = Vector2(94, 70)

-------------------------------------------------------
local _M = Class(WindowBase)
local _P = {}
local _R = {}


-- 事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end


-- 界面构建,typeId为1是四大奸臣，15是巾帼五虎
function _M:OnCreate(typeId)
	local typeList = MActivity.GetListFromType(typeId)
	if typeList == nil then
		CCommon.ShowError(Csv.Text("rankreward_finish"))
		return 
	end

	local actId = MActivity.ActIdForType[typeId]
	self.mData = typeList[actId]

	local moduleName = self.mData.mainPrefabName
	local module = self:CreateMoudle(self._RootNode, moduleName)
	self.mModule = module

	module:Get("title").Text = self.mData.title
	local closeBtn = module:Get("backBtn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)

	_P.SetListData(self, self.mData.list, true)
end


function _P.SetListData(self, peopleList, isTimer)
	if peopleList == nil or #peopleList == 0 then return end

	local listData = _P.GetSortList(peopleList)	
	if listData == nil then return end

	local itemContent = self.mModule:Get("content")
	itemContent:DestroyChildren()

	self.mAllListData = {}
	for i,v in ipairs(listData) do
		self.mAllListData[v.index] = _P.OnCreateItem(self, v, itemContent)
	end

	if isTimer then
		_P.OnStartTimer(self)
	end
end


-- 排序
function _P.GetSortList(listData)
	local sortList = {}
	for k, v in pairs(listData) do
		table.insert(sortList, v)
	end

	table.sort(sortList, function (a, b)
		return a.index < b.index
	end)

	return sortList
end


function _P.OnCreateItem(self, data, itemGrid)
	local item = {}
	local itemName = self.mData.itemPrefabName
	local itemModule = JGuiManager.GetMoudle(itemGrid, itemName)
	local countTime = 0

	if itemModule ~= nil then
		local activityState = self.mData.state
		itemModule:Get("JJtext").Text = data.tips
		itemModule:Get("Bsx").SpriteName = data.icon
		itemModule:Get("JnTitle").Text = Csv.Text("jianchen_aureoleSkill_title")
		itemModule:Get("text").Text = Csv.Text("jianchen_duihuan")
		
		local staffConf = Csv.Personnel[data.attrid]
		if staffConf ~= nil then
			itemModule:Get("NameText").Text = staffConf.name

			if staffConf.aureole then
				local itemContent = itemModule:Get("content")
				for k,v in pairs(staffConf.aureole) do
					_P.CreateSkillItem(itemContent, v)
				end
			end

			local totalApitude = _P.GetAllApitude(staffConf.book)
			itemModule:Get("title").Text = Csv.Text("jianchen_totalAttr", {num = totalApitude})
			itemModule:Get("title2").Text = Csv.Text("jianchen_aureoleSkill_specialty", {showStr = staffConf.specialty})

			if staffConf.star ~= nil then
				for i = 1,staffConf.star do
					itemModule:Get("Star"..i).Activity = true
				end
			end
		end

		-- 设置按钮数据
		_P.OnSetBtnData(self, itemModule, data)

		local iconBox = itemModule:Get("IconBox")
		local itemConf = Csv.Item[data.cost.id]
		iconBox:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			local costIconNum = MBag.GetItemNum(itemConf.id)
			CCommon.CheckTips(function(isSure, arg)
				if isSure then
					_P.OnClickRecruit(self, data)
				end
			end, {items = {[itemConf.id] = costIconNum} ,content = Csv.Text("jianchen_recruit_tip", {name = itemConf.name, num = data.cost.num})})
		end, nil, 0.9)

		local countText = itemModule:Get("DownTime")
		local activeTimeText = itemModule:Get("ActiveTime")
		if activityState == nil or activityState.endTime == nil or activityState.endTime <= 0 then
			activeTimeText.Text = Csv.Text("jianchen_timeOpenDay")
			countText.Activity = false
		else
			activeTimeText.Text = Csv.Text("jianchen_timeInfo", {startTime = luaUtil.TransToYMD(activityState.startTime), 
			endTime = luaUtil.TransToYMD(activityState.endTime)})
			countText.Activity = true
			countTime = activityState.endTime
			_P.OnSetItemTime(itemModule, countTime)
		end

		-- 设置每个item红点
		local sysId = (self.mData.actType == Define.ActivityType.JianChen and Define.SysId.JianChen) or Define.SysId.JinGuo
		self:RegistRedpoint(itemModule:Get("redpoint"), sysId, data.index)
	end

	item.module = itemModule
	item.countTime = countTime
	item.data = data
	return item
end


function _P.OnSetItemTime(itemModule, countTime)
	if itemModule == nil then return end

	local time = countTime - HeartBeat.ServSecond()
	local downTimeText = itemModule:Get("DownTime")
	if time <= 0 then
		downTimeText.Text = Csv.Text("jianchen_timeOutInfo", {time = LuaUtil.GetTimeHMS(0)})
	else
		downTimeText.Text = Csv.Text("jianchen_timeOutInfo", {time = LuaUtil.GetTimeHMS(time)})
	end
end


-- 开启计时器
function _P.OnStartTimer(self)
	if _P.IsHasTimeOut(self) then
		self.UpdateComp = self.mModule.SelfRect:AddOnUpdate(function()
			_P.OnUpdateTime(self)
		end, nil, 1)
	end
end


-- 每s更新
function _P.OnUpdateTime(self)
	local hasCountNum = 0
	for k,v in pairs(self.mAllListData) do
		local time = v.countTime - HeartBeat.ServSecond()
		if time > 0 then
			hasCountNum = hasCountNum + 1
			_P.OnSetItemTime(v.module, v.countTime)
		end
	end

	if hasCountNum == 0 then
		_P.OnClearTimer(self)
	end
end


-- 移除计时器
function _P.OnClearTimer(self)
	if self.UpdateComp ~= nil then
		self.UpdateComp:Destroy()
		self.UpdateComp = nil
	end
end


-- 是否有倒计时
function _P.IsHasTimeOut(self)
	for k,v in pairs(self.mAllListData) do
		local time = v.countTime - HeartBeat.ServSecond()
		if time > 0 then
			return true
		end
	end

	return false
end


-- 光环技能
function _P.CreateSkillItem(itemGrid, autroleId)
	local itemModule = JGuiManager.GetMoudle(itemGrid, "M_Activity_Sdjc_Skill_Item")
	if itemModule == nil or autroleId == nil then return end

	local aureoleConf = Csv.Aureole[autroleId * 1000 + 1]
	if aureoleConf == nil then return end

	itemModule:Get("Icon").SpriteName = aureoleConf.icon
	itemModule.SelfRect.SpriteName = aureoleConf.iconColor

	itemModule.SelfRect:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("UFourTraitorsAureoleSkill", aureoleConf)
	end)
end


-- 获取员工资质
function _P.GetAllApitude(bookList)
	local allAptitude = 0
	for k,v in pairs(bookList) do
		local aptitude = Csv.BookLv[v[2]*1000 + 1].aptitude
		allAptitude = allAptitude + aptitude
	end

	return allAptitude
end


-- 后面兑换成功后，直接调用更改数据
function _P.OnSetBtnData(self, itemModule, data, isShowAnim)
	local iconBox = itemModule:Get("IconRect")
	local recruitImg = itemModule:Get("Ylq")

	iconBox.Activity = not data.isGeted
	if isShowAnim == nil then
		recruitImg.Activity = data.isGeted
	else
		self.mModule.SelfRect:AddOnTime(function()
			SoundMgr.Play(10004)
			local effect = CCommon.CreateEffect(itemModule:Get("Effect"), GTE_EFFECT_ID, recruitImg.LocalPosition, function( ... )
				if effect ~= nil then
					effect:Destroy()
				end
				recruitImg.Activity = data.isGeted
			end, {M_Effect_Get = "fl_030"})
			-- effect.SelfRect.SizeDelta = RecuitVec -- 设置图片大小

		end, nil, 0.2)
	end

	if not data.isGeted then
		local itemConf = Csv.Item[data.cost.id]	
		local costIconNum = MBag.GetItemNum(itemConf.id)
		itemModule:Get("IconImg").SpriteName = itemConf.icon

		local iconNumText = itemModule:Get("IconNum")
		iconNumText.Text = costIconNum .. '/' .. data.cost.num
		iconNumText.Color = (costIconNum >= data.cost.num and COLOR_GREEN) or COLOR_RED
	end
end


-- 点击招募员工
function _P.OnClickRecruit(self, data)
	if data.isGeted then
		CCommon.ShowError(Csv.Text("jianchen_hasRecuit_error"))
		return
	end

	if not MBag.CheckItemEnough(data.cost.id, data.cost.num) then
		return
	end

	CActivity.GetRewardReq(self.mData.actId, data.index)
end


-- 兑换成功回调
function _R.OnRecuitCallBack(self, data)
	local recuitItem = self.mAllListData[data.index]
	if recuitItem == nil then return end

	recuitItem.data.isGeted = true
	_P.OnSetBtnData(self, recuitItem.module, recuitItem.data, true)

	-- 更新所有item的数量
	_P.OnUpdateItemNum(self)
end


function _P.OnUpdateItemNum(self)
	for k,v in pairs(self.mAllListData) do
		local hasNum = MBag.GetItemNum(v.data.cost.id)
		local iconNumText = v.module:Get("IconNum")
		iconNumText.Text = hasNum .. '/' .. v.data.cost.num
		iconNumText.Color = (hasNum >= v.data.cost.num and COLOR_GREEN) or COLOR_RED
	end
end


-- 数据变化，更新界面
function _R.OnUpdateViewData(self, actType)
	local typeList = MActivity.GetListFromType(actType)
	local actId = MActivity.ActIdForType[actType]

	if typeList == nil then 
		self:Destroy()
		CCommon.ShowRight(Csv.Text("err_finance_not_open"))
		return
	end

	self.mData = typeList[actId]
	_P.SetListData(self, self.mData.list, false)
end


return _M