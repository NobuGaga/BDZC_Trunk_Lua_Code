local _M = Class()
local JGuiManager = CS.JGui.JGuiManager

--界面构建
function _M:ctor(scroll,content,prefabName,callBack,callBack2)
    self.mScroll = scroll
    self.mContent = content
    self.mPrefabName = prefabName
	self.mCallBack = callBack
	self.mCallBack2 = callBack2
end

function _M:CreateScroll(pageNum,pageHeight,pageWidth,itemHeight,space,tableData,colNum)
    if tableData == nil then return end
    local content = self.mContent
	local allNum = #tableData
	local height
	local num1,num2 = math.modf(allNum/colNum)
	if num2 == 0 then
		height = num1 * (itemHeight + space) - space
	else
		height = (num1 + 1) * (itemHeight + space) - space
	end
    self.mPageHeight = pageHeight
    self.mItemAndSpaceSize = itemHeight + space
	self.mPageNum = pageNum
	self.mColNum = colNum
    content.SizeDelta = Vector2(pageWidth,height)

    self.mTableIndexData = tableData
    self.mTableShowData = {}
    self.mTableFreeMoudle = {}
	self.mTableIndexMoudle = {}

    if allNum > pageNum * 2 then
        for i=1,pageNum + colNum do
			local moudle = JGuiManager.GetMoudle(content,self.mPrefabName)
			table.insert(self.mTableFreeMoudle,moudle)
		end
        self:SetLoopScroll()
    else
        self:SetNormalScroll(tableData)
    end
end

function _M:SetLoopScroll()
    self:OnScrollValueChange()
    self.mScroll.OnValueChanged:RemoveAllListeners()
    self.mScroll.OnValueChanged:AddListener(function(...)self:OnScrollValueChange()end)
end

function _M:OnScrollValueChange()
	local callBack = self.mCallBack
	local callBack2 = self.mCallBack2
    if callBack == nil then
        return
    end
    local content = self.mContent
    if content == nil then
        return
    end
    local tableIndexData = self.mTableIndexData
    local tableShowData = self.mTableShowData
    local tableFreeMoudle = self.mTableFreeMoudle
	local tableIndexMoudle = self.mTableIndexMoudle
    local nowIndex = 0
    local posY = content.LocalPosition.y
	local sizeY = content.SizeDelta.y
    if posY <= 0 or posY > sizeY - self.mPageHeight then
		if posY <= 0 then
			nowIndex = 1
		else
			nowIndex = #tableIndexData - self.mPageNum
		end
    else
		local nowCol = math.floor(posY/self.mItemAndSpaceSize) + 1
		if nowCol <= 1 then
			nowIndex = 1
		else
			nowIndex = (nowCol - 1) * self.mColNum + 1
		end
	end
    for i = #tableIndexData,1,-1 do
        if i < nowIndex or i > nowIndex + self.mPageNum then
            tableShowData[i] = nil
            if tableIndexMoudle[i] ~= nil then
				table.insert(tableFreeMoudle,tableIndexMoudle[i])
				tableIndexMoudle[i] = nil
				callBack2(i,tableIndexData[i])
			end
        end
    end
    for j = nowIndex,nowIndex + self.mPageNum + self.mColNum do
        local isCreated = false
        if j > 0 and j <= #tableIndexData then
            for k,v in pairs(tableShowData) do
                if j == k and v ~= nil then
                    isCreated = true
                end
            end
            if not isCreated then
                local moudle = tableFreeMoudle[1]
				if moudle ~= nil then
					tableIndexMoudle[j] = moudle
					table.remove(tableFreeMoudle,1)
					tableShowData[j] = tableIndexData[j]
                	callBack(j,tableIndexData[j],moudle)
				end
            end
        end
    end
end

function _M:SetNormalScroll(tableData)
    local callBack = self.mCallBack
	local content = self.mContent
	for k,v in ipairs(tableData) do
		local moudle = JGuiManager.GetMoudle(content,self.mPrefabName)
        if callBack ~= nil then
            callBack(k,v,moudle)
        end
    end
end

return _M