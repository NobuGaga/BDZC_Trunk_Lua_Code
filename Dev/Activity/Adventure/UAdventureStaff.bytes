-- 奇遇员工界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire "Dev.Common.CCommon"
local MStaff = JRequire "Dev.Staff.MStaff"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local MBag = JRequire "Dev.Bag.MBag"
local MPlayer = JRequire "Dev.Player.MPlayer"

local TOP_BEGIN = 0
local TOP_END = 450
local BUTTOM_BEGIN = 300
local BUTTOM_END = 1200
local DEFAULT_ICON = "HeroList_Add"
local POSY_ANIM = "T_Adventure_PosY"
local MAX_SIGN_NUM = 6

local PINK = Color(255/255,93/255,140/255)
local BLUE = Color(93/255,153/255,255/255)
local RedStr = 'ff5d8c'
local GreenStr = '5d99ff'
local AtriIconNames = {"ty_133", "ty_134", "ty_135", "ty_136"}
local StaffRectPos = {Vector2(0, -332), Vector2(0, -460)}
-- local StarBgIcons = {"yg_bg_008", "yg_bg_009", "yg_bg_010"
-- 					,"yg_bg_011", "yg_bg_012", "yg_bg_013","yg_bg_013"}

local _M = Class(WindowBase)
local _P = {}
local _R = {}


function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _R.OnCompleteEvent(self, data, callBack)
	WindowMgr.Create("UAdventureResult", data, self.mData.isDown, self.mData.taskId, function()
		self:Destroy()
		if callBack then
			callBack()
		end
	end)
end

function _P.GetSortStaffs(self,rawTable, suitData)
	local suitTable = {}
	local unsuitTable = {}
	--TODO:排序优化
	for k,v in pairs(rawTable) do
		--符合条件的
		if _P.CheckIsSuit(self,suitData,v) > 0 then
			table.insert(suitTable,v)
		else
			table.insert(unsuitTable,v)
		end
	end
	
	table.sort(suitTable,function(a,b)
		-- 当类型是一样的时候，按照属性->总属性->id
		if _P.CheckIsSuit(self,suitData,a) == _P.CheckIsSuit(self,suitData,b) then
			local staffAttrData = _P.GetStaffSuit(suitData)
			if staffAttrData then
				local aval = MStaff.GetAttrByType(a.id, staffAttrData.type)
				local bval = MStaff.GetAttrByType(b.id, staffAttrData.type)
				if aval == bval then
					if MStaff.GetAllAttr(a.id) ==  MStaff.GetAllAttr(b.id) then
						return a.id > b.id
					end
					
					return MStaff.GetAllAttr(a.id) > MStaff.GetAllAttr(b.id)
				else
					return aval > bval
				end
			else
				if MStaff.GetAllAttr(a.id) ==  MStaff.GetAllAttr(b.id) then
					return a.id > b.id
				end
				
				return MStaff.GetAllAttr(a.id) > MStaff.GetAllAttr(b.id)
			end
		end

		return _P.CheckIsSuit(self,suitData,a) > _P.CheckIsSuit(self,suitData,b)
	end)

	table.sort(unsuitTable,function(a,b)
		for i=1,#suitData do
			if suitData[i].type <= 4 then
				local aval = MStaff.GetAttrByType(a.id, suitData[i].type)
				local bval = MStaff.GetAttrByType(b.id, suitData[i].type)
				if aval == bval then
					if MStaff.GetAllAttr(a.id) ==  MStaff.GetAllAttr(b.id) then
						return a.id > b.id
					else
						return MStaff.GetAllAttr(a.id) > MStaff.GetAllAttr(b.id)
					end
				else
					return aval > bval
				end
			end
		end
	end)

	for k,v in pairs(unsuitTable) do
		table.insert(suitTable, v)
	end
	return suitTable
end

-- 获取属性
function _P.GetStaffSuit(suitData)
	for i=1,#suitData do
		if suitData[i].type <= 4 then
			return suitData[i]
		end
	end
end

--检测这名员工是否符合需求
--排序：可使用》已使用可加班》已使用不可加班》不符合条件》属性数值》资质》
function _P.CheckIsSuit(self,suitData, data)
	local checkSum = 1 	--符合度
	local checkSeed = 1000 --防止单属性偏差过大
	local csvPerson = Csv.Personnel[data.id]

	local isChoose = false -- 是否可选
	for i=1,#suitData do
		--四种基本属性：公关，行政，技术，营销 走一套
		--先看当前属性是不是必需条件
		if suitData[i].extra == 1 then
			if suitData[i].type <= 4 then
				local dataVal = MStaff.GetAttrByType(data.id, suitData[i].type)
				if dataVal < suitData[i].val then
					return dataVal - suitData[i].val
				end
				checkSum = checkSum + (dataVal - suitData[i].val) * checkSeed
				--性别 国籍 年龄 员工ID
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.Sex then
				if csvPerson.sex == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.Nationality then
				if csvPerson.countries == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.Age then
				if csvPerson.age == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.YuanGong then
				if data.id == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.Job then
				--和服务器约定suitData[i].val%10为员工级别类型stageType, /10为级别stage
				if csvPerson.stage >= suitData[i]/10 and 
					csvPerson.stageType >= suitData[i]%10 then
						checkSum = checkSum + 1*checkSeed
					else
						return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.cloth then
				local result = false
				for k,v in pairs(csvPerson.clothesColour) do
					if v == suitData[i].val then
						result = true
					end
				end
				if result then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.tile then
				if csvPerson.tieColour == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			elseif suitData[i].type == MActivity.AdvReqTypeEnum.glass then
				if csvPerson.glasses == suitData[i].val then
					checkSum = checkSum + 1*checkSeed
				else
					return -9999
				end
			end
		else
			isChoose = true
		end
	end
	--已选中直接置顶
	if _P.IsCurContains(self, data.id,self.index) and checkSum > 0 then
		checkSum = 99999999
	elseif _P.IsContains(self,data.id) and checkSum > 0 then
		return 3
	end

	return ((isChoose and checkSum == 1) and 4) or checkSum
end

--构建需求员工
function _P.SetAskStaffList(self)
	local contentTransform = self.mModule:Get("StaffContent")
	contentTransform:DestroyChildren()

	local reqstaffDatas = self.mData.eventInfo
	for index=1,#reqstaffDatas do
		self.mReqTableItems[index] = _P.OnCreateAskItem(self,reqstaffDatas[index],contentTransform,index)
	end
end

function _P.SetSelect(self,index)
	for i=1,#self.mReqTableItems do
		if i == index then
			self.mReqTableItems[i].module:Get("Ing").Activity = true
		else
			self.mReqTableItems[i].module:Get("Ing").Activity = false
		end
	end
end

function _P.OnCreateAskItem(self,data,contentTransform,index)
	local reqStaff = {}
	local itemMoudle = JGuiManager.GetMoudle(contentTransform, "M_Staff_AdvItem", WindowType.UI, 0)
	local icon = itemMoudle:Get("Icon")
	icon.SpriteName = DEFAULT_ICON
	for i=1,3 do
		itemMoudle:Get("Z"..i..i).Activity = false
		itemMoudle:Get("Gou"..i).Activity = false
	end

	itemMoudle:Get("DHKtext").Text = Csv.Text("adventure_select_send")

	if index == 1 then
		self.selectTips = itemMoudle:Get("Dhk")
		self.selectTips.Activity = true
	else
		itemMoudle:Get("Dhk").Activity = false
		
	end
	itemMoudle:Get("Ing").Activity = false
	_P.SetReqDetail(data.attrInfo,itemMoudle,nil)
	icon:AddOnButton(function(...)
		self.mModule:Get("StaffRect").LocalPosition = StaffRectPos[2]
		self.Top:DOAnchorPosY(TOP_END, 0.4):SetEase(CS.DG.Tweening.Ease.Linear)
		self.Buttom:DOAnchorPosY(BUTTOM_END, 0.4):SetEase(CS.DG.Tweening.Ease.Linear)
		_P.SetSelect(self,index)
		_P.SetOwnStaffList(self,data.attrInfo,index)
	end,nil,1.05)

	reqStaff.module = itemMoudle
	return reqStaff
end

--设置要求参数
function _P.SetReqDetail(data, module,staffData)
	if staffData ~= nil then
		module:Get("Name").Text = MStaff.GetStaffName(staffData.id)
		module:Get("BG_2").Activity = true
		-- module:Get("BG_3").Activity = true
		module:Get("Level").Text = 'Lv.' .. staffData.level
		module:Get("BG_2").SpriteName = MStaff.Color2Image[staffData.color]
	else
		module:Get("BG_2").Activity = false
		-- module:Get("BG_3").Activity = false
		module:Get("Level").Text = ""
		module:Get("Name").Text = ""
	end
	for k, v in pairs(data) do
		if v.extra == 1 then
			module:Get("Text"..k).Text = Csv.Text("adventure_require")..k
		else
			module:Get("Text"..k).Text = Csv.Text("adventure_extra")
		end
		 module:Get("Z"..k..k).Activity = true
		if v.type <= 4 then
			--自己的员工属性
			module:Get("Num"..k).Text = Csv.Text("adventure_staff_attr"..v.type,{num=v.val})
			if staffData ~= nil then
				local val = MStaff.GetAttrByType(staffData.id,v.type)
				module:Get("Gou"..k).Activity = val >= v.val
			end
		elseif v.type == MActivity.AdvReqTypeEnum.Sex then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.sex == v.val
			end
			if v.val == MActivity.AdvSexEnum.Man then
				module:Get("Num"..k).Text = Csv.Text("adventure_sex_man")
			else
				module:Get("Num"..k).Text = Csv.Text("adventure_sex_female")
			end
		elseif v.type == MActivity.AdvReqTypeEnum.Nationality then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.countries == v.val
			end
			if v.val == 1 then
				module:Get("Num"..k).Text = Csv.Text("adventure_nation_chinese")
			else
				module:Get("Num"..k).Text = Csv.Text("adventure_nation_alia")
			end
		elseif v.type == MActivity.AdvReqTypeEnum.Age then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.age == v.val
			end
			module:Get("Num"..k).Text = Csv.Text("adventure_age",{age = v.val})
		elseif v.type == MActivity.AdvReqTypeEnum.YuanGong then
			if staffData ~= nil then
				module:Get("Gou"..k).Activity = staffData.id == v.val
			end
			local name = MStaff.GetStaffName(v.val)
			module:Get("Num"..k).Text = Csv.Text("adventure_work",{name = name})
		elseif v.type == MActivity.AdvReqTypeEnum.Job then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.stage * 10 + csvPerson.stageType == v.val
			end
			local level = v.val/10
			local type = v.val%10
			module:Get("Num"..k).Text = Csv.Text("adventure_staff_type"..type)..Csv.Text("adventure_staff_level"..level)
		elseif v.type == MActivity.AdvReqTypeEnum.cloth then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				local resutl = false
				for k,j in pairs(csvPerson.clothesColour) do
					if j == v.val then
						resutl = true
					end
				end
				module:Get("Gou"..k).Activity = resutl
			else
				module:Get("Num"..k).Text = Csv.Text("adventure_cloth"..v.val)
			end
		elseif v.type == MActivity.AdvReqTypeEnum.tile then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.tieColour == v.val
			else
				module:Get("Num"..k).Text = Csv.Text("adventure_tile"..v.val)
			end
		elseif v.type == MActivity.AdvReqTypeEnum.glass then
			if staffData ~= nil then
				local csvPerson = Csv.Personnel[staffData.id]
				module:Get("Gou"..k).Activity = csvPerson.glasses == v.val
			else
				module:Get("Num"..k).Text = Csv.Text("adventure_glass"..v.val)
			end
		end
	end
end

-- 判断额外总属性的勾是否满足添加，by：pyh
function _P.CheckTotalAtriIsShow(self)
	local totalGouImg = self.mModule:Get("Gou1")
	local conditionText = self.mModule:Get("TjText")
	local tipRect = self.mModule:Get("TJBTBG")

	if self.mData.otherEventRule == nil or self.mData.otherEventRule[1] == nil or self.mData.otherEventRule[1] == 0 then -- 不需要条件
		tipRect.Activity = false
	else
		tipRect.Activity = true
		if self.selectDataList ~= nil and next(self.selectDataList) ~= nil then
			local hasTotalNum = 0
			local needNum = self.mData.otherEventRule[2]
			for k,v in pairs(self.selectDataList) do
				local staffNum = MStaff.GetAttrByType(v.data.id, self.mData.otherEventRule[1])
				hasTotalNum = hasTotalNum + staffNum
			end

			totalGouImg.Activity = hasTotalNum >= needNum
			conditionText.Text = Csv.Text("adventure_ruleShow" .. self.mData.otherEventRule[1], {colorNum = (hasTotalNum >= needNum and GreenStr) or RedStr, num = self.mData.otherEventRule[2]})
		else
			totalGouImg.Activity = false
			conditionText.Text = Csv.Text("adventure_ruleShow" .. self.mData.otherEventRule[1], {colorNum = RedStr, num = self.mData.otherEventRule[2]})
		end
	end

	conditionText:AddContentSizeFitter():SetLayoutHorizontal()
end

function _P.SetOwnStaffList(self,suitData,index)
	local contentTransform = self.mModule:Get("Content")
	contentTransform:DestroyChildren()
	self.index = index
	self.scroll.Inertia = false
	contentTransform.LocalPosition = Vector2(0,0)
	local staffTableDatas = _P.GetSortStaffs(self, MStaff.StaffTable, suitData)
	for k,v in ipairs(staffTableDatas) do
		self.mRawTableItems[v.id] = _P.OnCreateOwnItem(self,v,contentTransform,suitData,index)
	end
	
	contentTransform:AddOnTime(function()
		self.scroll.Inertia = true
		self.scroll.DecelerationRate = 0.135
	end,nil,0.001)
end

function _P.OnCreateOwnItem(self,data,contentTransform,suitData,index)
	local staff = {}
	local itemMoudle = JGuiManager.GetMoudle(contentTransform, "M_Adventure_Choose_Item", WindowType.UI, 0)

	local csvPerson = Csv.Personnel[data.id]
	local ImgIcon = itemMoudle:Get("Head")
	ImgIcon.SpriteName = csvPerson.asset

	itemMoudle:Get("HeadBox").SpriteName = MStaff.Color2Image[data.color]

	local TextLevel = itemMoudle:Get("number1")
	TextLevel.Text = Csv.Text("club_info_company") .. data.level
	local sendBtnText = itemMoudle:Get("C_Text")
	local sendBtn = itemMoudle:Get("C_Btn_b")
	sendBtn.SpriteName = "ty_024"
	sendBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10001)

		if _P.IsContains(self,data.id) then
			--召回
			_P.OnCallBackStaff(self,data,suitData)
			itemMoudle:Get("Tips").Activity = false
			sendBtnText.Text = Csv.Text("adventure_staff_send")
			sendBtn.SpriteName = "ty_024"
			_P.SetConfiromState(self)
		else
			-- 派遣
			local oldData = _P.IsItemFull(self, index)
			if oldData then
				_P.OnCallBackStaff(self, oldData.data, oldData.suitData)

				local oldItemModule = self.mRawTableItems[oldData.data.id].module
				if oldItemModule then
					oldItemModule:Get("Tips").Activity = false
					oldItemModule:Get("C_Text").Text = Csv.Text("adventure_staff_send")
					oldItemModule:Get("C_Btn_b").SpriteName = "ty_024"
				end
			end

			_P.OnClickSendItem(self,data,suitData,index)
			itemMoudle:Get("line1").Color = BLUE
			itemMoudle:Get("line2").Color = BLUE
			itemMoudle:Get("Tips").Color = BLUE
			itemMoudle:Get("Tips").Activity = true
			itemMoudle:Get("Tips").Text =Csv.Text("adventure_sended")
			sendBtnText.Text = Csv.Text("adventure_staff_callback")
			_P.SetConfiromState(self)
				sendBtn.SpriteName = "sh_032"
		end
		end, nil, 0.9)
	local TextName = itemMoudle:Get("name")
	TextName.Text = MStaff.GetStaffName(data.id)
	
	--TODO:资质图标
	_P.SetStaffItem(self,suitData,data,itemMoudle)
	local unSuit = itemMoudle:Get("Tips")
	unSuit.Text = Csv.Text("adventure_unsuit")

	if _P.CheckIsSuit(self,suitData,data) > 0 then
		unSuit.Activity = false
		ImgIcon.IsGray = false
		sendBtn.Activity = true
	else
		unSuit.Activity = true
		ImgIcon.IsGray = true
		sendBtn.Activity = false
		itemMoudle:Get("line1").Color = PINK
		itemMoudle:Get("line2").Color = PINK
	end
	
	local allattrText = itemMoudle:Get("number2")
	allattrText.Text = MStaff.GetAllAttr(data.id)
	itemMoudle:Get("combat").Text = Csv.Text("adventure_staff_allattr")

	if _P.IsContains(self,data.id) then
		--召回
		itemMoudle:Get("Tips").Activity = true
		itemMoudle:Get("line1").Color = BLUE
		itemMoudle:Get("line2").Color = BLUE
		itemMoudle:Get("Tips").Color = BLUE
		sendBtn.SpriteName = "sh_032"
		itemMoudle:Get("Tips").Text =Csv.Text("adventure_sended") 
		sendBtnText.Text = Csv.Text("adventure_staff_callback")
	else
		--派遣
		sendBtnText.Text = Csv.Text("adventure_staff_send")
	end

	-- 设置标签数据
	for i=1,MAX_SIGN_NUM do
		local signImg = itemMoudle:Get("Tab" .. i)
		signImg.Activity = false
	end

	local signList = csvPerson.labelImg
	for k,v in pairs(signList) do
		local signImg = itemMoudle:Get("Tab" .. k)
		signImg.Activity = true
		signImg.SpriteName = v
	end
	-- local signList = _P.SetSignLightState(csvPerson.judge, suitData, csvPerson.labelImg)
	-- for i,v in ipairs(signList) do
	-- 	local signImg = itemMoudle:Get("Tab" .. i)
	-- 	if signImg then
	-- 		signImg.Activity = true
	-- 		signImg.SpriteName = v.imgName
	-- 	end
	-- end
	itemMoudle:Get("TabRect").Activity = #signList ~= 0
	
	staff.module = itemMoudle
	return staff
end

function _P.SetSignLightState(showData, suitData, imgData)
	local hasData = _P.GetSuitData(suitData)
	local listData = {}
	for key,value in pairs(showData) do 
		if hasData ~= nil and next(hasData) ~= nil then
			local pictureName = imgData[key]
			for hasKey,hasValue in pairs(hasData) do
				if value == hasValue.val then
					listData[#listData + 1] = {imgName = pictureName}
					break
				end
			end
		end
	end

	return listData
end

function _P.GetSuitData(suitData)
	local listData = {}
	for k,v in pairs(suitData) do
		if v.type == 10 then
			listData[#listData + 1] = v
		elseif (v.type <= 4 and v.type >= 1) then
			listData[#listData + 1] = {type = v.type, val = v.type + 12}
		end
	end

	return listData
end

function _P.SetStaffItem(self,suitData,data,module)
	local suitType = 1
	for k,v in pairs(suitData) do
		suitType = v.type
		break
	end
	--如果没有配四种属性默认取第一种把
	if suitType > 4 then 
		suitType = MActivity.AdvReqTypeEnum.Gongguan
	end
	
	if suitType > 0 then
		module:Get("number2_0").Text = Csv.Text("adventure_staff_attr" .. suitType, {num = MStaff.GetAttrByType(data.id, suitType)})
	end

	local suitIcon2 = module:Get("icon2")
	local suitText2 = module:Get("number4")
	-- local bgImg = module:Get("numberBG4")
	if self.mData.otherEventRule ~= nil and self.mData.otherEventRule[1] ~= 0 and self.mData.otherEventRule[1] ~= suitType then
		local tastType = self.mData.otherEventRule[1]
		suitIcon2.Activity = true
		suitText2.Activity = true
		-- bgImg.Activity = true
		suitIcon2.SpriteName = AtriIconNames[tastType]
		suitText2.Text = Csv.Text("adventure_staff_attr" .. suitType, {num = MStaff.GetAttrByType(data.id, tastType)})
	else
		suitIcon2.Activity = false
		suitText2.Activity = false
		-- bgImg.Activity = false
	end
end

-- 派遣员工
function _P.OnClickSendItem(self,data,suitData,index)
	data.selectId = index
	_P.UpdateItem(self,suitData,data,index)
	table.insert(self.selectDataList, {data = data, suitData = suitData})
	_P.UpdateTips(self)
	_P.CheckTotalAtriIsShow(self)
end

-- 更新格子数据
function _P.UpdateItem(self,suitData,data,index)
	--重新刷空格子
	if data == nil then 
		local itemMoudle = self.mReqTableItems[index].module
		itemMoudle:Get("Icon").SpriteName = DEFAULT_ICON
		for i=1,3 do
			itemMoudle:Get("Z"..i..i).Activity = false
			itemMoudle:Get("Gou"..i).Activity = false
		end
		_P.SetReqDetail(self.mData.eventInfo[index].attrInfo,itemMoudle,nil)
	else
		local itemMoudle = self.mReqTableItems[index].module
		local csvPerson = Csv.Personnel[data.id]
		_P.SetReqDetail(suitData,itemMoudle,data)
		itemMoudle:Get("Icon").SpriteName = csvPerson.asset
	end
end

--召回员工
function _P.OnCallBackStaff(self,data,suitData)
	_P.UpdateItem(self,suitData,nil,data.selectId)
	data.selectId = nil
	_P.Remove(self,data)
	_P.UpdateTips(self)
	_P.CheckTotalAtriIsShow(self)
end

-- 移除员工
function _P.Remove(self,data)
	local index = 0
	for i=1, #self.selectDataList do
		if self.selectDataList[i].data.id == data.id then
			index = i
			break
		end
	end
	if index == 0 then return end
	table.remove(self.selectDataList, index)
end

--这个格子是否已经有人了
function _P.IsItemFull(self,index)
	for i=1,#self.selectDataList do
		if self.selectDataList[i].data.selectId == index then
			return self.selectDataList[i]
		end
	end
end

function _P.SetConfiromState(self)
	local light = #self.selectDataList == #self.mData.eventInfo
	if light then
		self.mModule:Get("StaffRect").LocalPosition = StaffRectPos[1]
		self.Top:DOAnchorPosY(TOP_BEGIN, 0.6):SetEase(CS.DG.Tweening.Ease.Linear)
		self.Buttom:DOAnchorPosY(BUTTOM_BEGIN, 0.4):SetEase(CS.DG.Tweening.Ease.Linear)
	end
	self.confirm.IsGray = not light
	self.confirm.RaycastTarget = light

	if light then
		local staffIds = {}
		table.sort(self.selectDataList, function(a, b)
			local aSelectId = a.data.selectId
			local bSelectId = b.data.selectId
			return aSelectId < bSelectId
		end)

		for k,v in pairs(self.selectDataList) do
			table.insert(staffIds, v.data.id)
		end

		CActivity.ReqAdvStaffOver(self.mData.taskIndex, staffIds, self.activityData.isSelectDown)
	else
		_P.SetProRewardData(self)
	end
end

function _P.IsCurContains(self,id,index)
	local isHasSend = false
	for i=1, #self.selectDataList do
		if self.selectDataList[i].data.id == id and self.selectDataList[i].data.selectId == index then
			isHasSend = true
			break
		end
	end
	return isHasSend
end

-- 是否已经派遣
function _P.IsContains(self,id)
	local isHasSend = false
	for i=1, #self.selectDataList do
		if self.selectDataList[i].data.id == id then
			isHasSend = true
			break
		end
	end
	return isHasSend
end

-- 更新选择员工提示
function _P.UpdateTips(self)
	self.selectTips.Activity = #self.selectDataList == 0
end

--界面构造
function _M:OnCreate(eventData, activityData)
	local module = self:CreateMoudle(self._RootNode, "M_Adventure_Xzyg")
	self.mModule = module

	local closeBtn = self.mModule:Get("C_Back_Btn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 1.2)
	self.mData = eventData
	self.selectDataList = {}
	self.mRawTableItems = {}
	self.mReqTableItems = {}
	local BtnRule = module:Get("C_Full_Help_Btn")
	BtnRule:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("URuleTips",Define.SysId.Adventure)
	end, nil, 1.2)

	self.activityData = activityData
	self.actId = activityData.actId
	self.taskId = self.mData.taskId

	local eventconf = Csv.AdventureMainEvent[self.mData.taskId]
	module:Get("C_Text_0").Text = Csv.Text("adventure_title")
	module:Get("Name").Text = eventconf.title
	module:Get("Info").Text = eventconf.desc
	module:Get("OpenText").Text = Csv.Text("adventure_staff_confirm")
	module:Get("BtnText22").Text = Csv.Text("adventure_back")
	module:Get("TjbtText").Text = Csv.Text("adventure_condition")
	module:Get("Consume").Text = Csv.Text("adventure_main_costRefresh")
	module:Get("gailv").Text = Csv.Text("adventure_box_proGet")

	self.scroll = module:Get("scrollView")
	self.DownRect = module:Get("BtnRect")
	self.DownRect.CachedTran:GetJTweener(POSY_ANIM):Play()
	self.DownBtn = module:Get("BtnColider")
	self.Top = module:Get("Anim")
	self.Buttom = module:Get("Anim2")
	self.confirm = module:Get("OpenBtn")
	self.confirm:AddOnButton(function(...)
		--确认选择判断选择人数够了没
		local lefttime = activityData.hotval - eventconf.costLucky
		if #self.selectDataList < #self.mData.eventInfo then
			CCommon.ShowError(Csv.Text("adventure_call_limit"))
		elseif lefttime < 0 then
			CCommon.ShowError(Csv.Text("adventure_main_limit"))
		else
			local staffIds = {}
			table.sort(self.selectDataList, function(a,b)
			local aSelectId = a.data.selectId
			local bSelectId = b.data.selectId
			return aSelectId < bSelectId
			end)
			for k,v in pairs(self.selectDataList) do
				table.insert(staffIds, v.data.id)
			end

			CActivity.ReqAdvPersonTask(self.mData.taskIndex, staffIds, self.activityData.isSelectDown)
		end
	end,nil,1.2)
	self.DownBtn.SpriteName = ""
	self.DownBtn:AddOnButton(function(...)
		self.mModule:Get("StaffRect").LocalPosition = StaffRectPos[1]
		self.Top:DOAnchorPosY(TOP_BEGIN, 0.6):SetEase(CS.DG.Tweening.Ease.Linear)
		self.Buttom:DOAnchorPosY(BUTTOM_BEGIN, 0.4):SetEase(CS.DG.Tweening.Ease.Linear)
	end,nil,1)

	local expText = self.mModule:Get("ExpText")
	local addExp = (eventData.isDown and 0) or eventconf.addExp
	expText.Text = Csv.Text("adventure_main_expTip", {num = addExp})
	-- local starBgImg = module:Get("StarBg")
	-- starBgImg.SpriteName = StarBgIcons[eventconf.star]

	for i=1,7 do
		module:Get("Star"..i).Activity = i <= eventconf.star
	end

	-- 设置类型图片
	local typeImg = module:Get("TypeImg")
	typeImg.SpriteName = MActivity.AdventureTaskNames[eventconf.taskType]

	_P.SetAskStaffList(self)
	_P.SetConfiromState(self)
	_P.CheckTotalAtriIsShow(self)

	local costStr = (eventconf.costLucky > activityData.hotval and 'adventure_person_red') or 'adventure_person_green'
	module:Get("AptiNum").Text = Csv.Text(costStr, {num = eventconf.costLucky})
	module:Get("AptiIcon").SpriteName = MActivity.AdventureConstData[12]
	module:Get("Name2").Text = Csv.Text("adventure_main_canGet")
end

-- 设置员工获取奖励概率及展示
function _P.SetProRewardData(self, data)
	local pointText = self.mModule:Get("PointText")
	local proText = self.mModule:Get("gailvNum")
	local currencyText = self.mModule:Get("OrderText")
	

	if data == nil then
		pointText.Text = Csv.Text("adventure_event_point", {num = 0})
		currencyText.Text = Csv.Text("adventure_event_currency", {num = 0})
		proText.Text = '0%'
	else
		local splitReward = MActivity.AdventureRewardSplit(data.reward)
		pointText.Text = Csv.Text("adventure_event_point", {num = splitReward.point})
		proText.Text = data.compatibility .. '%'
		currencyText.Text = Csv.Text("adventure_event_currency", {num = splitReward.currency})
	end
end

-- 员工都派遣后请求后端获取概率信息返回
function _R.GetProDataBack(self, data)
	_P.SetProRewardData(self, data)
end

return _M