local _M = {}

_M.ThemeType = {
	Hot = 0,
	New = 1,
	Time = 2,
}

_M.Data = nil
_M.IsOpened = false
_M.LoginData = nil
_M.IsOpenLogin = false

function _M.SetData(data)
	if nil ~= data then
		if nil ~= _M.Data then
			_M.Data = nil
		end
		_M.Data = {}
		_M.Data.pic = data.pic
		_M.Data.themes = nil
		if nil ~= data.themes then
			local themes = {}
			local index = 1
			for key, theme in pairs(data.themes) do
				local one = {}
				one.sort = theme.sort
				one.title = theme.title
				one.hotOrNew = theme.hotOrNew
				one.time = theme.time
				one.text = theme.text
				themes[index] = one
				index = index + 1
			end
			table.sort(themes, function (left, right)
				return left.sort < right.sort end)
			_M.Data.themes = themes
		end
	end
end

-- 设置登陆公告数据
function _M.SetLoginData(data)
	if data == nil then 
		_M.LoginData = nil
		return
	end
	if _M.LoginData == nil then
		_M.LoginData = {}
	end

	if data.title then
		_M.LoginData.title = data.title
	end
	if data.content then
		_M.LoginData.content = data.content
	end
end

function _M.Clean()
	_M.Data = nil
	_M.IsOpened = false
	_M.LoginData = nil
end

return _M