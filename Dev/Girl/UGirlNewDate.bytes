
local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire "Dev.Common.CCommon"
local MGirl = JRequire"Dev.Girl.MGirl"
local CGirl = JRequire"Dev.Girl.CGirl"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local UStoryMoudle = JRequire "Dev.Main.UStoryMoudle"
local UnityTime = CS.UnityEngine.Time

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local CURTAIN_SCALE_TYPE = Csv.Const(10219) --1帘子动 2帘子不动

local EFFECT_ID = 18
local GETBABYACTORID = 10024
local CRITACTORID = 10025
local ROOM_EFFECT = 10087

local MASK_TWEEN_NAME = "T_Girl_DateMask"
local DATE1_TWEENS_NAME = "T_Girl_Date1"
local DATE2_ROOM_HEART = "T_GirlRoom_Heart"

local Curtain_Right = "T_GirlDate_Curtain_Right"
local Curtain_Left = "T_GirlDate_Curtain_Left"
local Curtain_Top = "T_GirlDate_Curtain_Top"
local T_Curtain_Open = "T_Curtain_Open"
local T_Curtain_Close = "T_Curtain_Close"
local T_Curtain_Scale = "T_Curtain_Scale"
local T_Curtain_Scale_Once = "T_Curtain_Scale_Once"
local T_GirlDate_Red = "T_GirlDate_Red"
local T_GirlDate_Red_Open = "T_GirlDate_Red_Open"
local T_GirlDate_Red_Close = "T_GirlDate_Red_Close"

local GirlDate_Fly_Text = "GirlDate_Fly_Text"

function _M:BeforeDestroy()
	if self.mUStoryMoudle ~= nil then
		self.mUStoryMoudle:Destroy()
		self.mUStoryMoudle:delete()
		self.mUStoryMoudle = nil
	end 
end

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _R.GetDateEvent(self)
	
end

function _M:OnCreate(id)
	local moudle = self:CreateMoudle(self._RootNode,"M_Girl_UNewDate")
	self.mMoudle = moudle
	SoundMgr.DestroySystem()
	
	local nextMask = moudle:Get("Next")
	local mask = moudle:Get("mask")
	local date1 = moudle:Get("Date1")
	local date2 = moudle:Get("Date2")
	local date3 = moudle:Get("Date3")
	local curtain = moudle:Get("Curtain")
	local game = moudle:Get("game")
	local rightCurtain = moudle:Get("right")
	local leftCurtain = moudle:Get("left")
	local topCurtain = moudle:Get("top")
	local mainActorPanel = moudle:Get("ActorPanel")
	local redCurtain = moudle:Get("red")

	curtain.Activity = false
	game.Activity = false

	local maskTween = mask.CachedTran:GetJTweener(MASK_TWEEN_NAME)
	local date1Tween = date1.CachedTran:GetJTweener(DATE1_TWEENS_NAME)
	local date2Tween = date2.CachedTran:GetJTweener(DATE1_TWEENS_NAME)
	local date3Tween = date3.CachedTran:GetJTweener(DATE1_TWEENS_NAME)
	local rightTween = rightCurtain.CachedTran:GetJTweener(Curtain_Right)
	local leftTween = leftCurtain.CachedTran:GetJTweener(Curtain_Left)
	local topTween = topCurtain.CachedTran:GetJTweener(Curtain_Top)
	local redTween = redCurtain.CachedTran:GetJTweener(T_GirlDate_Red)

	self.mDate1 = date1
	self.mDate2 = date2
	self.mDate3 = date3
	self.mDate1Tween = date1Tween
	self.mDate2Tween = date2Tween
	self.mDate3Tween = date3Tween
	self.mGirlID = id
	self.mNext = nextMask
	self.mCurtain = curtain
	self.mGame = game
	self.mRightTween = rightTween
	self.mLeftTween = leftTween
	self.mTopTween = topTween
	self.mMainActor = mainActorPanel
	self.mRedTween = redTween
	self.girl_prefab = nil
	--
	--game
	local tips = moudle:Get("Tips")
	local gameTime = moudle:Get("Time")
	local scoreNum = moudle:Get("scoreNum")
	local scoreIcon = moudle:Get("score")
	local gamePanel = moudle:Get("gameRect")
	scoreIcon.Activity = false
	moudle:Get("Title").Text = Csv.Text("lastgirl_gametips")
	moudle:Get("text1").Text = Csv.Text("lastgirl_gametips1")
	moudle:Get("text2").Text = Csv.Text("lastgirl_gametips2")
	moudle:Get("C_text").Text = Csv.Text("lastgirl_gamestart")
	local gameBtn = moudle:Get("C_Btn_b")
	gameBtn:AddOnButton(function(...)
		tips.Activity = false
		scoreIcon.Activity = true
		CGirl.ReqDateGameStart(2,id)
		_P.PlayGame(self)
	end)
	self.mGameTime = gameTime
	self.mGameScore = scoreNum
	self.mGamePanel = gamePanel

	self.mCurtain = curtain
	self.mGame = game

	-------------------------
	curtain.Activity = false
	game.Activity = false
	local girlsData = Csv.Girl[id]
	self.mGirlData = girlsData
	--

	local openTab = {}
	for i = 1,3,1 do
		openTab[i] = i
	end
	self.mOpenTab = openTab

	local date2Moudle = nil
	local StoryBack = function()
		nextMask.Activity = true

		SoundMgr.Play(10001)
		SoundMgr.DestroySystem()

		if MGirl.FriendChange > 0 then
			CCommon.ShowError(Csv.Text("Girl_friendName")..Csv.Text("Girl_skill_add")..MGirl.FriendChange)
			MGirl.FriendChange = 0
		end

		if MGirl.isDateRoom == true then
			date2Moudle = _P.CreatDate_2(self)
		elseif MGirl.isBaby then
			_P.CreatDate_3(self)
		else
			self:Destroy() 
		end
	end
	self.mDate2Moudle = date2Moudle
	-----

	if MGirl.isDateCrit == true then
		SoundMgr.Play(10003)
		--暴击
		local nodeTrans = moudle:Get("EffectNode")
		CCommon.PlayEffectGod(nodeTrans,Define.SysId.Girl_Unlock)
	end
	
	local dateStoryId = 0
	if MGirl.isDateRoom then
		dateStoryId = girlsData.dateStory1[math.random(1,#girlsData.dateStory1)]
	else
		dateStoryId = girlsData.dateStory2[math.random(1,#girlsData.dateStory2)]
	end
	self.mUStoryMoudle =  UStoryMoudle.new(moudle.SelfRect,dateStoryId,StoryBack)

	nextMask:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		SoundMgr.DestroySystem()
		if MGirl.isDateRoom then
			_P.ShowRoom(self)
		elseif MGirl.isBaby then
			_P.CreatDate_3(self)
		else
			self:Destroy()
		end
		
	end,nil,1)

	maskTween:Play()
end

--开房
function _P.CreatDate_2(self)
	self.mOpenTab[2] = true
	self.mNext.Activity = false -- 关闭跳过
	--MGirl.isDateRoom = false
	_P.CloseOtherDate(self,2)

	local id = self.mGirlID
	local parent = self.mDate2
	local tweenr = self.mDate2Tween

	local data = MGirl.GetGirlData(id)
	local girlsData = Csv.Girl[id]

	local _moudle = self.mMoudle--JGuiManager.GetMoudle(parent,"M_Girl_date_2", WindowType.UI, 10)

	local bgSp = _moudle:Get("bg")
	local body = _moudle:Get("body") 
	local talkBg = _moudle:Get("DHK")
	local talk = _moudle:Get("DHKtext")
	bgSp.SpriteName = girlsData.datebg

	if self.girl_prefab ~= nil then
		self.girl_prefab:Destroy()
		self.girl_prefab = nil
	end
	if girlsData.prefab ~= nil and girlsData.prefab > 0 then
		self.girl_prefab = CCommon.CreateActor(body, girlsData.prefab, CCommon.ActorFieldMap.girl_home)
		body.SpriteName = ""
	else
		body.SpriteName = girlsData.dateIcon
	end	
	talk.Text = girlsData.meetTalk

	local showCuetain = function()
		self.mCurtain.Activity = true

		local CloseCurtain = function()

			local redCurtainClose = function()
				bgSp.SpriteName = girlsData.roombg

				if self.girl_prefab ~= nil then
					self.girl_prefab:Destroy()
					self.girl_prefab = nil
				end
				if girlsData.homePrefab ~= nil and girlsData.homePrefab > 0 then
					self.girl_prefab = CCommon.CreateActor(body, girlsData.homePrefab, CCommon.ActorFieldMap.girl_home)
					body.SpriteName = ""
				else
					body.SpriteName = girlsData.roomIcon
				end	
				talk.Text = girlsData.roomTalk		

				local RedCurtainOpen = function()
					local OpenCurtain = function()				
						self.mCurtain.Activity = false
						if girlsData.roomSound ~= nil then
							SoundMgr.PlaySystem(girlsData.roomSound)--播放语音
						end
								
						self:Unlock()
						self.mNext.Activity = true --

						--约会改版
						--------------约会改版，配置-------------------------------
						if CURTAIN_SCALE_TYPE == 2 then
							MGirl.isDateRoom = false
							if not MGirl.isRandomDate then
								CGirl.ReqDateGameStart(2,id)
								CGirl.ReqDateGameOver(2,id)
								_P.ShowRward()
							end
						end
					end

					self.mRightTween:SetWaitEventOnComplete(T_Curtain_Open, OpenCurtain)
					_P.OpenCurtain(self)
				end
				self.mRedTween:SetWaitEventOnComplete(T_GirlDate_Red_Open,RedCurtainOpen)
				
				_moudle.SelfRect:AddOnTime(function(...)
					self.mRedTween:Play(T_GirlDate_Red_Open)
				end,nil,0.5)
			end
			
			self.mRedTween:SetWaitEventOnComplete(T_GirlDate_Red_Close, redCurtainClose)
			self.mRedTween:Play(T_GirlDate_Red_Close)
		end
		self.mRightTween:SetWaitEventOnComplete(T_Curtain_Close, CloseCurtain)
	
		self:Lock()
		_P.CloseCurtain(self)
	end

	tweenr:SetOnComplete(function()
		showCuetain()
	end)

	if tweenr ~= nil then
		tweenr:Play()
	end

	return _moudle
end

function _P.ShowDate2Girl(self)
	local data2Moudle = self.mMoudle
	if data2Moudle ~= nil then
		local body = data2Moudle:Get("body") 
		local talkBg = data2Moudle:Get("DHK")

		body.Activity = true
		talkBg.Activity = true
	end
end

function _P.CloseDate2Girl(self)
	local data2Moudle = self.mMoudle
	if data2Moudle ~= nil then
		local body = data2Moudle:Get("body") 
		local talkBg = data2Moudle:Get("DHK")

		body.Activity = false
		talkBg.Activity = false
	end
end
--
function _P.ShowRoom(self)
	self.mNext.Activity = false -- 关闭跳过
	MGirl.isDateRoom = false

	self.mCurtain.Activity = true
	local CloseCurtain = function()

		local redCurtainClose = function()
			--播放特效
			self.mMainActor.Activity = true
			local roomEffect = CCommon.CreateEffect(self.mMainActor,ROOM_EFFECT)
			local EndScale = function()
				--self.mMainActor.Activity = false
				--随机约会
				if MGirl.isRandomDate then
					--_P.ShowDate2Girl(self)
					local RedCurtainOpen = function()
						local OpenCurtain = function()
							self.mNext.Activity = true -- 关闭跳过
						end
						self.mRightTween:SetWaitEventOnComplete(T_Curtain_Open, OpenCurtain)
						_P.OpenCurtain(self)
					end
					self.mRedTween:SetWaitEventOnComplete(T_GirlDate_Red_Open,RedCurtainOpen)
					self.mRedTween:Play(T_GirlDate_Red_Open)
				else
					self.mGame.Activity = true
				end
			end
	
			self.mRightTween:SetWaitEventOnComplete(T_Curtain_Scale, EndScale)
			_P.ScaleCurtain(self)

			self:Unlock()
		end
		self.mRedTween:SetWaitEventOnComplete(T_GirlDate_Red_Close, redCurtainClose)
		self.mRedTween:Play(T_GirlDate_Red_Close)
	end
	self.mRightTween:SetWaitEventOnComplete(T_Curtain_Close, CloseCurtain)

	self:Lock()
	_P.CloseCurtain(self)
end

--约会游戏
function _P.PlayGame(self)
	self.mIsGame = true

	local moudle = self.mMoudle
	local data = self.mGirlData
	local parent = self.mGamePanel
	local gameTime = self.mGameTime
	local score = self.mGameScore

	local gameLev = data.GirlGameLev
	local gameTab = {}
	local allTime = 0
	for k,v in pairs(gameLev)do
		local _time = Csv.GirlGameLev[v].lev_time
		local _itemlife = Csv.GirlGameLev[v].Obj_life
		allTime = allTime+ _time
		table.insert(gameTab,{lv = v,time = _time,life = _itemlife })
	end
	allTime = UnityTime.time + allTime
	gameTime.Text = Csv.Text("lastgirl_gametime",{time = LuaUtil.GetTimeHMS(allTime - UnityTime.time)})
	score.Text = MGirl.lastDateScore

	local changeLevelTime = UnityTime.time--allTime
	local showItemTime = 0

	local dateItemTab = {}
	local showDateItem = function()
		if UnityTime.time - showItemTime >= gameTab[1].life then
			showItemTime = UnityTime.time
			parent:DestroyChildren()
			dateItemTab =  _P.ShowDateItems(self,parent,gameTab[1].lv)
		end
	end

	showDateItem()
	moudle.SelfRect:AddOnUpdate(function()
		if allTime - UnityTime.time >= -0.01 then
			gameTime.Text = Csv.Text("lastgirl_gametime",{time = LuaUtil.GetTimeHMS(math.ceil(allTime - UnityTime.time))})
			
			--切换等级
			if UnityTime.time - changeLevelTime >= gameTab[1].time then
				changeLevelTime = UnityTime.time
				table.remove(gameTab,1)
				if #gameTab > 0 then
					for k,v in pairs(dateItemTab)do
						v.SelfRect:Destroy()
					end
					showDateItem()
				end
			else
				showDateItem()
			end
		else
			if self.mIsGame then
				gameTime.Text = Csv.Text("lastgirl_gametime",{time = LuaUtil.GetTimeHMS(0)})
				parent:DestroyChildren()
				_P.GameOver(self)
			end
		end
	end,nil,0.1)
end

function _P.ShowDateItems(self,parent,level)
	local dateItemTab = {}
	local data =  Csv.GirlGameLev[level]

	local num = data.Obj_num
	local itemPoxTab = {}

	for i = 1,num,1 do
		local index = math.random(1,#data.Obj_id)
		local itemId = data.Obj_id[index]

		local itemPox = _P.GetItemIndex(itemPoxTab)
		table.insert(itemPoxTab,itemPox)
		local item = _P.CreatDateItem(self,parent,itemId,itemPox)
		table.insert(dateItemTab,item)
	end

	return dateItemTab
end

function _P.GetItemIndex(indexTab)--x=1,y=2
	local isGet = false
	local pox = {}
	local getIndex = function()
		local _x = math.random(-2,2)
		local _y = math.random(-3,2)
	
		isGet = true
		pox = {x = _x, y =_y}
		for k,v in pairs(indexTab)do
			if v.x == _x and v.y == _y then
				isGet = false
			end
		end
	end
	while(isGet == false)
	do
		getIndex()
	end

	return pox
end

function _P.CreatDateItem(self,parent,id,pox)
	local data = Csv.GirlGameObj[id]
	local _moudle = JGuiManager.GetMoudle(parent, "M_Girl_Last_Date_Item", WindowType.Tips3, 10)
	_moudle.SelfRect.LocalPosition = Vector2(150*pox.x,150*pox.y)
	local addText = _moudle:Get("add")
	local rect = _moudle:Get("rect")
	local actorPanel = _moudle:Get("ActorPanel")
	local itemEffect = CCommon.CreateEffect(actorPanel,data.effect_id)

	addText.Text = "+"..data.score
	local addTween = addText.CachedTran:GetJTweener(GirlDate_Fly_Text)

	local isClick = false
	rect:AddOnButton(function(...)
		--发送消息
		if isClick == false then
			isClick = true
			CGirl.ReqDatePlayGame(2,self.mGirlID,id)

			_P.ClickDateItem(self,data.score)
			CCommon.CreateEffect(actorPanel,10076)

			--抖动
			_P.ScaleCurtainOnceTween(self)
			--飘字
			addTween:Play()

			_moudle.SelfRect:AddOnTime(function()
				_moudle.SelfRect.Activity = false
			end,nil,0.5)
		end
	end)
	
	return _moudle
end


function _P.ClickDateItem(self,score)
	local scoreText = self.mGameScore
	MGirl.lastDateScore = MGirl.lastDateScore +score
	scoreText.Text = MGirl.lastDateScore
end

function _P.GameOver(self)
	self.mIsGame = false
	self.mMainActor.Activity = false
	
	local RedCurtainOpen = function()
		local OpenCurtain = function()
			self:Unlock()
			self.mCurtain.Activity = false
			self.mGameTime.Activity = false
			self.mGameScore.Activity = false
			
	
			self.mNext.Activity = true -- 
			--奖励
			_P.ShowRward()
			_P.ShowDate2Girl(self)
			
		end
	
		self.mRightTween:SetWaitEventOnComplete(T_Curtain_Open, OpenCurtain)
	
		self:Lock()
		_P.OpenCurtain(self)
	end

	self.mRedTween:SetWaitEventOnComplete(T_GirlDate_Red_Open,RedCurtainOpen)
	self.mRedTween:Play(T_GirlDate_Red_Open)

	CGirl.ReqDateGameOver(2,self.mGirlID)
end

function _P.ShowRward()
	local score = MGirl.lastDateScore
	local rewardTab = Csv.GirlGameReward
	for k,v in pairs(rewardTab)do
		local stage = v.score_stage
		if score>= stage[1] and score<= stage[2] then
			local rewards = v.reward_1
			for k2,v2 in pairs(rewards)do
				local itemData = Csv.Item[v2[1]]
				CCommon.ShowError(itemData.name.."+"..v2[2])
			end

			MGirl.lastDateScore = 0
			return
		end
	end
end

-----------------

--生娃
function _P.CreatDate_3(self)
	self.mOpenTab[3] = true
	self.mNext.Activity = false -- 关闭跳过
	MGirl.isBaby = false
	self.mCurtain.Activity = false
	self.mGame.Activity = false
	_P.CloseOtherDate(self,3)

	SoundMgr.Play(10007)
	local id = self.mGirlID
	local parent = self.mDate3
	local tweenr = self.mDate3Tween

	local data = MGirl.GetGirlData(id)
	local girlsData = Csv.Girl[id]
	local babyData = MGirl.GetBabyDataByID(MGirl.newBabyID)
	
	local _moudle = JGuiManager.GetMoudle(parent,"M_Girl_date_3", WindowType.Tips3, 10)

	local bgSp = _moudle:Get("bg")
	local tips = _moudle:Get("text_0")
	local cancelText = _moudle:Get("C_text")
	local sureText = _moudle:Get("C_text_0")
	local title = _moudle:Get("title")
	local level = _moudle:Get("ZZText")

	--据说改成特效
	if babyData.gender == 1 then
		title.SpriteName = "mn_019"
	else
		title.SpriteName = "mn_020"
	end
	
	level.Text =  Csv.Const(10206)[babyData.IQ+1]

	tips.Text = Csv.Text("Girl_gotoBaby")--"是否立即前往查看婴儿"
	cancelText.Text = Csv.Text("common_cancel")--"取消"
	sureText.Text = Csv.Text("common_sure")--"确定"

	bgSp.SpriteName = girlsData.roombg

	local cancelBtn = _moudle:Get("C_Btn_e")
	cancelBtn:AddOnButton(function ()
		SoundMgr.Play(10001)
		MGirl.isBaby = false
		self:Destroy()
	end)

	local sureBtn = _moudle:Get("C_Btn_a")
	sureBtn:AddOnButton(function ()
		SoundMgr.Play(10001)
		MGirl.isBaby = false
		--WindowMgr.Create("UGirl",MGirl.TOGGLE_ID.BABY) 
		--parent.Activity = false
		WindowMgr.Create("UGirlBaby")
	end)

	if tweenr ~= nil then
		tweenr:Play()
	end

	-- 播放获得宝宝特效
	CCommon.CreateEffect(_moudle:Get("ActorPanel"), GETBABYACTORID)
end

function _P.CheckIsLastDate(self,index)
	local openTab = self.mOpenTab

	for k,v in pairs(openTab) do
		if k > index then
			if v == true then
				return false
			end
		end
	end
	return true
end

function _P.CloseOtherDate(self,index)

	local dateTab = {self.mDate1,self.mDate2,self.mDate3,self.mDate4}
	for k,v in pairs(dateTab) do 
		if k == index then
			v.Activity = true
		else
			v.Activity = false
		end
	end
end

function _P.OpenCurtain(self)
	self.mRightTween:Play(T_Curtain_Open)
	self.mLeftTween:Play(T_Curtain_Open)
	self.mTopTween:Play(T_Curtain_Open)
end

function _P.CloseCurtain(self)
	self.mRightTween:Play(T_Curtain_Close)
	self.mLeftTween:Play(T_Curtain_Close)
	self.mTopTween:Play(T_Curtain_Close)
end

function _P.ScaleCurtain(self)
	self.mRightTween:Play(T_Curtain_Scale)
	self.mLeftTween:Play(T_Curtain_Scale)
	self.mTopTween:Play(T_Curtain_Scale)
end

function _P.KillScaleCurtain(isCallback)
	self.mRightTween:DOKill(T_Curtain_Scale,isCallback)
	self.mLeftTween:DOKill(T_Curtain_Scale,isCallback)
	self.mTopTween:DOKill(T_Curtain_Scale,isCallback)
end

function _P.ScaleCurtainOnceTween(self)
	self.mRightTween:Play(T_Curtain_Scale_Once)
	self.mLeftTween:Play(T_Curtain_Scale_Once)
	self.mTopTween:Play(T_Curtain_Scale_Once)
end


return _M