-- 奇遇主界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire "Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local MBag = JRequire "Dev.Bag.MBag"
local MPlayer = JRequire "Dev.Player.MPlayer"
local MCommerce = JRequire "Dev.Commerce.MCommerce"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local MAX_EVENT = Csv.Const(20162)[1] 	 	-- 最大事件上限数量，6条
local MAX_GET = Csv.Const(20162)[5] 		-- 今日获得最大值（体力值上限）
local MAX_TODAYGET = Csv.Const(20162)[15] 	-- 今日获得最大值（体力值上限）
local MAX_TODAYFREE = Csv.Const(20162)[9] 	-- 今日免费刷新次数上限
local MAX_REFRESHNUM = Csv.Const(20162)[13]	-- 刷新次数上限
local QIYUCOIN = 34116						-- 奇遇币ID
local GRAY = Color(0/255, 0/255, 0/255, 140/255)
local OutBack = CS.DG.Tweening.Ease.OutBack
local MOUDLE_FADEOUT = "T_MOUDLE_FADEOUT"
local MOUDLE_FADEIN = "T_MOUDLE_FADEIN"
local LEVEL_UP_TWEEN = "T_Adventure_UpTween"
local StarUpActorId = 10080
local LevelUpActorId = 10113
local GetActorId = 10006
local TouYin = 10183
local FightStateIcons = {"shijiantu_1","shijiantu_2"}
local FirstLevelId = 1
local IconBoxBgIcons = {"qy_020_1", "qy_020_2", "qy_020_3"
					,"qy_020_4", "qy_020_5", "qy_020_6","qy_020_7"}
local StarBoxBgIcons = {"qy_020_1_2", "qy_020_2_2", "qy_020_3_2"
					,"qy_020_4_2", "qy_020_5_2", "qy_020_6_2","qy_020_7_2"}


function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end


function _P.SetView(self)
	_P.SetListData(self, true)
	_P.SetCompanyData(self)
	
	for k,v in pairs(self.mRawTableItems) do
		local itemRect = v.module
		if itemRect ~= nil then
			local tween = itemRect.SelfRect.CachedTran:GetJTweener(MOUDLE_FADEIN)
			tween:Play()
		end
	end
end

--设置公司数据（阶级、等级、进度条）
function _P.SetCompanyData(self) 
	local curLevelConf = Csv.AdventureLevel[self.mData.companyLevel]
	local isMax = self.mData.companyLevel >= #Csv.AdventureLevel

	if curLevelConf ~= nil then
		self.mModule:Get("Icon").SpriteName = curLevelConf.icon
		self.mModule:Get("LevelText").Text = curLevelConf.id

		if self.IsPlayBloodAnim then
			self.slider:DOKill()
			local tweenBlood = self.slider:DOFillAmount(1, 0.5)
			tweenBlood:OnComplete(function(...)
				local fillAmount = (isMax and 1) or (self.mData.exp / (curLevelConf.needExp or 0))
				self.mSliderText.Text = tostring(math.ceil(math.min(100, fillAmount * 100))) .. '%'

				self.slider.FillAmount = 0
				self.slider:DOKill()
				self.slider:DOFillAmount(fillAmount, 0.3)
			end)

			self.IsPlayBloodAnim = false
		else
			local fillAmount = (isMax and 1) or (self.mData.exp / (curLevelConf.needExp or 0))
			self.mSliderText.Text = tostring(math.ceil(math.min(100, fillAmount * 100))) .. '%'
			self.slider.FillAmount = fillAmount
		end
	end

	local expNumText = self.mModule:Get("ExpNum")
	expNumText.Text = self.mData.hotval

	local todayNumText = self.mModule:Get("ExpNum2")
	todayNumText.Text = self.mData.todayLucky .. '/' .. MAX_TODAYGET
	todayNumText.Color = (self.mData.todayLucky >= MAX_TODAYGET and Color.red) or Color.white
end

--刷新中间事件格子
function _P.SetListData(self, isSetAlpha)
	local contentTransform = self.mModule:Get("Content")
	contentTransform:DestroyChildren()

	self.eventTableDatas = _P.GetSortList(self)
	for k,v in pairs(self.eventTableDatas) do
		self.mRawTableItems[v.taskIndex] = _P.OnCreateItem(self, v, contentTransform, isSetAlpha)
	end
end

function _P.GetSortList(self)
	local index = 1
	local personList = {}
	for k,v in pairs(self.mData.personalTasklist) do
		if self.mData.state.lefttime > HeartBeat.ServSecond() then
			personList[index] = v
			index = index + 1
		end
	end
	table.sort(personList,function(a,b)
		return a.taskIndex < b.taskIndex
	end)

	return personList
end

--更新事件
function _R.UpdateEvent(self,data)
	self.mData = MActivity.GetFromId(self.ActId)
	-- 现在个人事件更新会走完成个人事件那边，这边就不需要再刷一遍数据了，by:pyh
	_P.SetListData(self)
	_P.SetNoneText(self)
end

--更新个人事件数据,isShowAnim是否播放消失出现动画，by:pyh
function _R.UpdateOwnData(self, data, isShowAnim)
	if self.mData.companyLevel ~= data.oldCompanyLevel then
		_P.PlayLevelUpAnim(self, data, function( ... )
			_P.UpdateData(self, isShowAnim)
			self:Unlock()

			-- 弹框提示，是否需要刷新界面
			local isDown = _P.GetIsDownState(self, data.personalTasklist)
			if data.personalTasklist == nil or isDown then
				CCommon.CheckTips(function(isSure, rg)
					if isSure == true then
						CActivity.ReqRefreshTask(self.mData.isSelectDown, true)
					end
				end, {content = Csv.Text("adventure_main_levelUpShow")})
			end
		end)
	else
		_P.UpdateData(self, isShowAnim)
		if data.personalTasklist ~= nil then
			_P.SetGirlTalkText(self, data.personalTasklist)
		end
		_P.SetCompanyLevelData(self)
	end
end


function _P.UpdateData(self, isShowAnim, isNotSetData)
	if not isNotSetData then
		self.mData = MActivity.GetFromId(self.ActId)
		_P.SetCompanyData(self)
	end

	if isShowAnim then
		self:Lock()
		self.RefreshBtn.RaycastTarget = false
		for k,v in pairs(self.mRawTableItems) do
			local itemRect = v.module
			if itemRect ~= nil then
				local tween = itemRect.SelfRect.CachedTran:GetJTweener(MOUDLE_FADEOUT)
				tween:Play()
			end
		end
	
		self.mModule.SelfRect:AddOnTime(function()
			_P.SetListData(self)

			for k,v in pairs(self.mRawTableItems) do
				local itemRect = v.module
				if itemRect ~= nil then
					local tween = itemRect.SelfRect.CachedTran:GetJTweener(MOUDLE_FADEIN)
					tween:Play()
				end
			end
		end, nil, 1)

		self.mModule:Get("Content"):AddOnTime(function()
			self:Unlock()
			self.RefreshBtn.RaycastTarget = true
		end, nil, 1.5)
	else
		_P.SetListData(self)
	end
end

--红点
function _R.UpdateRed(self)
	self.RankRedPoint.Activity = MActivity.AdventureRankRed
	self.BossRedPoint.Activity = MActivity.AdventureShopRed and MCommerce.IsJoinCommerce()
	self.AchieveRedPoint.Activity = MActivity.AdventureAchieveRed
	_P.SetGirlBossTalkText(self)
end

--创建格子
function _P.OnCreateItem(self,data,contentTransform,isSetAlpha)
	local event = {}
	local itemMoudle = JGuiManager.GetMoudle(contentTransform, "M_Adventure_MainItem", WindowType.UI, 0)
	--正常格子
	if data.taskId > 0 then
		local csvEvent = Csv.AdventureMainEvent[data.taskId]
		itemMoudle:Get("Img").SpriteName = MActivity.AdventureTaskNames[csvEvent.taskType]

		local ImgIcon = itemMoudle:Get("iCON")
		local qualityIcon = itemMoudle:Get("OutBox")
		local BlackRect =  itemMoudle:Get("Black")
		local TapImg = itemMoudle:Get("Tab")
		ImgIcon:AddOnButton(function ( ... )
			SoundMgr.Play(10001)
			_P.OnClickItem(self, data, self.mData, csvEvent.taskType)
		end, nil, 0.9)
		qualityIcon.SpriteName = IconBoxBgIcons[csvEvent.star]

		itemMoudle:Get("Star").SpriteName = StarBoxBgIcons[csvEvent.star]

		local nameText = itemMoudle:Get("Tips")
		nameText.Text = csvEvent.title

		itemMoudle:Get("Jiangjitext").Text = Csv.Text("adventure_main_jiangji")
		ImgIcon.SpriteName = csvEvent.icon
		-- 0:未挑战,1:挑战中,2:已完成
		if data.taskState == 0 then
			-- iconBtn.IsGray = false
			ImgIcon.RaycastTarget = true
			BlackRect.Activity = false
		elseif data.taskState == 1 then
			-- iconBtn.IsGray = false
			BlackRect.Activity = true
			ImgIcon.RaycastTarget = true
			TapImg.SpriteName = FightStateIcons[1]
		elseif data.taskState == 2 then
			-- iconBtn.IsGray = true
			BlackRect.Activity = true
			ImgIcon.RaycastTarget = false
			TapImg.SpriteName = FightStateIcons[2]
		end

		local lowRect = itemMoudle:Get("Jiangji")
		lowRect.Activity = (data.isDown or false)

		if isSetAlpha then
			itemMoudle.SelfRect:AddCanvasGroup().alpha = 0
		end
	end

	event.module = itemMoudle
	return event
end

function _P.OnClickItem(self, data, activityData, taskType)
	if data ~= nil then
		if self.mData.state.lefttime <= HeartBeat.ServSecond() then
			CCommon.ShowError(Csv.Text("timelimit_close"))
		else
			if taskType == MActivity.AdventureTaskType.Event then
				WindowMgr.Create("UAdventureStaff", data, activityData)
			elseif taskType == MActivity.AdventureTaskType.Box then
				WindowMgr.Create("UAdventureBoxPanel", data, activityData.hotval, activityData.isSelectDown)
			elseif taskType == MActivity.AdventureTaskType.PersonBoss then
				WindowMgr.Create("UAdventurePersonBoss", data, activityData.hotval, activityData.isSelectDown)
			elseif taskType == MActivity.AdventureTaskType.GangBoss then
				WindowMgr.Create("UAdventureGangBoss", data, activityData.hotval, activityData.isSelectDown)
			end
		end
	end
end

function _P.SetNoneText(self)
	self.mModule:Get("None").Activity = #_P.GetSortList(self) <= 0 and self.mData.state.lefttime <= HeartBeat.ServSecond()
end


--界面构造
function _M:OnCreate(...)
	local module = self:CreateMoudle(self._RootNode, "M_Adventure_Main")
	self.mModule = module

	local closeBtn = self.mModule:Get("C_Back_Btn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)

		if self.FirstSelect ~= self.mData.isSelectDown then
			CActivity.ReqSubLevel(self.mData.isSelectDown, false)
		end

		self:Destroy()
	end, nil, 1.2)
	local BtnRule = module:Get("C_Full_Help_Btn")
	BtnRule:AddOnButton(function ( ... )
		SoundMgr.Play(10001)
		WindowMgr.Create("URuleTips",Define.SysId.Adventure)
		end, nil, 1.2)
	self.ActId = 40000
	local data = MActivity.GetListFromType(Define.ActivityType.Adventure)
	if data ~= nil then
		for k,v in pairs(data) do
			self.ActId = k
			break
		end
	else
		error("Advanture info is nil")
		return
	end
	self.mData = data[self.ActId]
	local state = self.mData.state

	local adventureConf = Csv.Adventure[self.ActId]
	if not adventureConf then 
		error("adventure config is nil")
		return 
	end
	self.adventureConf = adventureConf
	
	self.mRawTableItems = {}
	self.mSliderText = module:Get("SliderText")
	module:Get("C_Text_0").Text = adventureConf.title
	-- module:Get("C_text_0").Text = Csv.Text("adventure_score_shop")
	module:Get("None").Text = Csv.Text("err_charity_settle_time")
	module:Get("LuckText").Text = Csv.Text("adventure_main_compangLv")
	module:Get("ExpText2").Text = Csv.Text("adventure_main_todayGet")
	module:Get("ExpText").Text = Csv.Text("adventure_main_Get")

	-- 奇遇体力图标
	module:Get("ExpIcon").SpriteName = MActivity.AdventureConstData[12]
	module:Get("ExpIcon2").SpriteName = MActivity.AdventureConstData[12]

	self.sliderBtn = module:Get("sliderBg")
	self.slider = module:Get("Fill")
	self.rankBtn = module:Get("AchieveBtn")
	self.gangBossBtn = module:Get("BossBtn")
	self.exchangeBtn = module:Get("ShopBtn")
	self.LkBtn = module:Get("LuckIcon")
	self.BossRedPoint = module:Get("sport1")
	self.RankRedPoint = module:Get("sport3")
	self.AchieveRedPoint = module:Get("AchieveActorPanel")
	self.AchieveRedPoint.Activity = false
	self.FreeText = module:Get("FreeText")
	self.FreeText.Text = Csv.Text("adventure_main_free")
	self.BlankBgImg = module:Get("BlankBg")
	self.BlankBgImg.Activity = false
	CCommon.CreateEffect(self.AchieveRedPoint, GetActorId)

	self.rankBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		--打开排行榜界面
		if HeartBeat.ServSecond() >= self.mData.state.endTime then
			CCommon.ShowError(Csv.Text("timelimit_close"))
		else
			WindowMgr.Create("UAdventureRank", self.mData)
		end
	end, nil, 0.9)

	self.exchangeBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)
		WindowMgr.Create("UAdventureExchangePanel", self.mData)
	end, nil, 0.9)
	
	self.gangBossBtn:AddOnButton(function(...)
		SoundMgr.Play(10001)

		--打开商会BOSS列表
		if MCommerce.IsJoinCommerce() then
			WindowMgr.Create("UAdventureCompanyEnemy", self.ActId, self.mData)
		else
			CCommon.ShowError(Csv.Text("adventure_gang_tips"))
		end
	end, nil, 0.9)

	local achievementBtn = module:Get("Icon")
	achievementBtn:AddOnButton(function( ... )
		SoundMgr.Play(10001)

		-- 打开奇遇成就界面
		WindowMgr.Create("UAdventureAchievementPanel", self.mData)
	end, nil, 0.9)

	local refreshBtn = module:Get("RefreshBtn")
	refreshBtn:AddOnButton(function( ... )
		SoundMgr.Play(10001)
		_P.OnRefreshTask(self)
	end, nil, 0.9)
	self.RefreshBtn = refreshBtn

	_P.SetView(self)
	--红点初始化
	_R.UpdateRed(self)
	_P.SetNoneText(self)

	-- 设置下方数据

	local actorPanel = self.mModule:Get("StarUpActorPanel")
	CCommon.CreateEffect(actorPanel, TouYin)

	self.FirstSelect = self.mData.isSelectDown

	--筛选
	local selectOrderText = module:Get("OrderIngText")
	local orderAword = module:Get("Aword")
	local orderRect = module:Get("OrderBG")
	self.OrderRect = orderRect
	self.mSelectOrdderText = selectOrderText
	self.OrderAword = orderAword

	_P.SetCompanyLevelData(self)

	module:Get("OrderIng"):AddOnButton(function()
		if self.mData.companyLevel == FirstLevelId then
			CCommon.ShowError(Csv.Text("adventure_main_cannotLow"))
			return
		end

		if orderRect.Activity then
			orderRect.Activity = false
			orderAword.LocalRotation = CS.UnityEngine.Quaternion(0, 0, 180, 1)
		else
			orderRect.Activity = true
			orderAword.LocalRotation = CS.UnityEngine.Quaternion(0, 0, 0, 1)
		end
	end, nil, 0.9)

	for i = 1,2 do
		local orderBtn  = module:Get("order" .. i)
		local orderText = module:Get("ordertext" .. i)
		orderText.Text = Csv.Text("staff_ji", {num = self.mData.companyLevel - 2 + i})

		orderBtn:AddOnButton(function()
			orderRect.Activity = false
			orderAword.LocalRotation = CS.UnityEngine.Quaternion(0, 0, 180, 1)

			self.mData.isSelectDown = (i == 1 and true) or false
			_P.SetCompanyLevelData(self)
			_P.SetGirlTalkText(self, self.eventTableDatas)
			_P.SetGirlBossTalkText(self)
		end, nil, 1.2)
	end
	
	module:Get("Tips2").Text = Csv.Text("adventure_main_costRefresh")
	module:Get("Tips4").Text = Csv.Text("adventure_main_refreshTip")

	_P.SetRefereshCost(self)
	_P.SetGirlTalkText(self, self.eventTableDatas)
end


function _P.SetGirlTalkText(self, listData)
	local module = self.mModule
	local talkText1 = module:Get("DHKText1")
	local isDown = self.mData.isSelectDown == true
	local isSelectDown = _P.GetIsDownState(self, listData)

	if isSelectDown then
		talkText1.Text = Csv.Text("adventure_main_refreshDown")
	elseif isDown then
		talkText1.Text = Csv.Text("adventure_main_down")
	else
		talkText1.Text = Csv.Text("adventure_main_welcome")
	end
end


function _P.SetGirlBossTalkText(self)
	local module = self.mModule
	local talkRect2 = module:Get("DHK2")
	local talkText2 = module:Get("DHKText2")
	local isHasBoss = self.BossRedPoint.Activity
	if isHasBoss then
		talkText2.Text = Csv.Text("adventure_main_hasBoss")
		talkRect2.Activity = true
	else
		talkRect2.Activity = false
	end
end


function _P.GetIsDownState(self, listData)
	local isDown = false
	if listData ~= nil and next(listData) ~= nil then
		for k,v in pairs(listData) do
			if v.isDown then
				isDown = true
				break
			end
		end
	end

	return isDown
end


function _P.SetCompanyLevelData(self)
	local isFirst = self.mData.companyLevel == FirstLevelId
	if not isFirst and self.mData.isSelectDown then
		self.mSelectOrdderText.Text = Csv.Text("staff_ji", {num = self.mData.companyLevel - 1})
	else
		self.mSelectOrdderText.Text = Csv.Text("staff_ji", {num = self.mData.companyLevel})
	end
end


function _P.SetRefereshCost(self)
	local vipLv = MPlayer.GetVip()
	local vipData = Csv.Vip[vipLv]
	local isFree = MAX_TODAYFREE + vipData.adventureFreeRefresh > self.mData.refreshTimes
	local costText = self.mModule:Get("CostNum")
	local cousmeRect = self.mModule:Get("Tips2")
	if isFree then
		self.FreeText.Activity = true
		cousmeRect.Activity = false
	else
		self.FreeText.Activity = false
		cousmeRect.Activity = true
		local costNum = _P.GetNeedCostNum(self, MAX_TODAYFREE + vipData.adventureFreeRefresh)
		costText.Text = costNum
	end
end


function _P.GetNeedCostNum(self, todayFreeNums)
	local adventureConf = Csv.Adventure[self.ActId]
	if adventureConf == nil then
		return 0
	end

	local nextCount = (self.mData.refreshTimes - todayFreeNums) + 1
	for k,v in pairs(adventureConf.refreshTaskCost) do
		if nextCount >= v[1] and nextCount <= v[2] then
			return v[3]
		end
	end

	return 0
end


function _P.OnRefreshTask(self)
	local vipLv = MPlayer.GetVip()
	local vipData = Csv.Vip[vipLv]
	local isFree = MAX_TODAYFREE + vipData.adventureFreeRefresh > self.mData.refreshTimes
	local leaveNum = MAX_REFRESHNUM + vipData.adventureTaskRefresh - self.mData.refreshTimes
	if leaveNum <= 0 then
		CCommon.ShowError(Csv.Text("adventure_refresh_notLeave"))
	else
		local costNum = _P.GetNeedCostNum(self, MAX_TODAYFREE + vipData.adventureFreeRefresh)
		local hasNum = MBag.GetItemNum(Define.AssetsType.Gold)
		if isFree or hasNum >= costNum then
			CActivity.ReqRefreshTask(self.mData.isSelectDown, false)
		else
			CCommon.ShowError(Csv.Text("err_shop_buytype"))
		end
	end
end


-- 刷新任务返回
function _R.OnRefreshCallBack(self, data)
	CCommon.ShowError(Csv.Text("adventure_main_refreshSuccess"))
	self.mData = MActivity.GetFromId(self.ActId)
	_P.UpdateData(self, true, true)

	-- 更新提示框
	_P.SetGirlTalkText(self, data.personalTasklist)
	if data.isLevelUpRefresh then
		_P.SetCompanyLevelData(self)
	end

	-- 刷新下方数据
	_P.SetRefereshCost(self)
end


-- 幸运值发生变化
function _R.OnUpdateHotValData(self, data)
	self.mData.hotval = data.lucky

	local expNumText = self.mModule:Get("ExpNum")
	expNumText.Text = self.mData.hotval

	local todayNumText = self.mModule:Get("ExpNum2")
	todayNumText.Text = self.mData.todayLucky .. '/' .. MAX_TODAYGET
	todayNumText.Color = (self.mData.todayLucky >= MAX_TODAYGET and Color.red) or Color.white
end


function _R.OnUpdateHotVal(self, data)
	self.mData.hotval = data.hotval
	self.mData.exp = data.exp
	self.mData.companyLevel = data.companyLevel

	_P.SetCompanyData(self)
end


-- 升级、升阶动画
function _P.PlayLevelUpAnim(self, data, callBack)
	local module = self.mModule
	
	self:Lock()
	self.BlankBgImg.Activity = true
	local levelPanel = module:Get("LevelUpActorPanel")
	CCommon.CreateEffect(levelPanel, LevelUpActorId)

	self.BlankBgImg:AddOnTime(function()
		-- 播放中间往上飘动画，更改等级文本
		local animRect = module:Get("AnimIcon")
		local animLevelText = module:Get("AnimLevelText")
		local levelConf = Csv.AdventureLevel[self.mData.companyLevel]
		animRect.SpriteName = levelConf.icon
		animLevelText.Text = levelConf.id

		self.IsPlayBloodAnim = true
		if self.UpTween == nil then
			local upTween = animRect.CachedTran:GetJTweener(LEVEL_UP_TWEEN)
			self.UpTween = upTween
		end

		-- 重新设置筛选按钮数据
		for i = 1,2 do
			local orderBtn  = module:Get("order" .. i)
			local orderText = module:Get("ordertext" .. i)
			orderText.Text = Csv.Text("staff_ji", {num = self.mData.companyLevel - 2 + i})

			orderBtn:AddOnButton(function()
				self.OrderRect.Activity = false
				self.OrderAword.LocalRotation = CS.UnityEngine.Quaternion(0, 0, 180, 1)

				self.mData.isSelectDown = (i == 1 and true) or false
				_P.SetCompanyLevelData(self)
				_P.SetGirlTalkText(self, self.eventTableDatas)
				_P.SetGirlBossTalkText(self)
			end, nil, 1.2)
		end
		_P.SetCompanyLevelData(self)
		_P.SetGirlTalkText(self, self.eventTableDatas)
		_P.SetGirlBossTalkText(self)

		self.UpTween:SetOnComplete(function()
			self.BlankBgImg.Activity = false
			if callBack then
				callBack()
			else
				self:Unlock()
			end

			if self.UpTween ~= nil then
				self.UpTween:Restore()
			end
		end)
		
		self.UpTween:Play()
		levelPanel:DestroyChildren()
	end, nil, 1.3)
end


return _M