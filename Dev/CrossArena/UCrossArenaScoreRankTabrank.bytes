-------------------------
---跨服排行榜积分排行前50名
-------------------------
local JGuiManager = CS.JGui.JGuiManager
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local MRank = JRequire "Dev.Rank.MRank"
local CPlayer = JRequire "Dev.Player.CPlayer"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local RankVertical = JRequire "Dev.Common.RankVertical"

local _M = Class()
local _P = {}

--分界线
local BOUNDARY_NUM = 16

local ItemWidth = 724
local ItemHeight = 56
local Space = 10
local PageNum = 15
local PageHeight = 710


--界面构建
function _M:ctor(parent)
	self._RootNode = parent
	local moudle = JGuiManager.GetMoudle(self._RootNode, "M_CrossSports_Matching_Ranking_Tab1", WindowType.UI, 0)
	self.mMoudle = moudle

	self.mList = {}

	moudle:Get("TabText1").Text = Csv.Text("rank_rank")
	moudle:Get("TabText2").Text = Csv.Text("rank_name")
	moudle:Get("TabText3").Text = Csv.Text("rank_mode")
	moudle:Get("TabText4").Text = Csv.Text("club_exchange_fenshu")

	_P.OnCreateList(self)
end

function _P.OnCreateList(self)
	local rankinfo = MRank.AllRankTable[Define.CrossRankType.CrossArena]
	if rankinfo ~= nil then
		local list = _P.GetSortList(rankinfo.ranklist)
		self.mList = list
		if #self.mList > BOUNDARY_NUM then
			table.insert(self.mList, BOUNDARY_NUM + 1, {})
		end
		local content = self.mMoudle:Get("content")
		content:DestroyChildren()
		local scroll = self.mMoudle:Get("scrollView")
		if self.scrollController ~= nil then
			self.scrollController:delete()
			self.scrollController = nil
		end
		local scrollController = RankVertical.new(scroll,content,"M_CrossSports_Matching_RankingA",function(index,value,moudle)_P.ScrollCallBack(self,index,value,moudle)end)
		scrollController:CreateScroll(PageNum,PageHeight,ItemWidth,ItemHeight,Space,list)
		self.scrollController = scrollController
	end
end

function _P.ScrollCallBack(self,index,value,moudle)
	if moudle ~= nil then
		if index == BOUNDARY_NUM + 1 then
			if moudle.SelfRect.SpriteNameAutoScale ~= "KFBG_011" then
				moudle.SelfRect.SpriteNameAutoScale = "KFBG_011"
			end
			moudle:Get("rank").Text = ""
			moudle:Get("value").Text = ""
			moudle:Get("name").Text = ""
			moudle:Get("level").Text = ""
			moudle:Get("title").Activity = false
		else
			if self.itemSizeDelta == nil then
				self.itemSizeDelta = moudle.SelfRect.CachedTran.sizeDelta
			end
			if moudle.SelfRect.SpriteName ~= "dl_022" then
				moudle.SelfRect.SpriteName = "dl_022"
				moudle.SelfRect.CachedTran.sizeDelta = self.itemSizeDelta
			end
			
			if value.rank > 3 then
				moudle:Get("rank").Text = value.rank
			end
			moudle:Get("name").Text = value.name
			--moudle:Get("level").Text = Csv.Company[value.level].name
			_P.SetLevelAndTitle(value, moudle)
			moudle:Get("value").Text = value.value
			
			moudle.SelfRect:AddOnButton(function(...)
				SoundMgr.Play(10001)
				CPlayer.LookPlayerByServerID(value.playerid, value.serverid)
			end,nil,1)
		end
		moudle.SelfRect.LocalPosition = _P.GetPos(self,index)
	end
end

function _P.GetPos(self,index)
	local allNum = #self.mList
	local yPos = ((ItemHeight + Space) * allNum - Space)/2 - ((index - 1) * (ItemHeight + Space) + ItemHeight/2)
	return Vector2(0,yPos)
end

function _P.SetLevelAndTitle(data, moudle)
	local str = Csv.Company[data.level].name
	local levelText = moudle:Get("level")
	local title = moudle:Get("title")
	
	if data.titleid ~= nil and data.titleid > 0 then
		--兼容没有配置称号图标, 使用文本称号显示
		local fashionData = Csv.Title[data.titleid]
		if fashionData.rankIcon then
			title.Activity = true
			title.SpriteName = fashionData.rankIcon
			levelText.Text = ""
		elseif fashionData.name then
			title.Activity = false
			levelText.Text = fashionData.name
		end
	else
		levelText.Text = str
		title.Activity = false
	end
end

function _P.GetSortList(list)
	local sortList = {}
	if list ~= nil then
		for k,v in pairs(list) do
			table.insert(sortList,v)
		end
		table.sort(sortList,function(a,b)return _P.SortRank(a,b)end)
	end
	return sortList
end

function _P.SortRank(a,b)
	return a.rank < b.rank
end

function _M:RefreshData()
	_P.OnCreateList(self)
end

function _M:Destroy()
	local moudle = self.mMoudle
	if moudle ~= nil then
		moudle:Destroy()
	end

	if self.scrollController ~= nil then
		self.scrollController:delete()
		self.scrollController = nil
	end
end

return _M