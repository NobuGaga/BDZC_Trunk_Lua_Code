-- 奇遇人物表现界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire "Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MActivity = JRequire "Dev.Activity.MActivity"
local CActivity = JRequire "Dev.Activity.CActivity"
local HeartBeat = JRequire "Dev.Player.HeartBeat"
local MBag = JRequire "Dev.Bag.MBag"
local JTweenerManager = CS.JTween.JTweenerManager
local OutBack = CS.DG.Tweening.Ease.OutBack
local BGMUSIC = 121

local _M = Class(WindowBase)
local _P = {}
local _R = {}

local ANIM_TIME = 0.2
local BEGIN_POSX = -753
local END_POSX = -71
local ANIM_TIME = 1 --10%的速度

function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _M:EndDestroy( ... )
	if self.OnCloseCall ~= nil then
		self.OnCloseCall()
	end
end

--聊天气泡动画
function _P.PopAnim(self,isLeft)
	local isLeft = not isLeft
	self.qipao:AddOnTime(function ()
		local randonSeed
		if isLeft then
			randonSeed = math.random(1,2)
		else
			randonSeed = math.random(3,4)
		end
		local img = self.mModule:Get("QIPAO"..randonSeed)
		img.Alpha = 1
		img.LocalScale = Vector3.zero
		img:DOScale(1, 0.3):OnComplete(function()
			img:DOFade(0, 0.3)
		end)
		_P.PopAnim(self,isLeft)
	end, nil, 0.6)
end

--判断当前进度
function _P.JudegeIsEnd(self)
	if self.target < self.mData.compatibility then
		self.startVal = self.target
		self.target = _P.GetNextTarget(self)
		return false
	else
		return true
	end
end

--开始动画
function _P.OnInitAnim(self,start,target)
	self.qipao.Activity = false
	local animTime = (target - start)/10 * ANIM_TIME
	animTime = 1
	local fill = math.min(1, target / 100)
	self.slider:DOFillAmount(fill, animTime)
	local targetInt = math.ceil(target)
	local t = JTweenerManager.IntTween(start, targetInt, animTime, function(value)
		self.sliderText.Text = Csv.Text("adventure_handleing", {num = value})
		self.progressE.LocalPosition = Vector2((value/100)*614, 0)
	end, function()
		self.qipao.Activity = false
		local islast
		if self.mData.compatibility > self.stage[#self.stage] then
			islast = _P.GetNextTarget(self) == self.mData.compatibility and self.curStage > #self.stage
		else
			islast = _P.GetNextTarget(self) == self.mData.compatibility
		end
		if self.curStage <= #self.stage
	 	then
			_P.OnCharterAnim(self,false,islast)
			self.curStage = self.curStage + 1
		else
			_P.OnCharterAnim(self,false,islast)
		end
	end)
end

--人物入场动画
function _P.OnCharterAnim(self,isReverse,isLast)
	self.contenBg.Activity = false
	self.continueBtn.Activity = false
	self.content.Text = _P.GetContent(self,isLast)
	if isReverse then
		self.character:DOAnchorPosX(BEGIN_POSX, 0.6)
	else
		self.character:DOAnchorPosX(END_POSX, 0.6):OnComplete(function()
			self.contenBg.Activity = true
			self.contenBg.LocalScale = Vector3.zero
			local t = self.contenBg:DOScale(1,0.7)
			t:SetEase(OutBack)
			self.continueBtn.Activity = true
		end)
	end
end

function _P.GetContent(self,islast)
	--第一次直接取评价值
	if self.curStage == 1 then
		return _P.GetContentByPoint(self,self.mData.compatibility/100)
	elseif islast then
		return _P.GetLastContent(self,self.mData.compatibility/100)
	elseif self.curStage == 2 then
		local index = math.min(self.curStage - 1, #self.randMatch)
		local randV = self.randMatch[index]
		return  _P.GetSecondContent(self,randV)
	elseif self.curStage == 3 then
		local index = math.min(self.curStage - 1, #self.randMatch)
		local randV = self.randMatch[index]
		return  _P.GetthirdContent(self,randV)
	end
	
end

function _P.GetLastContent(self, random)
	if random <= self.talkRandGroup3[#self.talkRandGroup3].value then
		return self.talkRandGroup3[#self.talkRandGroup3].key
	end
	for index=1,#self.talkRandGroup3 do
		if random > self.talkRandGroup3[index].value then
			local findIndex = math.max(1, index-1)
			return self.talkRandGroup3[findIndex].key
		end
	end
end

function _P.GetContentByPoint(self,random)
	if random <= self.talkGroup[#self.talkGroup].value then
		return self.talkGroup[#self.talkGroup].key
	end
	for index=1,#self.talkGroup do
		if random > self.talkGroup[index].value then
			local findIndex = math.max(1, index-1)
			return self.talkGroup[findIndex].key
		end
	end
end

-- 修改，暂时全部改成最大值，by:pyh
function _P.GetSecondContent(self,randv)
	return self.talkRandGroup1[1].key
end

-- 修改，暂时全部改成最大值，by:pyh
function _P.GetthirdContent(self,randv)
	return self.talkRandGroup2[1].key
end

function _P.GetNextTarget(self)
	--已经第三阶段
	if self.stage[#self.stage] == self.target then
		return self.mData.compatibility
	else
		if self.curStage <= #self.stage then
			if self.stage[self.curStage] < self.mData.compatibility then
				return self.stage[self.curStage]
			else
				return self.mData.compatibility
			end
		else
			return self.mData.compatibility
		end

	end
end

--点击继续
function _P.OnContinue(self, addExp)
	if _P.JudegeIsEnd(self) then
		--直接结算
		WindowMgr.Create("UAdventureReward",self.mData,addExp,function( ... )
			self:Destroy()
		end)
	else
		--下一个阶段
		_P.OnCharterAnim(self,true)
		_P.OnInitAnim(self,self.startVal,self.target)
	end
end

--界面构造
function _M:OnCreate(data, isDown, taskId, OnClose)
	local module = self:CreateMoudle(self._RootNode, "M_Adventure_Handleing")
	self.mModule = module

	self.OnCloseCall = OnClose
	self.adventureCsv = Csv.Adventure[data.actId]
	self.advEventCsv = Csv.AdventureMainEvent[taskId]
	self.mData = data
	self.fillData = data.compatibility

	self.pause = false
	self.stop = false
	self.startVal = 0
	self.Bg = module:Get("BG")
	self.qipao = module:Get("qipao")
	self.slider = module:Get("Fill")
	self.sliderText = module:Get("SliderNum")
	self.sgirl = module:Get("DB_SecretaryGirl")
	self.character = module:Get("Bsx")
	self.contenBg = module:Get("Dhk") 
	self.content = module:Get("DhxText")
	self.continueBtn = module:Get("Btn")
	module:Get("BtnText").Text = Csv.Text("adventure_continue")

	self.progressE = module:Get("progressActor")
	CCommon.CreateEffect(self.progressE, 10154)

	SoundMgr.PlayMusic(BGMUSIC)
	self.stage = {}
	for i=1,#self.adventureCsv.popTarget do
		self.stage[i] = self.adventureCsv.popTarget[i][1]
		if i <= 3 then
			module:Get("Kedu"..i).LocalPosition = Vector2((self.stage[i]/100) * 614, 0)
		end
	end
	for i=1,4 do
		module:Get("QIPAO"..i).Alpha = 0
	end

	self.randMatch = {}
	for k,v in pairs(data.randMatch) do
		self.randMatch[k] = v 
	end

	self.talkGroup = {}
	for k,v in pairs(self.advEventCsv.talkGroup) do
		table.insert(self.talkGroup,{key = k, value = v})
	end
	table.sort(self.talkGroup, function(a,b)
		return a.value > b.value
	end)

	self.talkRandGroup1 = {}
	for k,v in pairs(self.advEventCsv.talkrandomGroup1) do
		table.insert(self.talkRandGroup1,{key = k, value = v})
	end
	table.sort(self.talkRandGroup1, function(a,b)
		return a.value > b.value
	end)

	self.talkRandGroup2 = {}
	for k,v in pairs(self.advEventCsv.talkrandomGroup2) do
		table.insert(self.talkRandGroup2,{key = k, value = v})
	end
	table.sort(self.talkRandGroup2, function(a,b)
		return a.value > b.value
	end)

	self.talkRandGroup3 = {}
	for k,v in pairs(self.advEventCsv.talkrandomGroup3) do
		table.insert(self.talkRandGroup3,{key = k, value = v})
	end
	table.sort(self.talkRandGroup3, function(a,b)
		return a.value > b.value
	end)

	CCommon.CreateEffect(self.sgirl, 20003)
	self.sgirl.LocalScale = Vector3(0.4,0.4,0.4)
	self.sgirl.LocalPosition = Vector2(20,-900)
	self.Bg.SpriteName = self.advEventCsv.talkBg

	self.target = self.stage[1]
	self.curStage = 1
	self.continueBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		local addExp = (isDown and 0) or self.advEventCsv.addExp
		_P.OnContinue(self, addExp)
	end, nil, 1.2)

	_P.OnInitAnim(self,self.startVal,self.target)
	_P.PopAnim(self,true)
	
end

return _M