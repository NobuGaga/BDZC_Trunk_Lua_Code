-- 分解成功界面
local WindowBase = JRequire "Libs.WindowMgr.WindowBase"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local CCommon = JRequire "Dev.Common.CCommon"
local CCar = JRequire "Dev.Car.CCar"
local MCar = JRequire "Dev.Car.MCar"

local _M = Class(WindowBase)
local _P = {}
local _R = {}


function _M:OnPopCreate( ... )
	self:OnCreate(...)
end


--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end


function _M:EndDestroy( ... )
	if self.OnCloseCall ~= nil then
		self.OnCloseCall()
	end
end


--界面构建
function _M:OnCreate(carid, getList, onClose)
	local module = self:CreateMoudle(self._RootNode, "M_Car_Decompose_Success")
	self.mModule = module
	self.OnCloseCall = onClose

	local carConf = Csv.Car[carid]
	local itemConf = Csv.Item[carid]
	local confirmBtn = module:Get("C_Btn_b")
	confirmBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		self:Destroy()
	end, nil, 0.9)

	if itemConf and carConf then
		local strColor = Csv.ItemColor[itemConf.color].str
		module:Get("Tips").Text = Csv.Text("car_decompose_successTip", {name = Csv.Text("common_color", {num = strColor, name = "【" .. carConf.name .. '】'})})
	end

	module:Get("Title").Text = Csv.Text("car_decompose_success")
	module:Get("C_text").Text = Csv.Text("common_sure")
	module:Get("Get").Text = Csv.Text("car_decompose_tip3")

	_P.SetCarData(self, getList)
end


function _P.SetCarData(self, getList)
	local itemContent = self.mModule:Get("Content")

	if getList then
		for k,v in pairs(getList) do
			CCommon.CreateItem(itemContent, v.key, nil, {num = v.value})
		end
	end
end


return _M