local WindowBase = JRequire"Libs.WindowMgr.WindowBase"
local WindowType = JRequire "Libs.WindowMgr.WindowType"
local CCommon = JRequire"Dev.Common.CCommon"
local SoundMgr = JRequire "Libs.Sound.SoundMgr"
local MVipWelfare = JRequire"Dev.VIPWelfare.MVipWelfare"
local MPlayer = JRequire "Dev.Player.MPlayer"
--@RefType [Dev.RedPacket.MRedpacket.bytes#_M]
local MRedpacket = JRequire"Dev.RedPacket.MRedpacket"

local _M = Class(WindowBase)
local _P = {}
local _R = {}

--事件派发
function _M:Dispatch(funcName, ...)
	local fun = _R[funcName]
	if fun ~= nil then 
		fun(self, ...)
	end
end

function _P.CloseView(self, onCloseCallback)
	self:Destroy()
	if onCloseCallback then
		onCloseCallback()
	end
end

function _M:OnCreate(data, onCloseCallback)
	self._EventNode:AddOnClick(function ()
		SoundMgr.Play(10001)
		_P.CloseView(self, onCloseCallback)
	end)
	
	local data = MRedpacket.redPackInfo
	if data == nil then
		_P.CloseView(self, onCloseCallback)
	end

	local moudle = self:CreateMoudle(self._RootNode,"M_Election_Red4")
	self.mMoudle = moudle
	local closeBtn = moudle:Get("closeBtn")
	closeBtn:AddOnButton(function ( ... )
		SoundMgr.Play(10002)
		_P.CloseView(self, onCloseCallback)
	end, nil, 1.2)

	local content = moudle:Get("content")
	local allNum = moudle:Get("Num1")
	local headIcon = moudle:Get("Head")
	local nameText = moudle:Get("Name")
	local tips1 = moudle:Get("Tips1")

	local packetMsg = data.redPacket
	
	local headMsg = data.redPacket.senderHead
	headIcon.SpriteName = MPlayer.GetOtherHeadYuanIcon(headMsg.headid, headMsg.gender)
	nameText.Text = packetMsg.senderName
	allNum.Text = Csv.Text("redpacket_look_all",{num = packetMsg.gold})
	tips1.Text = Csv.Text("redpacket_look_get",{cur = packetMsg.receivedNum,max = packetMsg.packetNum,num = packetMsg.leftGold})
	
	local itemList = {}
	local lists = packetMsg.receiverList
	
	if lists ~= nil then
		for k,v in pairs(lists)do
			itemMoudle = JGuiManager.GetMoudle(content, "M_Election_GotItem", WindowType.UI, 10)
			local sHead = itemMoudle:Get("Head")
			local sName = itemMoudle:Get("Name")
			local sNum = itemMoudle:Get("ZsNum")
			local line = itemMoudle:Get("line")
			local best = itemMoudle:Get("Good")

			sHead.SpriteName = MPlayer.GetOtherHeadYuanIcon(v.head.headid, v.head.gender)
			sName.Text = v.playerName
			sNum.Text = v.gold
			line.Activity = false
			best.Activity = false

			if v.playerName == MPlayer.GetName() then
				line.Activity = true
				itemMoudle.SelfRect.CachedTran:SetSiblingIndex(0)
			end

			itemList[v.playerId] = itemMoudle
			--table.insert(itemList,itemMoudle)
		end
	end
	self.mItemList = itemList

	_P.SetBasePlayer(self,packetMsg)
end

function _P.SetBasePlayer(self,data)
	local itemList = self.mItemList
	if data.receivedNum >= data.packetNum then
		local maxNum = 0
		local baseId = -1
		for k,v in pairs(data.receiverList)do
			if v.gold > maxNum then
				baseId = v.playerId
				maxNum = v.gold
			end
		end

		local baseItem = itemList[baseId]
		if baseItem ~= nil then
			local baseImg = baseItem:Get("Good")
			baseImg.Activity = true
		end
	end
end

return _M